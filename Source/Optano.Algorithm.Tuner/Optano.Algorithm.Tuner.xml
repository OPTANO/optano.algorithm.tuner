<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Optano.Algorithm.Tuner</name>
    </assembly>
    <members>
        <member name="T:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames">
            <summary>
            Contains names used for Akka.NET objects that get used multiple times throughout the solution.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.ActorSystemName">
            <summary>
            The name for the actor system employed by master and worker.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.ResultStorageActor">
            <summary>
            The name for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> instance.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.GenerationEvaluationActor">
            <summary>
            The name for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/> instance.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.EvaluationActorRouter">
            <summary>
            The name for the router, who is managing the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> instances.
            This router is responsible for starting new evaluation actors, whenever a node joins the cluster.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.CommonAkkaConfigFileName">
            <summary>
            The path to common HOCON configuration used for both master and worker.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.AkkaConfiguration.AkkaNames.ExtensiveAkkaLoggingFileName">
            <summary>
            The path to HOCON configuration that activates Akka logging on debug level.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.AkkaConfiguration.NetworkUtils">
            <summary>
            Utility methods for networking.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.AkkaConfiguration.NetworkUtils.GetFullyQualifiedDomainName">
            <summary>
            Gets the fully qualified domain name.
            </summary>
            <returns>
            The FQDN.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration">
            <summary>
            Relevant parameters for OPTANO Algorithm Tuner.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration._maximumNumberParallelEvaluations">
            <summary>
            Private field corresponding to <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelEvaluations"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DistanceMetric">
            <summary>
            Gets the distance metric to use during genetic engineering.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TrackConvergenceBehavior">
            <summary>
            Gets a value indicating whether the convergence behavior should get evaluated and logged.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EnableRacing">
            <summary>
            Gets a value indicating whether racing should be enabled.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationSize">
            <summary>
            Gets the total population size.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EvaluationLimit">
            <summary>
            Gets the maximum number of evaluations, i. e. runs of configuration - instance combinations, which should
            be done. Program is terminated after the first generation which meets the limit.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Generations">
            <summary>
            Gets the total number of generations.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ContinuousOptimizationMethod">
            <summary>
            Gets the continuous optimization method to combine GGA(++) with.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerations">
            <summary>
            Gets the maximum number of generations per GGA phase.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerationsWithSameIncumbent">
            <summary>
            Gets the maximum number of consecutive GGA generations in which no new incumbent is found.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxGenomeAge">
            <summary>
            Gets the maximum number of generations a genome can survive.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumMiniTournamentSize">
            <summary>
            Gets the maximum size of a mini tournament.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TournamentWinnerPercentage">
            <summary>
            Gets the percentage of winners per mini tournament.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CpuTimeout">
            <summary>
            Gets the CPU timeout for a single target algorithm run.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CrossoverSwitchProbability">
            <summary>
            Gets the probability that we switch between parents when doing a crossover and deciding on the value of a
            parameter that has different values for both parents and has a parent parameter in the parameter tree which
            also has different values for both parents.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MutationRate">
            <summary>
            Gets the probability that a parameter is mutated.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MutationVariancePercentage">
            <summary>
            Gets the percentage of the variable's domain that is used to determine the variance for Gaussian mutation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRepairAttempts">
            <summary>
            Gets the maximum number of attempts to repair a genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberConsecutiveFailuresPerEvaluation">
            <summary>
            Gets the maximum number of tries to evaluate a genome - instance combination and tolerating a failure in a
            row. If more failures occur, the whole program will be stopped.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StartNumInstances">
            <summary>
            Gets the number of instances to use for evaluation at the start of the tuning.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EndNumInstances">
            <summary>
            Gets the number of instances to use for evaluation at the end of the tuning.
            At least at high as <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StartNumInstances" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.GoalGeneration">
            <summary>
            Gets the generation after which <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EndNumInstances" /> should be used.
            At most as high as <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Generations" /> - 1.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelEvaluations">
            <summary>
            Gets the maximum number of parallel evaluations allowed per node.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelThreads">
            <summary>
            Gets the maximum number of parallel threads allowed per node.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AkkaConfiguration">
            <summary>
            Gets configuration for Akka.NET.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Verbosity">
            <summary>
            Gets how detailed the console output should be.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EngineeredPopulationRatio">
            <summary>
            Gets the proportion of engineered genomes to the total genome population.
            Default: 0.3.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StartEngineeringAtIteration">
            <summary>
            Gets the iteration at which the genetic engineering crossover is used.
            Default: 3.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationMutantRatio">
            <summary>
            Gets the percentage of randomly selected non competitive genomes that get replaced by newly generated ones after each generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TopPerformerThreshold">
            <summary>
            Gets the threshold (percentage wise), below which a genome is considered to be a top performer.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StatusFileDirectory">
            <summary>
            Gets the path to the status file directory.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ZipOldStatusFiles">
            <summary>
            Gets a value indicating whether to zip old status files.
            If set to <c>false</c>, old status files are overwritten.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ZippedStatusFileDirectory">
            <summary>
            Gets the path to the directory holding zip files containing old states of the status directory.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.LogFilePath">
            <summary>
            Gets the path to the log file.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ScoreGenerationHistory">
            <summary>
            Gets a value indicating whether the generation history logged at the end of the tuning should include
            average scores on the complete instance sets.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TrainModel">
            <summary>
            Gets a value indicating whether a performance model should be trained even if genetic engineering and
            sexual selection are turned off.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EnableSexualSelection">
            <summary>
            Gets a value indicating whether an attractiveness measure should be considered during the selection of
            non-competitive mates.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StrictCompatibilityCheck">
            <summary>
            Gets a value indicating whether the compatibility check executed in case of a continued run should check
            for logical continuity.
            If this is set to false, OPTANO Algorithm Tuner only validates if the configurations fit together in a
            technical sense.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CrossoverProbabilityCompetitive">
            <summary>
            Gets the probability with which a non-fixed parameter will be selected from the competitive genome during
            genetic engineering.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.HammingDistanceRelativeThreshold">
            <summary>
            Gets the relative difference threshold of a parameter value between an engineered offspring candidate and
            an existing genome above which the feature of will count towards the
            <see cref="F:Optano.Algorithm.Tuner.Configuration.DistanceMetric.HammingDistance"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TargetSamplingSize">
            <summary>
            Gets the number of random samples to generate per reachable leaf during GeneticEngineering.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance">
            <summary>
            Gets the influence factor for the 'distance' between a potential offspring and the existing population when scoring potential offspring.
            Potential offspring with lowest combination of 'Predicted Rank' - 'DistanceCompensation' is selected as offspring. (For each TournamentWinner).
            Default: 0.2 * <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumMiniTournamentSize"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.FeatureSubsetRatioForDistanceComputation">
            <summary>
            Gets the number of randomly selected features to use to compute distances between genomes during genetic engineering.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AddDefaultGenome">
            <summary>
            Gets a value indicating whether to include a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> that uses the target algorithm's default values (if specified).
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DetailedConfigurations">
            <summary>
            Gets further configurations which are relevant for specific parts of OPTANO Algorithm Tuner.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ExtractDetailedConfiguration``1(System.String)">
            <summary>
            Extracts a configuration from <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DetailedConfigurations"/>.
            </summary>
            <typeparam name="TConfiguration">The expected type of the configuration.</typeparam>
            <param name="identifier">The configuration's identifier.</param>
            <returns>The extracted configuration.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            Thrown if there is no fitting key in <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DetailedConfigurations"/>.
            </exception>
            <exception cref="T:System.InvalidCastException">
            Thrown if the configuration with identifier <paramref name="identifier"/> is not of the expected type.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>s are compatible for one to be used in a
            continued tuning based on a tuning using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>s are compatible in a technical sense for one
            to be used in a continued tuning based on a tuning using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued tuning looks like a longer single tuning.</para>
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Validate">
            <summary>
            Checks relationships between properties.
            May write warnings or throw <see cref="T:System.ArgumentException"/>s.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder">
            <summary>
            Builder for <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultStatusFileDirectory">
            <summary>
            By default, the status files should be written to a folder 'status' in the current directory.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultContinuousOptimizationMethod">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ContinuousOptimizationMethod"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMaximumNumberGgaGenerations">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerations"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMaximumNumberGgaGenerationsWithSameIncumbent">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerationsWithSameIncumbent"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultEnableRacing">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EnableRacing"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMutationRate">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MutationRate"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultPopulationMutantRatio">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationMutantRatio"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultTargetSamplingSize">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TargetSamplingSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultPopulationSize">
            <summary>
            The default value for <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._populationSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultEvaluationLimit">
            <summary>
            The default value for <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._evaluationLimit"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMaximumMiniTournamentSize">
            <summary>
            The default value for <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumMiniTournamentSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMaxRanksCompensatedByDistance">
            <summary>
            The default value for <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maxRanksCompensatedByDistance"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultAddDefaultGenome">
            <summary>
            The default value for <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._addDefaultGenome"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._detailedConfigurationBuilders">
            <summary>
            Builders which create <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DetailedConfigurations"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._akkaConfiguration">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AkkaConfiguration" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._cpuTimeout">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CpuTimeout" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._crossoverSwitchProbability">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CrossoverSwitchProbability" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._endNumInstances">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EndNumInstances" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._generations">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Generations" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._evaluationLimit">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EvaluationLimit"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._goalGeneration">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.GoalGeneration" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._continuousOptimizationMethod">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ContinuousOptimizationMethod"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumNumberGgaGenerations">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerations"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumNumberGgaGenerationsWithSameIncumbent">
            <summary>
            The value to set for
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberGgaGenerationsWithSameIncumbent"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maxGenomeAge">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxGenomeAge" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumMiniTournamentSize">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumMiniTournamentSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maxRepairAttempts">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRepairAttempts" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumNumberConsecutiveFailuresPerEvaluation">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberConsecutiveFailuresPerEvaluation"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._mutationRate">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MutationRate" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._mutationVariancePercentage">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MutationVariancePercentage" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._populationSize">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationSize" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._startNumInstances">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StartNumInstances" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._tournamentWinnerPercentage">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TournamentWinnerPercentage" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._enableRacing">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EnableRacing" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._verbosity">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Verbosity" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._trainModel">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TrainModel"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._engineeredPopulationRatio">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EngineeredPopulationRatio" />.
            The proportion of engineered genomes of the total genome population.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._populationMutantRatio">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationMutantRatio"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._startEngineeringAtIteration">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StartEngineeringAtIteration" />.
            The iteration at which the model based approach should be incorporated in the search.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._topPerformerThreshold">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TopPerformerThreshold" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._statusFileDirectory">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StatusFileDirectory"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._zipOldStatusFiles">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ZipOldStatusFiles"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._enableSexualSelection">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EnableSexualSelection"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._crossoverProbabilityCompetitive">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CrossoverProbabilityCompetitive"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._hammingDistanceRelativeThreshold">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.HammingDistanceRelativeThreshold"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._targetSampleSize">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TargetSamplingSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maxRanksCompensatedByDistance">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._featureSubsetRatioForDistance">
            <summary>
            The value to set for
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.FeatureSubsetRatioForDistanceComputation"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._trackConvergenceBehavior">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.TrackConvergenceBehavior"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._distanceMetric">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DistanceMetric"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._logFilePath">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.LogFilePath"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._scoreGenerationHistory">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ScoreGenerationHistory"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumNumberParallelEvaluations">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelEvaluations"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._maximumNumberParallelThreads">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelThreads"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._addDefaultGenome">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AddDefaultGenome"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.Verbosity">
            <summary>
            Gets the current value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.Verbosity"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.StrictCompatibilityCheck">
            <summary>
            Gets the value to set for <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.StrictCompatibilityCheck"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.Build(System.Int32)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration" />.
            </summary>
            <param name="maximumNumberParallelEvaluations">
            The maximum number of parallel evaluations allowed per node.
            </param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration" />.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.Build">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration" />.
            </summary>
            Make sure to call <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberParallelEvaluations(System.Int32)"/>, as the value needs to be larger than 0.
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration" />.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/>.
            May be null. In that case, defaults are used as fallback.
            Needs to be of type <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> if it is not null.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.AddDetailedConfigurationBuilder(System.String,Optano.Algorithm.Tuner.Configuration.IConfigBuilder{Optano.Algorithm.Tuner.Configuration.ConfigurationBase})">
            <summary>
            Adds a <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/> building a <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> which
            is relevant for a specific part of OPTANO Algorithm Tuner.
            </summary>
            <param name="key">The key to add the builder (and later the configuration) at.</param>
            <param name="detailedConfigurationBuilder">
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/> to add.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberParallelEvaluations(System.Int32)">
            <summary>
            Sets the maximum number of parallel evaluations allowed per computing node.
            </summary>
            <param name="maximumNumberParallelEvaluations">The positive number of allowed parallel evalutations.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberParallelThreads(System.Int32)">
            <summary>
            Sets the maximum number of parallel threads allowed per computing node.
            </summary>
            <param name="maximumNumberParallelThreads">The positive number of allowed parallel threads.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetEnableRacing(System.Boolean)">
            <summary>
            Sets whether racing should be enabled. Default is false.
            </summary>
            <param name="enableRacing">Whether or not enable racing.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetPopulationSize(System.Int32)">
            <summary>
            Sets the total population size. Default is 100.
            </summary>
            <param name="populationSize">The population size, at least 2.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the population size is less than 2.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetEvaluationLimit(System.Int32)">
            <summary>
            Sets the maximum number of evaluations, i. e. runs of configuration - instance combinations, which should
            be done. Program is terminated after the first generation which meets the limit.
            <para>Default is <see cref="F:System.Int32.MaxValue"/>.</para>
            </summary>
            <param name="limit">Maximum number of evaluations.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the number of evaluations is negative.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetGenerations(System.Int32)">
            <summary>
            Sets the total number of generations. Default is 100.
            </summary>
            <param name="generations">Total number of generations, at least 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of generations is less than 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetContinuousOptimizationMethod(Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod)">
            <summary>
            Sets the continuous optimization method to combine GGA(++) with.
            <para>
            Default is <see cref="F:Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod.None"/>.
            </para>
            </summary>
            <param name="method">The <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ContinuousOptimizationMethod"/> to use.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of generations is less than 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberGgaGenerations(System.Int32)">
            <summary>
            Sets the maximum number of generations per GGA phase. Default is <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="number">Maximum number of generations per GGA phase, at least 0.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of generations is negative.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberGgaGenerationsWithSameIncumbent(System.Int32)">
            <summary>
            Sets the maximum number of consecutive GGA generations in which no new incumbent is found.
            Default is <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="number">
            Maximum number of consecutive GGA generations in which no new incumbent is found, at least 1.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number of generations is negative.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaxGenomeAge(System.Int32)">
            <summary>
            Sets the maximum number of generations a genome can survive. Default is 3.
            </summary>
            <param name="maxGenomeAge">Maximum genome age, at least 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the maximum genome age is set to less than 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumMiniTournamentSize(System.Int32)">
            <summary>
            Sets the maximum size of a mini tournament. Default is 8.
            </summary>
            <param name="maxMiniTournamentSize">Maximum size of a mini tournament, at least 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the maximum mini tournament size is set to less
            than 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetTournamentWinnerPercentage(System.Double)">
            <summary>
            Sets the percentage of winners per mini tournament. Default is 0.125.
            </summary>
            <param name="percentage">Percentage as a value between 0 and 1 (both excluded).</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the percentage is not a value between 0 and 1, both excluded.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetCpuTimeout(System.TimeSpan)">
            <summary>
            Sets the CPU timeout for a single target algorithm run.
            Default is <see cref="F:System.Int32.MaxValue" /> milliseconds.
            </summary>
            <param name="cpuTimeout">CPU timeout. Must be positive.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the provided CPU timeout is nonpositive.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetCrossoverSwitchProbability(System.Double)">
            <summary>
            Sets the probability that we switch between parents when doing a crossover and deciding on the value of a
            parameter that has different values for both parents and has a parent parameter in the parameter tree which
            also has different values for both parents. Default is 0.1.
            </summary>
            <param name="probability">Probability as value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the probability is not a value between 0 and 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMutationRate(System.Double)">
            <summary>
            Sets the probability that a new individual's gene gets mutated. Default is 0.1.
            </summary>
            <param name="mutationRate">Mutation rate as a value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the mutation rate is not given as a value
            between 0 and 1.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMutationVariancePercentage(System.Double)">
            <summary>
            Sets the percentage of a variable's domain that is used to determine the variance for Gaussian mutation.
            </summary>
            <param name="percentage">Percentage as a positive value of at most 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaxRepairAttempts(System.Int32)">
            <summary>
            Sets the maximum number of attempts to repair a genome. Default is 20.
            </summary>
            <param name="maxRepairAttempts">Maximum number of attempts, at least 0.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the maximum number of repair attempts is a negative value.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaximumNumberConsecutiveFailuresPerEvaluation(System.Int32)">
            <summary>
            Sets the maximum number of tries to evaluate a genome - instance combination and tolerating a failure
            in a row. Default is 3.
            </summary>
            <param name="maximumNumberFailures">Maximum number of failures, at least 0.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the maximum number of tries is a negative value.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetInstanceNumbers(System.Int32,System.Int32)">
            <summary>
            Sets the number of instances to use for evaluation at the start and the end of the tuning.
            Default numbers are 5 and 100.
            Number will be increased linearly until generation <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.GoalGeneration" />.
            </summary>
            <param name="startNumInstances">Number of instances at the beginning.</param>
            <param name="endNumInstances">
            Number of instances at the end. Has to be at least as large as
            <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder._startNumInstances" />.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the specified number of instances is negative.</exception>
            <exception cref="T:System.ArgumentException">
            Thrown if the specified number of instances at the end is less
            than the one at the start.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetGoalGeneration(System.Int32)">
            <summary>
            Sets the generation after which <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EndNumInstances" /> should be used.
            Default is 74.
            </summary>
            <param name="goalGeneration">The generation number, at least 0.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the specified generation number is negative.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetAkkaConfiguration(Akka.Configuration.Config)">
            <summary>
            Sets configuration for Akka.NET. Default is the one found in the current application's config file.
            </summary>
            <param name="akkaConfiguration">The Akka.NET configuration.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetVerbosity(Optano.Algorithm.Tuner.Logging.VerbosityLevel)">
            <summary>
            Sets how detailed the console output should be. Default is <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info" />.
            </summary>
            <param name="verbosityLevel">The level of verbosity.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetTrainModel(System.Boolean)">
            <summary>
            Sets whether a performance model should be trained even if genetic engineering and
            sexual selection are turned off.
            Default is false.
            </summary>
            <param name="train">True to train the model.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetEngineeredProportion(System.Double)">
            <summary>
            Sets the percentage of genomes that should be genetically engineered in every generation.
            Default is 0.
            </summary>
            <param name="engineeredProportion">Percentage as a positive value of at most 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetPopulationMutantRatio(System.Double)">
            <summary>
            Sets the ratio of randomly selected <c>non competitive</c> genomes that get replaced by newly generated random genomes after each generation. Default is 0.25.
            </summary>
            <param name="percentage">Percentage as value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if percentage is not between 0 and 1.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetStartEngineeringAtIteration(System.Int32)">
            <summary>
            Sets the iteration number after which the genetic engineering should be incorporated in the tuning.
            </summary>
            <param name="startEngineeringAtIteration">Percentage as a positive value of at most 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetTopPerformerThreshold(System.Double)">
            <summary>
            Sets the percentage of genomes that are considered to be 'top performers' during model based approach.
            </summary>
            <param name="topThreshold">Percentage as a positive value of at most 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetEnableSexualSelection(System.Boolean)">
            <summary>
            Set a value indicating whether an attractiveness measure should be considered during the selection of non-competitive mates.
            The attractiveness of a genome refers to the rank that is predicted for it by the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> random forest.
            </summary>
            <param name="sexualSelection">True to enable attractiveness-based selection.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetStrictCompatibilityCheck(System.Boolean)">
            <summary>
            Sets whether the compatibility check executed in case of a continued run should check for logical
            continuity.
            If this is set to false, OPTANO Algorithm Tuner only validates if the configurations fit together in a
            technical sense.
            Default is true. Only change if you know what you are doing.
            </summary>
            <param name="useStrictCheck">False to disable continuity check.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetCrossoverProbabilityCompetitive(System.Double)">
            <summary>
            Sets the probability with which a non-fixed parameter will be selected from the <c>competitive</c>
            genome during the targeted sampling of
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/>. Default is 0.5.
            </summary>
            <param name="crossoverProbabilityCompetitive">Probability as value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetHammingDistanceRelativeThreshold(System.Double)">
            <summary>
            Sets the relative threshold above which 2 compared features are considered to be different.
            </summary>
            <param name="hammingDistanceRelativeThreshold">Threshold as a value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetTargetSampleSize(System.Int32)">
            <summary>
            Number of samples to generate per leaf dring targeted sampling.
            Default: <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultTargetSamplingSize"/>.
            </summary>
            <param name="targetSampleSize">Positive number of samples.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetMaxRanksCompensatedByDistance(System.Double)">
            <summary>
            Number of samples to generate per leaf dring targeted sampling.
            Default: <see cref="F:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.DefaultMaxRanksCompensatedByDistance"/> (= 1.6).
            Min value: 0.
            </summary>
            <param name="maxRanksCompensatedByDistance">
            The maximum number Ranks Compensated By Distance.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetFeatureSubsetRatioForDistance(System.Double)">
            <summary>
            Ratio of features to use for distance computations during GeneticEngineering.
            Default: 0.3.
            </summary>
            <param name="featureSubsetRatioForDistance">Ratio as value between 0 and 1.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetTrackConvergenceBehavior(System.Boolean)">
            <summary>
            True for computing convergence behavior after a tournaments are finished.
            Default: false.
            </summary>
            <param name="trackConvergenceBehavior">True to enable tracking convergence behavior.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetDistanceMetric(System.String)">
            <summary>
            Converts the given <paramref name="distanceMetricName"/> to a member of the
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DistanceMetric"/> enum.
            Throws an <see cref="T:System.ArgumentException"/> if conversion fails.
            </summary>
            <param name="distanceMetricName">String representation of a <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DistanceMetric"/>
            value.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetStatusFileDirectory(System.String)">
            <summary>
            Sets the path to the status file directory. Default is PATH_TO_CURRENT_DIRECTORY/status.
            </summary>
            <param name="directory">Absolute path to status file directory.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetZipOldStatusFiles(System.Boolean)">
            <summary>
            Sets the value indicating whether old status files should be zipped instead of overwritten.
            Default is <c>false</c>.
            </summary>
            <param name="zip">Whether old status files should be zipped instead of overwritten.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetLogFilePath(System.String)">
            <summary>
            Sets the path to the log file. Default is PATH_TO_CURRENT_DIRECTORY/tunerLog.txt.
            </summary>
            <param name="logFilePath">Absolute path where the log file should be written to.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetScoreGenerationHistory(System.Boolean)">
            <summary>
            Sets a value indicating whether the generation history logged at the end of the tuning should include
            average scores on the complete instance sets. Default is false.
            </summary>
            <param name="score">Whether to include average scores on the complete instance sets.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.SetAddDefaultGenome(System.Boolean)">
            <summary>
            Sets whether a default value genome is added to the population.
            </summary>
            <param name="addDefaultGenome">Whether or not to add a default value genome in the population.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.CreateDetailedConfigurations(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Creates the detailed configurations.
            </summary>
            <param name="fallback">The fallback.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils">
            <summary>
            Contains utility methods for argument parsing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])">
            <summary>
            Parses command line arguments.
            </summary>
            <param name="argsParser">Parser to interpret the arguments.</param>
            <param name="args">Arguments to parse.</param>
            <returns>Whether or not execution should be continued.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1">
            <summary>
            Argument Parser Helper that contains a generic <typeparamref name="TConfigBuilder"/>, which builds a Configuration for a given set of <see cref="T:string[]"/> arguments.
            </summary>
            <typeparam name="TConfigBuilder">
            The config builder used to build the current <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1"/> class.
            </summary>
            <param name="allowAdditionalArguments">
            True, if unknown arguments should be allowed when calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/>.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.ConfigurationBuilder">
            <summary>
            Gets a configuration builder configured with the parsed arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.Optano#Algorithm#Tuner#Configuration#ArgumentParsers#IConfigurationParser#ConfigurationBuilder">
            <summary>
            Gets a configuration builder configured with the parsed arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.InternalConfigurationBuilder">
            <summary>
            Gets a  configuration builder which gets configured when parsing the arguments.
            <remarks>
            Same as <see cref="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.ConfigurationBuilder"/>, but without the check that parsing has to be done.
            </remarks>
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase">
            <summary>
            Utility class for parsing command line arguments. Supports an argument --help / -h for printing useful
            information.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.HelpPrototypeText">
            <summary>
            The help parameter.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._allArguments">
            <summary>
            Gets or sets all console arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._helpTextRequested">
            <summary>
            A value indicating whether the parsed arguments requested the help text to be printed.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._parsingHappened">
            <summary>
            A value indicating whether <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" /> has already been called.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._preProcessingHappened">
            <summary>
            A value indicating whether <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> has processed preprocessing options yet.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._additionalArguments">
            <summary>
            List of arguments that could not be parsed when calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase._options">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.Options"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> class.
            </summary>
            <param name="allowAdditionalArguments">
            Whether unknown arguments should be allowed when calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/>.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.HelpTextRequested">
            <summary>
            Gets a value indicating whether the parsed arguments required the print of a help text.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.AdditionalArguments">
            <summary>
            Gets the list of arguments that could not be parsed when calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.AllArguments">
            <summary>
            Gets the list of all arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.Options">
            <summary>
            Gets the argument options that can be recognized by this parser.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.AllowAdditionalArguments">
            <summary>
            Gets a value indicating whether <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> should accept unknown arguments or not.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">
            Arguments to parse.
            </param>
            <exception cref="T:NDesk.Options.OptionException">
            Thrown if required parameters have not been set.
            </exception>
            <exception cref="T:System.AggregateException">
            Thrown if one or more arguments could not be interpreted.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.PrintHelp">
            <summary>
            Prints a description on how to use the command line arguments.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.PrintHelp(System.Boolean)">
            <summary>
            Prints a description on how to use the command line arguments.
            </summary>
            <param name="printHelpParameter">Indicates whether the help options should be printed.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ThrowExceptionIfNoParsingHasBeenDone">
            <summary>
            Checks if <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" /> has been called yet and throws an
            <see cref="T:System.InvalidOperationException" /> if that's not the case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ThrowExceptionIfNoPreprocessingHasBeenDone">
            <summary>
            Checks if <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" /> has processed preprocessing options yet and throws an
            <see cref="T:System.InvalidOperationException" /> if that's not the case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.FinishedParsing">
            <summary>
            Indicates that parsing is finished and hence makes it possible to read all properties.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.FinishedPreProcessing">
            <summary>
            Indicates that the preprocessing part of parsing is finished and hence makes it possible to read some
            properties.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.CreateOptionSet">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet" /> containing all options this parser can handle.
            </summary>
            <returns>The created <see cref="T:NDesk.Options.OptionSet" />.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.GetOptionsToPrint(System.Boolean)">
            <summary>
            Returns the options that should be printed.
            </summary>
            <param name="printHelpParameter">Indicates if help option should be printed.</param>
            <returns>The options to print.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser">
            <summary>
            A parser to convert command line arguments into a <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser.ConfigurationBuilder">
            <summary>
            Gets a configuration builder configured with the parsed arguments.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser.AdditionalArguments">
            <summary>
            Gets the list of arguments that could not be parsed when calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser.ParseArguments(System.String[])"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">
            Arguments to parse.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase">
            <summary>
            Base Class to derive all other Configurations from.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.CompatibilityTolerance">
            <summary>
            Tolerance used when comparing continuous parameters between 0 and 1 while deciding whether two
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible for one to be used in a continued run based on a run
            using the other.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.Indent">
            <summary>
            The indent to use for sub configurations in <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.ToString"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.CastToConfigurationType``1(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Casts a configuration of type <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> to the provided type.
            </summary>
            <typeparam name="TConfiguration">The type of the configuration.</typeparam>
            <param name="configuration">The configuration.</param>
            <returns>The cast configuration.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the cast is unsuccessful.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible for one to be used in a continued run
            based on a run using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible in a technical sense for one
            to be used in a continued run based on a run using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued run looks like a longer single run.</para>
            </summary>
            <param name="other">Configuration used for the start of run.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.DescribeSubConfiguration(System.String,Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the provided configuration.
            </summary>
            <param name="name">The configuration's name.</param>
            <param name="configuration">The configuration.</param>
            <returns>A <see cref="T:System.String"/> that represents the provided configuration.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod">
            <summary>
            The continuous optimization method to combine GGA(++) with.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod.None">
            <summary>
            No additional strategy; use pure GGA.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod.Jade">
            <summary>
            Differential evolution (DE) variant JADE (without archive).
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.ContinuousOptimizationMethod.CmaEs">
            <summary>
            Covariance Matrix Adaptation Evolutionary Strategy (CMA-ES).
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.DistanceMetric">
            <summary>
            Specifies a distance metric.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.DistanceMetric.L1Average">
            <summary>
            Measures the sum absolute differences between features.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Configuration.DistanceMetric.HammingDistance">
            <summary>
            Count the number of differing feature columns.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1">
            <summary>
             Interface that is implemented by ConfigBuilder Helpers.
            </summary>
            <typeparam name="TConfiguration">The configuration type that is built by this <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/>.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Builds a <typeparamref name="TConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <typeparamref name="TConfiguration"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <typeparamref name="TConfiguration"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> in real vector space which supports the transformations from and to a search space
            with box-constraints.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint._lowerBounds">
            <summary>
            Lower bounds by dimension.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint._upperBounds">
            <summary>
            Upper bounds by dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.#ctor(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/> class.
            </summary>
            <param name="values">
            The real-valued point to base this on.
            This is the internal representation, not the one in the boxed search space.
            <para>Use <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> to transform points from the actual search space.</para>
            </param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])">
            <summary>
            Standardizes box-constrained values from the search space s.t. they are in [0, 10].
            <para>Executing <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.MapIntoBounds"/> on standardized values returns the original values.</para>
            <remarks>
            Mapping is executed as specified in https://www.lri.fr/~hansen/cmaes_inmatlab.html#practical.
            </remarks>
            </summary>
            <param name="values">The values to standardize.</param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
            <returns>The standardized values.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.MapIntoBounds">
            <summary>
            Maps the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> into its box-constrained search space.
            </summary>
            <remarks>
            Mapping is executed as specified in https://www.lri.fr/~hansen/cmaes_inmatlab.html#practical.
            </remarks>
            <returns>The mapped point.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.ValidateBounds(System.Double[],System.Double[],System.Int32)">
            <summary>
            Checks that the bounds are valid, i.e.
            they are not null,
            they have the correct dimension,
            they are not infinite,
            and the lower bound is not greater than the upper one.
            </summary>
            <param name="lowerBounds">The lower bounds.</param>
            <param name="upperBounds">The upper bounds.</param>
            <param name="dimension">The dimension of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1">
            <summary>
            Covariance Matrix Adaptation Evolutionary Strategy as defined in Hansen, N.: The CMA Evolution Strategy: A
            Tutorial. In: CoRR abs/1604.00772 (2016) http://arxiv.org/abs/1604.00772.
            </summary>
            <typeparam name="TSearchPoint">Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by this CMA-ES instance.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Logger">
            <summary>
            <see cref="N:NLog"/> logger object.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._searchPointSorter">
            <summary>
            Specifies how to sort the <typeparamref name="TSearchPoint"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._searchPointFactory">
            <summary>
            Specifies how to create a <typeparamref name="TSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._terminationCriteria">
            <summary>
            A set of termination criteria to check in <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AnyTerminationCriterionMet"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._configuration">
            <summary>
            Fixed parameters for CMA-ES.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._currentCmaesGeneration">
            <summary>
            The current CMA-ES generation, often denoted g in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._distributionMean">
            <summary>
            The current distribution mean, often denoted m in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariances">
            <summary>
            The current covariance matrix, often denoted C in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariancesDecomposition">
            <summary>
            The current eigendecomposition of the covariance matrix.
            The complete matrix is often denoted C in literature, with decomposition C = B * D^2 * B^T.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._stepSize">
            <summary>
            The current step size, often denoted sigma in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._evolutionPath">
            <summary>
            The current evolution path: A sequence of successive steps the strategy took over a number of generations.
            Often denoted p_c in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._conjugateEvolutionPath">
            <summary>
            The conjugate evolution path: Similar to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._evolutionPath"/>, but independent on direction.
            Used for step-size control.
            Often denoted p_sigma in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.#ctor(Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter{`0},System.Func{MathNet.Numerics.LinearAlgebra.Vector{System.Double},`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> class.
            </summary>
            <param name="searchPointSorter">
            Object responsible for sorting <typeparamref name="TSearchPoint"/>s.
            </param>
            <param name="searchPointFactory">
            Responsible for creating <typeparamref name="TSearchPoint"/>s from <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> objects.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})">
            <summary>
            Initializes the object to begin a new run.
            </summary>
            <param name="configuration">The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> to use.</param>
            <param name="terminationCriteria">Criteria when to terminate the run.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.NextGeneration">
            <summary>
            Executes a single CMA-ES generation.
            </summary>
            <remarks><see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> needs to be called beforehand.</remarks>
            <returns>Current population, best individuals first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AnyTerminationCriterionMet">
            <summary>
            Checks whether any of <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._terminationCriteria"/> is met.
            </summary>
            <returns>True if and only if at least one of <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._terminationCriteria"/> is met.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.DumpStatus(System.String)">
            <summary>
            Writes all internal data to file.
            </summary>
            <param name="pathToStatusFile">Path to the file to write.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.UseStatusDump(System.String)">
            <summary>
            Reads all internal data from file.
            </summary>
            <param name="pathToStatusFile">Path to the file to read.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.SampleRandomDirections">
            <summary>
            Samples <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.PopulationSize"/> many vectors from N(0, I).
            </summary>
            <returns>The sampled vectors.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.SampleFromStandardNormal">
            <summary>
            Samples a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> of dimension <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.SearchSpaceDimension"/>
            from N(0, I).
            </summary>
            <returns>The sampled <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.BuildStepDirections(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})">
            <summary>
            Builds directions for steps.
            </summary>
            <param name="randomDirections">The N(0, I)-distributed directions to base the steps on.</param>
            <returns>Directions distributed according to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariances"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.CreatePopulation(System.Collections.Generic.IEnumerable{MathNet.Numerics.LinearAlgebra.Vector{System.Double}})">
            <summary>
            Creates a new population of <typeparamref name="TSearchPoint"/>s.
            </summary>
            <param name="stepDirections">Step directions distributed according to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariances"/>.</param>
            <returns>
            A population based on <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._distributionMean"/>, <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._stepSize"/>
            and <paramref name="stepDirections"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.ComputeUnscaledMeanStep(System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Computes the step of the distribution mean disregarding step-size.
            </summary>
            <param name="stepDirections">All step directions.</param>
            <param name="searchPointOrder">Indices of sorted points based on those directions, best first.</param>
            <returns>The computed step.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.UpdateStepSize(System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Executes step-size control.
            </summary>
            <param name="randomDirections">The N(0, I)-distributed directions.</param>
            <param name="searchPointOrder">Indices of sorted points based on those directions, best first.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AdaptCovariances(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adapts the covariance matrix and the evolution path.
            </summary>
            <param name="unscaledMeanStep">Step of the distribution mean disregarding step-size.</param>
            <param name="randomDirections">The N(0, I)-distributed directions.</param>
            <param name="stepDirections">All step directions.</param>
            <param name="searchPointOrder">Indices of sorted points based on those directions, best first.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.DecideStallingConstant">
            <summary>
            Decides whether update of <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._evolutionPath"/> should be stalled by returning a fitting factor.
            </summary>
            <returns>Either 0 or 1.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.ComputeRankMuUpdate(System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{MathNet.Numerics.LinearAlgebra.Vector{System.Double}},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Computes the matrix that should be added to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariances"/> due to rank-mu-update.
            </summary>
            <param name="randomDirections">The N(0, I)-distributed directions.</param>
            <param name="stepDirections">All step directions.</param>
            <param name="searchPointOrder">Indices of sorted points based on those directions, best first.</param>
            <returns>The matrix to add.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.ComputeCovarianceDecayFactor(System.Int32)">
            <summary>
            Compute decay factor for <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._covariances"/>.
            </summary>
            <param name="stallingConstant">
            Constant that was used when updating <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1._evolutionPath"/>, either 0 or 1.
            </param>
            <returns>The computed factor.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.CheckIsInitialized(System.String)">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> has been called.
            </summary>
            <param name="memberName">Name of calling method. Automatically set.</param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> has not been called so far.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.WrapData">
            <summary>
            Wraps internal data into a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration">
            <summary>
            Fixed parameters for CMA-ES.
            <para>
            Based on Hansen, N.: The CMA Evolution Strategy: A Tutorial. In: CoRR abs/1604.00772 (2016) http://arxiv.org/abs/1604.00772.
            </para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration._initialDistributionMean">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitialDistributionMean"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.#ctor(System.Int32,MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> class.
            </summary>
            <param name="populationSize">The population size, at least 2.</param>
            <param name="initialDistributionMean">The initial distribution mean.</param>
            <param name="initialStepSize">The positive initial step size.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.SearchSpaceDimension">
            <summary>
            Gets the dimension of the search space, often denoted n in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.PopulationSize">
            <summary>
            Gets the population size, often denoted lambda in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.ParentNumber">
            <summary>
            Gets the parent number, often denoted mu in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.Weights">
            <summary>
            Gets the recombination weights, often denoted w_i in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.VarianceEffectiveSelectionMass">
            <summary>
            Gets the variance effective selection mass, often denoted mu_eff in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.CumulationLearningRate">
            <summary>
            Gets the learning rate for cumulation for the rank-one update of the covariance matrix.
            Often denoted c_c in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.RankOneUpdateLearningRate">
            <summary>
            Gets the learning rate for the rank-one update of the covariance matrix update.
            Often denoted c_1 in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.RankMuUpdateLearningRate">
            <summary>
            Gets the learning rate for the rank-mu update of the covariance matrix update.
            Often denoted c_mu in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.StepSizeControlLearningRate">
            <summary>
            Gets the learning rate for the cumulation for the step-size control.
            Often denoted c_sigma in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.StepSizeControlDamping">
            <summary>
            Gets the damping parameter for step-size update.
            Often denoted d_sigma in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitialDistributionMean">
            <summary>
            Gets the initial distribution mean, often denoted m in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitialStepSize">
            <summary>
            Gets the initial step size, often denoted sigma in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.ComputeExpectedConjugateEvolutionPathLength">
            <summary>
            Computes the expected length of the conjugate evolution path, i.e. E||N(0, I)||.
            </summary>
            <returns>The computed expectation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitializeDefaultStrategyParameters">
            <summary>
            Initializes default strategy parameters as defined by Hansen, N.:
            The CMA Evolution Strategy: A Tutorial. In: CoRR abs/1604.00772 (2016) http://arxiv.org/abs/1604.00772.
            <para>The author states that in general, it is not recommended to change these settings.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.CreateConvexWeightShape">
            <summary>
            Creates convex weight shape s.t. the first half of the weights is positive and the latter half is negative.
            </summary>
            <returns>The created weights.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.ComputeVarianceEffectiveSelectionMass(System.Collections.Generic.List{System.Double})">
            <summary>
            Computes the variance effective selection mass (often denoted mu_eff), i.e. the fraction between the
            squared sum of the parent weights and the sum of the squared parents weights.
            </summary>
            <param name="unnormalizedWeights">The unnormalized weights.</param>
            <returns>The variance effective selection mass.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitializeStepSizeControlParameters">
            <summary>
            Initializes strategy parameters for step size control, i.e. <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.StepSizeControlLearningRate"/>
            and <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.StepSizeControlDamping"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitializeCovarianceMatrixAdaptationParameters">
            <summary>
            Initializes covariance matrix adaptation parameters, i.e. 
            <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.CumulationLearningRate"/>, <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.RankOneUpdateLearningRate"/> and
            <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.RankMuUpdateLearningRate"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitializeWeights(System.Collections.Generic.List{System.Double})">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.Weights"/>.
            </summary>
            <param name="unnormalizedWeights">The unscaled weights.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.ComputeNegativeWeightScalingConstant(System.Collections.Generic.List{System.Double})">
            <summary>
            Computes the constant to scale negative weights with.
            </summary>
            <param name="unnormalizedWeights">The unscaled weights.</param>
            <returns>The computed constant.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements">
            <summary>
            A wrapper exposing immutable versions of internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> elements to
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion"/> objects.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._distributionMean">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.DistributionMean"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._covariances">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.Covariances"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._covariancesDiagonal">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.CovariancesDiagonal"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._covariancesEigenVectors">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.CovariancesEigenVectors"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._evolutionPath">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.EvolutionPath"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements._conjugateEvolutionPath">
            <summary>
            Backing field for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.ConjugateEvolutionPath"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.#ctor(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Int32,MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double,MathNet.Numerics.LinearAlgebra.Matrix{System.Double},MathNet.Numerics.LinearAlgebra.Factorization.Evd{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> class.
            </summary>
            <param name="configuration">Fixed parameters for CMA-ES.</param>
            <param name="generation">The current generation.</param>
            <param name="distributionMean">The current distribution mean.</param>
            <param name="stepSize">The current step size.</param>
            <param name="covariances">The current covariance matrix.</param>
            <param name="covariancesDecomposition">The current eigendecomposition of the covariance matrix.</param>
            <param name="evolutionPath">The current evolution path.</param>
            <param name="conjugateEvolutionPath">The conjugate evolution path.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="generation"/> or <paramref name="stepSize"/> are negative.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.Configuration">
            <summary>
            Gets fixed parameters for CMA-ES.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.Generation">
            <summary>
            Gets the current generation, often denoted g in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.DistributionMean">
            <summary>
            Gets the current distribution mean, often denoted m in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.StepSize">
            <summary>
            Gets the current step size, often denoted sigma in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.Covariances">
            <summary>
            Gets the current covariance matrix, often denoted C in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.CovariancesDiagonal">
            <summary>
            Gets the diagonal matrix in the current eigendecomposition of the covariance matrix.
            The complete matrix is often denoted C in literature, with decomposition
            C = B * D^2 * B^T, D^2 being the returned matrix.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.CovariancesEigenVectors">
            <summary>
            Gets the orthogonal matrix in the current eigendecomposition of the covariance matrix.
            The complete matrix is often denoted C in literature, with decomposition
            C = B * D^2 * B^T, B being the returned matrix.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.EvolutionPath">
            <summary>
            Gets the current evolution path: A sequence of successive steps the strategy took over a number of
            generations.
            Often denoted p_c in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.ConjugateEvolutionPath">
            <summary>
            Gets the conjugate evolution path: Similar to <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.EvolutionPath"/>, but independent on direction.
            Used for step-size control.
            Often denoted p_sigma in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified">
            <summary>
            Determines whether this object is completely specified, i.e. no fields or properties are <c>null</c>.
            </summary>
            <remarks>Should be <c>true</c> once <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> has been run.</remarks>
            <returns>Whether this object is completely specified.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus">
            <summary>
            An object wrapping the current status of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.#ctor(System.Collections.Generic.List{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion},Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus"/> class.
            </summary>
            <param name="terminationCriteria">Criteria for termination.</param>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.TerminationCriteria">
            <summary>
            Gets the criteria for termination.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.Data">
            <summary>
            Gets internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Computes whether the criterion is met and <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> should be terminated.
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether the criterion is met.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> based on numerical stability:
            Stop if the condition number of the covariance matrix exceeds a certain number.
            <para>
            This criterion was defined in Auger A, Hansen N: A restart CMA evolution strategy with increasing population size.
            In Proceedings of the IEEE Congress on Evolutionary Computation, 2005.
            </para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.MaxCondition">
            <summary>
            The maximum condition number which does not lead to termination.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Checks whether the condition number of the covariance matrix exceeds <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.MaxCondition"/>.
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether the condition number exceeds <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.MaxCondition"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> which checks the number of iterations.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations._maximum">
            <summary>
            The maximum number of generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations"/> class.
            </summary>
            <param name="maximum">The maximum number of generations, at least 1.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Checks whether the current generation should be the last one.
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether the generation was the <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations._maximum"/>th one.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> based on numerical stability:
            Stop if adding a 0.1-standard deviation vector in any principal axis direction of the covariance matrix does
            not change the distribution mean.
            <para>
            This criterion was defined in Auger A, Hansen N: A restart CMA evolution strategy with increasing population size.
            In Proceedings of the IEEE Congress on Evolutionary Computation, 2005.
            </para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Checks adding a 0.1-standard deviation vector in a principal axis direction of the covariance matrix does
            not change the distribution mean.
            <para>Axis is chosen dependent on generation.</para>
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether no change occurred in distribution mean.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> based on numerical stability:
            Stop if adding a 0.2-standard deviation vector in any single coordinate does
            not change the distribution mean.
            <para>
            This criterion was defined in Hansen N. Benchmarking a BI-Population CMA-ES on the BBOB-2009 Function
            Testbed. In the workshop Proceedings of the Genetic and Evolutionary Computation
            Conference, GECCO, pages 2389–2395. ACM, 2009.
            </para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Checks adding a 0.2-standard deviation vector in any single coordinate does
            not change the distribution mean.
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether no change occurred in distribution mean.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma">
            <summary>
            Termination criterion for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> based on divergence:
            Stop if the factor between current and initial step size is greater than a constant times the square root
            of the covariance matrix's largest eigenvalue.
            <para>
            This criterion was defined in Hansen N. Benchmarking a BI-Population CMA-ES on the BBOB-2009 Function
            Testbed. In the workshop Proceedings of the Genetic and Evolutionary Computation
            Conference, GECCO, pages 2389–2395. ACM, 2009.
            </para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.MaxFactor">
            <summary>
            The maximum factor which does not lead to termination.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)">
            <summary>
            Checks if the factor between current and initial step size is greater than a <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.MaxFactor"/> times
            the square root of the covariance matrix's largest eigenvalue.
            </summary>
            <param name="data">Internal <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> data.</param>
            <returns>Whether the factor is greater.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1">
            <summary>
            Differential evolution (DE) variant JADE without archive as defined by J. Zhang and A. C. Sanderson,
            "JADE: Adaptive Differential Evolution With Optional External Archive," in IEEE Transactions on Evolutionary
            Computation, vol. 13, no. 5, pp. 945-958, Oct. 2009.
            </summary>
            <typeparam name="TSearchPoint">Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by this JADE instance.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Logger">
            <summary>
            <see cref="N:NLog"/> logger object.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._searchPointSorter">
            <summary>
            Specifies how to sort the <typeparamref name="TSearchPoint"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._searchPointFactory">
            <summary>
            Specifies how to create a <typeparamref name="TSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> and a parent.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._configuration">
            <summary>
            Configuration parameter for JADE.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._sortedPopulation">
            <summary>
            The current population sorted by performance, best <typeparamref name="TSearchPoint"/>s first.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._currentJadeGeneration">
            <summary>
            The current differential evolution generation, often denoted g in literature.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._maxJadeGenerations">
            <summary>
            The maximum number of differential evolution generations to run.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.#ctor(Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter{`0},System.Func{MathNet.Numerics.LinearAlgebra.Vector{System.Double},`0,`0},Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> class.
            </summary>
            <param name="searchPointSorter">
            Specifies how to sort the <typeparamref name="TSearchPoint"/>s.
            </param>
            <param name="searchPointFactory">
            Specifies how to create a <typeparamref name="TSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> and a parent.
            </param>
            <param name="configuration">The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> to use.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.MeanMutationFactor">
            <summary>
            Gets the current value of the mean mutation factor, often called mu_F in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.MeanCrossoverRate">
            <summary>
            Gets the current value of the mean crossover constant, often called mu_{CR} in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initializes the object to begin a new run.
            </summary>
            <param name="initialPositions">The initial population.</param>
            <param name="maxGenerations">The maximum number of generations to run.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.NextGeneration">
            <summary>
            Executes a single JADE generation.
            </summary>
            <remarks><see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> needs to be called beforehand.</remarks>
            <returns>Current population, best individuals first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AnyTerminationCriterionMet">
            <summary>
            Checks whether any termination criteria are met.
            </summary>
            <returns>Whether any termination criteria are met.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.DumpStatus(System.String)">
            <summary>
            Writes all internal data to file.
            </summary>
            <param name="pathToStatusFile">Path to the file to write.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.UseStatusDump(System.String)">
            <summary>
            Reads all internal data from file.
            </summary>
            <param name="pathToStatusFile">Path to the file to read.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Crossover(`0,MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double)">
            <summary>
            Generates a trial vector for the provided target point using binomial crossover.
            </summary>
            <param name="target">The <typeparamref name="TSearchPoint"/> to base the trial vector on.</param>
            <param name="donor">The <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> to use for replacement values.</param>
            <param name="crossoverRate">The crossover rate.</param>
            <returns>The generated trial vector.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.GenerateMutationFactor">
            <summary>
            Generates a mutation factor in [0, 1].
            </summary>
            <returns>The generated mutation factor.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.GenerateCrossoverRate">
            <summary>
            Generates a crossover rate in [0, 1].
            </summary>
            <returns>The generated crossover rate.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.GenerateTrialPoint(`0,System.Double,System.Double)">
            <summary>
            Generates a trial point based on <paramref name="target"/>.
            </summary>
            <param name="target">The <typeparamref name="TSearchPoint"/> to base the trial on.</param>
            <param name="mutationFactor">The mutation factor.</param>
            <param name="crossoverRate">The crossover rate.</param>
            <returns>The generated trial point.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Mutate(MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double)">
            <summary>
            Generates a donor vector via differential mutation.
            </summary>
            <param name="target">The target vector to base the donor on.</param>
            <param name="mutationFactor">The mutation factor.</param>
            <returns>The generated donor vector.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.ChooseRandomGoodSearchPoint">
            <summary>
            Randomly chooses a good <typeparamref name="TSearchPoint"/> from <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._sortedPopulation"/>.
            </summary>
            <returns>The chosen <typeparamref name="TSearchPoint"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.DetermineTargetAndTrialRanks(System.Collections.Generic.List{`0})">
            <summary>
            Determines ranks for <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1._sortedPopulation"/> and <paramref name="trialPoints"/>.
            </summary>
            <param name="trialPoints">Additional points to determine ranks for.</param>
            <returns>A mapping to relative ranks.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AdaptParameters(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Adapts <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.MeanMutationFactor"/> and <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.MeanCrossoverRate"/>.
            </summary>
            <param name="successfulMutationFactors">
            Mutation factors which led to improved <typeparamref name="TSearchPoint"/>s.
            </param>
            <param name="successfulCrossoverRates">
            Crossover rates which led to improved <typeparamref name="TSearchPoint"/>s.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.MaxDistCriterionMet">
            <summary>
            Checks whether the maximum distance to the best <typeparamref name="TSearchPoint"/> is sufficiently small
            to assume convergence.
            </summary>
            <returns>Whether the maximum distance is tiny.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.CheckIsInitialized(System.String)">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> has been called.
            </summary>
            <param name="memberName">Name of calling method. Automatically set.</param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> has not been called so far.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser">
            <summary>
            Argument parser for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser"/> class.
            </summary>
            <param name="allowAdditionalArguments">
            True, if unknown arguments should be allowed when calling
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])" />.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser.PrintHelp(System.Boolean)">
            <summary>
            Prints a description on how to configure differential evolution.
            </summary>
            <param name="printHelpParameter">Indicates whether the help parameter should be printed.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser.CreateOptionSet">
            <summary>
            Creates the <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <returns>
            The <see cref="T:NDesk.Options.OptionSet"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration">
            <summary>
            Configuration parameters for the differential evolution (DE) variant JADE.
            <para>
            Based on J. Zhang and A. C. Sanderson, "JADE: Adaptive Differential Evolution With Optional External Archive,"
            in IEEE Transactions on Evolutionary Computation, vol. 13, no. 5, pp. 945-958, Oct. 2009.
            </para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> class.
            </summary>
            <param name="bestPercentage">
            The percentage of population members which may be used as best member in the current-to-pbest mutation
            strategy. Often called p in literature.
            </param>
            <param name="initialMeanMutationFactor">
            The initial value of the mean mutation factor, often called mu_F in literature.
            </param>
            <param name="initialMeanCrossoverRate">
            The initial value of the mean crossover rate, often called mu_{CR} in literature.
            </param>
            <param name="learningRate">
            The learning rate for the means, often called c in literature.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.BestPercentage">
            <summary>
            Gets the percentage of population members which may be used as best member in the current-to-pbest mutation
            strategy. Often called p in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanMutationFactor">
            <summary>
            Gets the initial value of the mean mutation factor, often called mu_F in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanCrossoverRate">
            <summary>
            Gets the initial value of the mean crossover constant, often called mu_{CR} in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.LearningRate">
            <summary>
            Gets the learning rate for the means, often called c in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible for one to be used in a continued run
            based on a run using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible in a technical sense for one
            to be used in a continued run based on a run using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued run looks like a longer single run.</para>
            </summary>
            <param name="other">Configuration used for the start of run.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> builder.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.DefaultBestPercentage">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.BestPercentage"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.DefaultInitialMeanMutationFactor">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanMutationFactor"/>.
            <para>
            Taken from J. Zhang and A. C. Sanderson,
            "JADE: Adaptive Differential Evolution With Optional External Archive," in IEEE Transactions on Evolutionary
            Computation, vol. 13, no. 5, pp. 945-958, Oct. 2009.
            </para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.DefaultInitialMeanCrossoverRate">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanCrossoverRate"/>.
            <para>
            Taken from J. Zhang and A. C. Sanderson,
            "JADE: Adaptive Differential Evolution With Optional External Archive," in IEEE Transactions on Evolutionary
            Computation, vol. 13, no. 5, pp. 945-958, Oct. 2009.
            </para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.DefaultLearningRate">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.LearningRate"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder._bestPercentage">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.BestPercentage"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder._initialMeanMutationFactor">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanMutationFactor"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder._initialMeanCrossoverRate">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.InitialMeanCrossoverRate"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder._learningRate">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.LearningRate"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The built <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.SetBestPercentage(System.Double)">
            <summary>
            Sets the percentage of population members which may be used as best member in the current-to-pbest mutation
            strategy.
            Often called p in literature.
            <para>
            Default is 0.1.
            </para>
            <para>
            JADE works best with a value between 0.05 and 0.2.
            </para>
            </summary>
            <param name="percentage">Percentage as a value between 0 and 1 (both excluded).</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the percentage is not a value in (0, 1].</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.SetInitialMeanMutationFactor(System.Double)">
            <summary>
            Sets the initial value of the mean mutation factor, often called mu_F in literature.
            Default is 0.5.
            </summary>
            <param name="factor">Factor as a value between 0 and 1 (both excluded).</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the factor is not a value in [0, 1].</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.SetInitialMeanCrossoverRate(System.Double)">
            <summary>
            Sets the initial value of the mean crossover rate, often called mu_{CR} in literature.
            Default is 0.5.
            </summary>
            <param name="rate">Rate as a value between 0 and 1 (both excluded).</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the rate is not a value in [0, 1].</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.SetLearningRate(System.Double)">
            <summary>
            Sets the learning rate for the means, often called c in literature.
            <para>
            Default is 0.1.
            </para>
            <para>
            JADE works best with a value between 0.05 and 0.2.
            </para>
            </summary>
            <param name="rate">Rate as a value between 0 and 1 (both excluded).</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder" /> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the rate is not a value in [0, 1].</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1">
            <summary>
            An object wrapping the current status of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
            <typeparam name="TSearchPoint">
            Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instance.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.#ctor(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1"/> class.
            </summary>
            <param name="sortedPopulation">
            The current population sorted by performance, best <typeparamref name="TSearchPoint"/>s first.
            </param>
            <param name="currentGeneration">The current generation.</param>
            <param name="maxGenerations">The maximum number of generations to run.</param>
            <param name="meanMutationFactor">
            The current value of the mean mutation factor, often called mu_F in literature.
            </param>
            <param name="meanCrossoverRate">
            The current value of the mean crossover constant, often called mu_{CR} in literature.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.SortedPopulation">
            <summary>
            Gets the current population sorted by performance, best <typeparamref name="TSearchPoint"/>s first.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.CurrentGeneration">
            <summary>
            Gets the current generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MaxGenerations">
            <summary>
            Gets the maximum number of generations to run.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MeanMutationFactor">
            <summary>
            Gets the current value of the mean mutation factor, often called mu_F in literature.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MeanCrossoverRate">
            <summary>
            Gets the current value of the mean crossover constant, often called mu_{CR} in literature.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.ValidateParameters(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Validates parameters handed to constructor.
            </summary>
            <param name="sortedPopulation">
            The current population sorted by performance, best <typeparamref name="TSearchPoint"/>s first.
            </param>
            <param name="currentGeneration">The current generation.</param>
            <param name="maxGenerations">The maximum number of generations to run.</param>
            <param name="meanMutationFactor">
            The current value of the mean mutation factor, often called mu_F in literature.
            </param>
            <param name="meanCrossoverRate">
            The current value of the mean crossover constant, often called mu_{CR} in literature.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1">
            <summary>
            Represents an evolutionary algorithm for continuous optimization with the ability to (de)serialize its internal
            state.
            </summary>
            <typeparam name="TSearchPoint">The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> handled by the algorithm.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1.NextGeneration">
            <summary>
            Executes a single generation.
            </summary>
            <returns>Current population, best individuals first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1.AnyTerminationCriterionMet">
            <summary>
            Checks whether any termination criterion is met.
            </summary>
            <returns>True if and only if at least one termination criterion is met.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1.DumpStatus(System.String)">
            <summary>
            Writes all internal data to file.
            </summary>
            <param name="pathToStatusFile">Path to the file to write.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1.UseStatusDump(System.String)">
            <summary>
            Reads all internal data from file.
            </summary>
            <param name="pathToStatusFile">Path to the file to read.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1">
            <summary>
            Responsible for sorting <typeparamref name="TSearchPoint"/>s.
            </summary>
            <typeparam name="TSearchPoint">Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s to sort.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.Sort(System.Collections.Generic.IList{`0})">
            <summary>
            Sorts a number of <typeparamref name="TSearchPoint"/>s.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
            <returns>Indices of sorted points, best points first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.DetermineRanks(System.Collections.Generic.IList{`0})">
            <summary>
            Determines the ranks of a number of <typeparamref name="TSearchPoint"/>s.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
            <returns><paramref name="points"/> with ranks, starting at 0.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint">
            <summary>
            A point in a multi-dimensional, real-valued search space.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.#ctor(MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> class.
            </summary>
            <param name="values">The real-valued point to base this on.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Values">
            <summary>
            Gets the real-value point this <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> is based on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.IsValid">
            <summary>
            Checks whether the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> is valid.
            </summary>
            <returns>Whether the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> is valid.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.ToString">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Optano#Algorithm#Tuner#Serialization#IDeserializationRestorer{Optano#Algorithm#Tuner#ContinuousOptimization#SearchPoint}#Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPointSorterBase`1">
            <summary>
            Contains default implementations for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/>.
            </summary>
            <typeparam name="TSearchPoint">Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s to sort.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPointSorterBase`1.DetermineRanks(System.Collections.Generic.IList{`0})">
            <summary>
            Determines the ranks of a number of <typeparamref name="TSearchPoint"/>s.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
            <returns><paramref name="points"/> with ranks, starting at 0.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPointSorterBase`1.Sort(System.Collections.Generic.IList{`0})">
            <summary>
            Sorts a number of <typeparamref name="TSearchPoint"/>s.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
            <returns>Indices of sorted points, best points first.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.Master`6">
            <summary>
            The Master aka cluster seed node.
            </summary>
            <typeparam name="TTargetAlgorithm">
            The algorithm that should be tuned.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <typeparam name="TLearnerModel">
            The machine learning model that trains the specified <typeparamref name="TPredictorModel"/>.
            </typeparam>
            <typeparam name="TPredictorModel">
            The ML model that predicts the performance for a given potential offspring.
            </typeparam>
            <typeparam name="TSamplingStrategy">
            The strategy that is used for aggregating the observed training data before training the <typeparamref name="TPredictorModel"/>.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.Master`6"/> class.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Constructor mustn't be called. <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.Master`6"/> should behave like a static class.
            Since there is no "static inheritance", we need to provide some _ctor.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})">
            <summary>
            Runs the master.
            </summary>
            <param name="args">
            Arguments to configure the run, e.g. population size or port to use.
            </param>
            <param name="algorithmTunerBuilder">
            A function creating a <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/> instance.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.Dictionary`2"/>, containing the best configuration.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.CreateAlgorithmTunerConfiguration(Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> object depending on what the provided
            <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser"/> has parsed.
            </summary>
            <param name="argsParser">
            <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser"/> which has already parsed arguments.
            </param>
            <returns>
            The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.CustomizeAkkaConfiguration(System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Adapts Akka.NET configuration to use the correct hostname and port.
            </summary>
            <param name="ownHostName">
            The own host name.
            </param>
            <param name="port">
            The port to use.
            </param>
            <param name="logOnDebugLevel">
            Whether logging should be done on debug level.
            </param>
            <param name="maximumNumberParallelEvaluations">The maximum number of parallel evaluations per node.</param>
            <returns>
            The adapted Akka.NET configuration.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser">
            <summary>
            Utility class for parsing command line arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._parsers">
            <summary>
            The dictionary of secondary <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser"/>s that are applied in a second parameter parsing.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._startFromExistingStatus">
            <summary>
            A value indicating whether the run should be started in the state stored in a status dump file.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._maximumNumberParallelEvaluations">
            <summary>
            If specified by parsed arguments, this variable contains the maximum number of parallel evaluations.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._pathToTrainingInstanceFolder">
            <summary>
            If specified by parsed arguments, this variable contains a path to a folder containing training instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._pathToTestInstanceFolder">
            <summary>
            If specified by parsed arguments, this variable contains a path to a folder containing test instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._ownHostName">
            <summary>
            If specified by parsed arguments, this variable contains the own host name.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._port">
            <summary>
            If specified by parsed arguments, this variable contains the desired port for the cluster seed.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._statusFileDirectory">
            <summary>
            If specified by parsed arguments, this variable contains the path to the status file directory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser" /> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.StartFromExistingStatus">
            <summary>
            Gets a value indicating whether the run should be started in the state stored in a status dump file.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.MaximumNumberParallelEvaluations">
            <summary>
            Gets the maximum number of parallel evaluations which has been specified by the parsed arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.PathToTrainingInstanceFolder">
            <summary>
            Gets the path to a folder containing training instances which has been specified by the parsed arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.PathToTestInstanceFolder">
            <summary>
            Gets the path to a folder containing test instances which has been specified by the parsed arguments.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.OwnHostName">
            <summary>
            Gets the host name that Akka listens to.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.Port">
            <summary>
            Gets the desired port for the cluster seed.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.StatusFileDirectory">
            <summary>
            Gets the status file directory.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">Arguments to parse.</param>
            <exception cref="T:NDesk.Options.OptionException">Thrown if required parameters have not been set.</exception>
            <exception cref="T:System.AggregateException">Thrown if one or more arguments could not be interpreted.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.PrintHelp(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.CreateAdditionalOptionsForNewTunings">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet" /> containing all options important for starting a new tuning, but
            not for continuing a tuning.
            </summary>
            <returns>The created <see cref="T:NDesk.Options.OptionSet" />.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.CheckAndGetMaximumNumberParallelEvaluations">
            <summary>
            Checks <see cref="F:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser._maximumNumberParallelEvaluations"/> for null and returns it.
            </summary>
            <returns>The maximum number of parallel evaluations.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.CreatePreprocessingOptionSet(System.Boolean)">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet"/> containing all options that somehow influence which other options can be
            set.
            </summary>
            <param name="useHelpSupportOptionSet"><c>true</c>, to use <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.CreateOptionSet"/>.</param>
            <returns>The created <see cref="T:NDesk.Options.OptionSet"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.CreateBaseOptionSet">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet"/> containing all options that can always be specified.
            </summary>
            <returns>The created <see cref="T:NDesk.Options.OptionSet"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddAddressOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the address options to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddInstanceFolderOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the options about instance folders to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddLoggingOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the logging options to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddEvaluationLimitOption(NDesk.Options.OptionSet)">
            <summary>
            Adds the evaluation limit option to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddFaultToleranceOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the fault tolerance options to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddTuningScaleOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the tuning scale options important for starting a new tuning to the provided
            <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddTuningAlgorithmOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the tuning algorithm options to the provided <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddGeneticAlgorithmOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the genetic algorithm options important for starting a new tuning to the provided
            <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddModelBasedCrossoverOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the model based crossover options important for starting a new tuning to the provided
            <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddTargetAlgorithmSpecificOptions(NDesk.Options.OptionSet)">
            <summary>
            Adds the target algorithm specific options important for starting a new tuning to the provided
            <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <param name="options">The <see cref="T:NDesk.Options.OptionSet" /> to extend.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.AddConfigurationParser(System.String,Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser)">
            <summary>
            Adds an additional <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser"/> to use in a second round of parsing if
            <paramref name="key"/> is not used yet.
            </summary>
            <param name="key">The key to use.</param>
            <param name="parser"><see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.IConfigurationParser"/> to add.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.Master`3">
            <summary>
            The Master aka cluster seed node. Using default generic parameterization for model-based crossover operator.
            </summary>
            <typeparam name="TTargetAlgorithm">
            The algorithm that should be tuned.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Master`3.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.Master`3"/> class from being created.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            This class should never be initialized. Since there is no static inheritance, a dummy _ctor is required.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver">
            <summary>
            Responsible for shutting down the <see cref="T:Akka.Actor.ActorSystem" /> if the cluster's seed node cannot be discovered.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver._cluster">
            <summary>
            Provides cluster membership information.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver" /> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver.Observing">
            <summary>
            Actor observes <see cref="T:Akka.Cluster.ClusterEvent.UnreachableMember" /> events.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.SeedObserver.FutureCheckIfNodeJoinedCluster">
            <summary>
            Starts a task that will check whether the own actor system managed to join a cluster.
            The check will be executed after some time. If no cluster was joined, the node couldn't find the cluster
            seed and the actor system should terminate.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.Worker">
            <summary>
            Responsible for starting an actor system that can support <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Worker.Run(System.String[])">
            <summary>
            Executes the worker.
            </summary>
            <param name="args">
            Arguments like the master's hostname.
            See <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser" /> for more information.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.Worker.CustomizeAkkaConfiguration(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Adapts Akka.NET configuration to use the correct hostname and cluster seed node (actor system name,
            hostname and port).
            </summary>
            <param name="workerHostName">
            The worker host name.
            </param>
            <param name="clusterSeed">
            Hostname of cluster seed node.
            </param>
            <param name="seedPort">
            Port of cluster seed node.
            </param>
            <param name="logOnDebugLevel">
            Whether logging should be done on debug level.
            </param>
            <returns>
            The adapted Akka.NET configuration.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser">
            <summary>
            Utility class for parsing command line arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser._port">
            <summary>
            The port to connect to the cluster seed as specified by the parsed arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser._seedHostName">
            <summary>
            The cluster seed's host name as specified by the parsed arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser._ownHostName">
            <summary>
            Backing field for the <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.OwnHostName"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser._verbosityLevel">
            <summary>
            How detailed the console output should be. Default is <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.SeedHostName">
            <summary>
            Gets the cluster seed's host name.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.OwnHostName">
            <summary>
            Gets the host name that akka listens to on this worker.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.Port">
            <summary>
            Gets the desired port for the cluster seed.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if called before <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])" />
            has been executed.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.VerbosityLevel">
            <summary>
            Gets how detailed the console output should be.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">Arguments to parse.</param>
            <exception cref="T:NDesk.Options.OptionException">Thrown if required parameters have not been set.</exception>
            <exception cref="T:System.AggregateException">Thrown if one or more arguments could not be interpreted.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.PrintHelp(System.Boolean)">
            <summary>
            Prints a description on how to use the command line arguments.
            </summary>
            <param name="printHelpParameter">Indicates whether the help parameter should be printed.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.CreateOptionSet">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet" /> containing all options important for running Worker.exe.
            </summary>
            <returns>The created <see cref="T:NDesk.Options.OptionSet" />.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.DoubleArrayEqualityComparer">
            <summary>
            Equality comparer for double arrays.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DoubleArrayEqualityComparer.Equals(System.Double[],System.Double[])">
            <summary>
            Checks if the arrays are of the same length and the entries match index-wise.
            </summary>
            <param name="first">
            First array.
            </param>
            <param name="second">
            Second array.
            </param>
            <returns>
            Returns true, if the arrays are of the same length and the entries match index-wise.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.DoubleArrayEqualityComparer.GetHashCode(System.Double[])">
            <summary>
            Computes a custom HashCode for the given <paramref name="obj"/>.
            </summary>
            <param name="obj">The array.</param>
            <returns>The HashCode.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.EnumerableExtensions">
            <summary>
            The enumerable extensions.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.EnumerableExtensions.TakeSmallestSorted(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>
            Efficiently retrieves the <paramref name="k"/> smallest elements from an enumerable. 
            </summary>
            <param name="source">
            The source to retrieve elements from.
            </param>
            <param name="k">
            The number of elements to retrieve.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.EnumerableExtensions.InflateAndShuffle``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Creates a list of size <paramref name="number"/>, consisting of <typeparamref name="T"/>s provided in
            <paramref name="items"/>
            so that each item occurs the same number of times. If <paramref name="number"/> is not a multiple of
            <paramref name="items"/>.Count,
            the last spots are filled with a random subset of <paramref name="items"/>.
            </summary>
            <typeparam name="T">
            Element type of the <see cref="T:System.Collections.Generic.List`1"/>.
            </typeparam>
            <param name="items">
            The items to inflate.
            </param>
            <param name="number">
            The required number of items.
            </param>
            <returns>
            The created list in <c>randomized</c> order.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3">
            <summary>
            The evaluation actor is responsible for evaluating single genome instance pairs.
            </summary>
            <typeparam name="TTargetAlgorithm">The target algorithm type.</typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._configuration">
            <summary>
            Algorithm tuner configuration parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._parameterTree">
            <summary>
            The parameter tree, needed to identify active genes that have to be passed to the target algorithm.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._targetAlgorithmFactory">
            <summary>
            An object producing configured target algorithms to run with the genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._configuredTargetAlgorithm">
            <summary>
            The target algorithm that was configured using the current genome.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._currentEvaluationIssuer">
            <summary>
            Actor that issued the current evaluation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._currentGenomeInstancePair">
            <summary>
            Genome that currently gets evaluated.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._evaluationCancellationTokenSource">
            <summary>
            The evaluation cancellation token source.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3._evaluationTries">
            <summary>
            The number of evaluation attempts.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3" /> class.
            </summary>
            <param name="targetAlgorithmFactory">The target algorithm factory.</param>
            <param name="configuration">The algorithm tuner configuration.</param>
            <param name="parameterTree">The parameter tree.</param>
            <param name="generationEvaluationActor">The generation evaluation actor.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.PostStop">
            <summary>
            Gets called asynchronously after 'actor.stop()' is invoked.
            Makes sure to send a cancellation notice to all remaining evaluation tasks.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.Ready">
            <summary>
            Actor is ready to process polls sent to it from external senders.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.WaitingForEvaluation">
            <summary>
            Waiting for evaluation state.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.Evaluating">
            <summary>
            Actor has spawned a target algorithm run and is waiting for it to complete.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.StartEvaluation">
            <summary>
            Starts an evaluation of the current genome instance pair.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.ConfigureTargetAlgorithm">
            <summary>
            Configures the current target algorithm.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3.DisposeTargetAlgorithm">
            <summary>
            Disposes the current target algorithm.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3">
            <summary>
            The generation evaluation actor is responsible of evaluating a whole generation, given by a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2"/> message.
            </summary>
            <typeparam name="TTargetAlgorithm">The target algorithm type.</typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._targetAlgorithmFactory">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._resultStorageActor">
            <summary>
            The <see cref="T:Akka.Actor.IActorRef"/> to the result storage actor.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._parameterTree">
            <summary>
            The parameter tree.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._generationEvaluationIssuer">
            <summary>
            The current <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2" />'s sender. It is null if no generation evaluation is currently executed.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._evaluationStrategy">
            <summary>
            The current <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._evaluationsByAssignedActor">
            <summary>
            The evaluations by assigned actor dictionary.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._genomesWaitingForResultsFromStorage">
            <summary>
            The list of genomes waiting for results from storage.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._currentGenerationEvaluation">
            <summary>
            The current generation evaluation message.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3._evaluationActorRouter">
            <summary>
            The <see cref="T:Akka.Actor.IActorRef"/> to the evaluation actor router.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Akka.Actor.IActorRef,Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/> class.
            </summary>
            <param name="targetAlgorithmFactory">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>.</param>
            <param name="runEvaluator">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.</param>
            <param name="configuration">The configuration.</param>
            <param name="resultStorageActor">The <see cref="T:Akka.Actor.IActorRef"/> to the result storage actor.</param>
            <param name="parameterTree">The parameter tree.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Stash">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.PreStart">
            <summary>
            Called when the actor is started. Creates the desired number of evaluation actors, managed by a router. This router is responsible for starting new evaluation actors, whenever a node joins the cluster.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.WaitingForWorkers">
            <summary>
            Actor is waiting for workers to join the cluster s.t. a sufficient number of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>s are available.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.BecomeReady">
            <summary>
            Move to <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Ready" /> state.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Ready">
            <summary>
            The <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Ready"/> state is responsible for handling generation evaluation messages.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.FetchingResultsFromStorage">
            <summary>
            The <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.FetchingResultsFromStorage"/> state is responsible for handling genome result messages.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.BecomeWorking">
            <summary>
            Move to <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Working"/> state.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Working">
            <summary>
            The <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.Working"/> state is responsible for handling hello world, accept and evaluation result messages.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.StartNextNotAlreadyStartedEvaluation(Akka.Actor.IActorRef)">
            <summary>
            Starts the next not already started evaluation, if any, by sending it to the given actor.
            </summary>
            <param name="actor">The actor.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.HandleUnreachableMessage(Akka.Cluster.ClusterEvent.UnreachableMember)">
            <summary>
            Handles a <see cref="T:Akka.Cluster.ClusterEvent.UnreachableMember" /> message by rolling back all evaluations that had been assigned to that member and removing the member from the cluster.
            </summary>
            <param name="unreachableMember">The message.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.RollBackOnAddress(Akka.Actor.Address)">
            <summary>
            Rolls back all assigned evaluations on the specified address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3.AskForWorkers">
            <summary>
            Sends a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Poll"/> to any evaluation actor in order to ask for availability.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1">
            <summary>
            Contains a pair of genome and instance.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1"/> class.
            </summary>
            <param name="genome">The genome.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.Genome">
            <summary>
            Gets the genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.op_Equality(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Checks for equality.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>True, if equal.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.op_Inequality(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Checks for inequality.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>True, if not equal.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1.Equals(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Checks for equality.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if equal.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2">
            <summary>
            Manages the evaluation progress of a single <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2._lock">
            <summary>
            A lock object.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2._openInstances">
            <summary>
            The open instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2._runningInstances">
            <summary>
            The running instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2._finishedInstances">
            <summary>
            The finished instances with results.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2._cancelledByRacingInstances">
            <summary>
            The instances that were cancelled by racing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/> class.
            </summary>
            <param name="genome">The genome.</param>
            <param name="openInstances">The instances that are initially in the open list.</param>
            <param name="runningInstances">
            The instances that are initialized in the running instances.
            Can be used for managing the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> update phase,
            by setting all instances as running and then updating all result hits, and requeueing all storage misses.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.#ctor(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/> class.
            </summary>
            <param name="otherStats">The genome stats to copy from.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.Genome">
            <summary>
            Gets the Genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.TotalInstanceCount">
            <summary>
            Gets the total instance count.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances">
            <summary>
            Gets the open instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RunningInstances">
            <summary>
            Gets the running instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.FinishedInstances">
            <summary>
            Gets the finished instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.CancelledByRacingInstances">
            <summary>
            Gets the instances that were cancelled by racing.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RuntimeOfFinishedInstances">
            <summary>
            Gets the sum of the run times of the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.FinishedInstances"/>.
            Note: Instances that are <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.CancelledByRacingInstances"/> are not included.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.HasOpenInstances">
            <summary>
            Gets a value indicating whether the genome stats do have <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.HasOpenOrRunningInstances">
            <summary>
            Gets a value indicating whether there are any open or running instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.IsCancelledByRacing">
            <summary>
            Gets a value indicating whether this genome evaluation was cancelled by racing.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.AllInstancesFinishedWithoutCancelledResult">
            <summary>
            Gets a value indicating whether this genome is a candidate to use for killing other evaluations, when performing racing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.FinishInstance(`0,`1)">
            <summary>
            Tries to add the result for the given instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="result">The result.</param>
            <returns>
            <c>false</c>, if the instance was not contained in <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RunningInstances"/>, or if it was contained in <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/>, or if we already recorded a result in <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.FinishedInstances"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RequeueInstance(`0)">
            <summary>
             Tries to requeue the instance.
            Only returns true, if an instance for which we did not already store a result (<see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.FinishedInstances"/>) is moved from <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RunningInstances"/> to <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/>.
            </summary>
            <param name="instance">The instance to requeue.</param>
            <returns><c>true</c>, if the instance was requeued.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.UpdateCancelledByRacing">
            <summary>
            Computes and updates the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.IsCancelledByRacing"/>.
            Moves all <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RunningInstances"/> and <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/> to <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.CancelledByRacingInstances"/>.
            </summary>
            <returns><c>true</c>, if <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.IsCancelledByRacing"/> was set from <c>false</c> to <c>true</c>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.ToImmutable">
            <summary>
            Returns an immutable version of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>.
            </summary>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.TryStartInstance(`0@)">
            <summary>
            Tries to pop the next instance from <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/>.
            </summary>
            <param name="nextInstance">The next instance that should be evaluated.</param>
            <returns><c>true</c>, if an instance was popped from <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/> and moved to <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.RunningInstances"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.NotifyInstanceStarted(`0)">
            <summary>
            Handles an instance that was started in another tournament for an equal genome.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.StartInstance(`0)">
            <summary>
            Moves the given instance from open to running.
            </summary>
            <param name="instance">The instance.</param>
            <returns>True, if successful.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2">
            <summary>
            Interface for strategies that are used for evaluating a single generation during a run of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.IsGenerationFinished">
            <summary>
            Gets a value indicating whether the evaluation of the generation is finished.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.TryPopEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0}@)">
            <summary>
            Tries to pop the next evaluation (Genome x Instance) from a list (e.g. queue) of open evaluations.
            </summary>
            <param name="nextEvaluation">The next evaluation.</param>
            <returns><c>true</c>, if an open evaluation is popped.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.GenomeInstanceEvaluationFinished(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1)">
            <summary>
            Updates the result for the given evaluation.
            </summary>
            <param name="evaluation">The evaluation.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.RequeueEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Requeues an evaluation, e.g. if it failed due to an actor crash.
            </summary>
            <param name="evaluation">The evaluation to requeue.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.CreateResultMessageForPopulationStrategy">
            <summary>
            Creates the result message that is sent as reply to the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2"/> back to the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>.
            The returned message type needs to match the \"expected\" result message when awaiting the answer from the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
            <returns>The generation evaluation result message.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2.BecomeWorking">
            <summary>
            Tells the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy`2"/> that the result fetching phase has ended.
            Can be used to indicate that, e.g. priority updates in the global priority queue, should now be performed when updating results or requeuing an evaluation.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2">
            <summary>
            The immutable version of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2._genomeStats">
            <summary>
            The underlying <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.#ctor(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> class.
            </summary>
            <param name="genomeStats">The underlying <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.Genome">
            <summary>
            Gets the genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.OpenInstances">
            <summary>
            Gets the open instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.RunningInstances">
            <summary>
            Gets the running instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.FinishedInstances">
            <summary>
            Gets the finished instances with results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.CancelledByRacingInstances">
            <summary>
            Gets the instances that were cancelled by racing.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.TotalInstanceCount">
            <summary>
            Gets the total instance count.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.HasOpenOrRunningInstances">
            <summary>
            Gets a value indicating whether there are any open or running instances.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.RuntimeOfFinishedInstances">
            <summary>
            Gets the sum of the run times of the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.FinishedInstances"/>.
            Note: Instances that are <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.CancelledByRacingInstances"/> are not included.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.IsCancelledByRacing">
            <summary>
            Gets a value indicating whether this genome evaluation was cancelled by racing.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.AllInstancesFinishedWithoutCancelledResult">
            <summary>
            Gets a value indicating whether this genome is a candidate to use for killing other evaluations, when performing racing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.CreateImmutableGenomeStats(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IReadOnlyList{`0},System.Collections.Generic.Dictionary{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1})">
            <summary>
            Creates a list of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> from the given parameter.
            </summary>
            <param name="genomes">The genomes.</param>
            <param name="instances">The instances.</param>
            <param name="resultDictionary">The result dictionary.</param>
            <returns>The list of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1">
            <summary>
            The incumbent genome wrapper.
            </summary>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentGenome">
            <summary>
            Gets or sets the incumbent genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentInstanceResults">
            <summary>
            Gets or sets the incumbent instance results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentGeneration">
            <summary>
            Gets or sets the incumbent generation.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1">
            <summary>
            Responsible for choosing instances to evaluate genomes.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._endNumInstances">
            <summary>
            The maximum number of instances. It is used from generation <see cref="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._goalGeneration" /> onwards.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._goalGeneration">
            <summary>
            The generation index after which <see cref="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._endNumInstances" /> should always be returned.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._instances">
            <summary>
            All available instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._linearIncrease">
            <summary>
            The factor used for linear increase of the number of instances depending on the generation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1._startNumInstances">
            <summary>
            The minimum number of instances. It is used at generation 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1.#ctor(System.Collections.Generic.IEnumerable{`0},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/> class.
            </summary>
            <param name="instances">
            All available instances.
            </param>
            <param name="configuration">
            Algorithm tuner configuration containing parameters needed by the selector,
            e.g. goal generation.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1.Select(System.Int32)">
            <summary>
            Randomly selects a subset of instances for the given generation.
            </summary>
            <param name="generation">
            Current generation, starting from 0.
            The higher this is, the more instances will be selected.
            </param>
            <exception cref="T:System.ArgumentException">Thrown if the given generation is negative.</exception>
            <returns>Instances to use for evaluation.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Accept">
            <summary>
            Message signifying that the sender is free to do work.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.CheckWorkers">
            <summary>
            Message signifying that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" /> should check whether it
            has registered enough <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3" />s to start working.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Faulted`1">
            <summary>
            Represents a faulted evaluation result.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Faulted`1.#ctor(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Faulted`1"/> class.
            </summary>
            <param name="genomeInstancePair">The genome instance pair.</param>
            <param name="reason">The reason.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Faulted`1.GenomeInstancePair">
            <summary>
            Gets the genome instance pair.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Faulted`1.Reason">
            <summary>
            Gets the reason.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2">
            <summary>
            Message containing all necessary information to start a generation evaluation.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2.#ctor(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IEnumerable{`0},System.Func{Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`0,`1},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IEnumerable{`0},Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.IGenerationEvaluationStrategy{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2"/> class.
            </summary>
            <param name="participants">
            Genomes to evaluate.
            </param>
            <param name="instances">
            Instances for evaluation.
            </param>
            <param name="evaluationStrategyFactory">The evaluation strategy factory.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2.EvaluationStrategyFactory">
            <summary>
            Gets the evaluation strategy factory.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2.Participants">
            <summary>
            Gets the genomes to evaluate.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.GenerationEvaluation`2.Instances">
            <summary>
            Gets the instances to evaluate the genomes with.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.HelloWorld">
            <summary>
            Message signifying that the sender has started.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.NoJob">
            <summary>
            Message for indicating that no open job is available.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Poll">
            <summary>
            Message signifying a call to workers.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.WorkerCount">
            <summary>
            Message containing the number of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3" />s that have been available to
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" /> when the message was created.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.WorkerCount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.WorkerCount" /> class.
            </summary>
            <param name="count">
            The number of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3" />s that are available right
            now.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.WorkerCount.Count">
            <summary>
            Gets the number of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3" />s that have been available when the message
            was created.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey">
            <summary>
            A unique key, containing a genome and a tournament id.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey"/> class.
            </summary>
            <param name="genome">The genome.</param>
            <param name="tournamentId">The tournament id.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.Genome">
            <summary>
            Gets the genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.TournamentId">
            <summary>
            Gets the tournament id.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.op_Equality(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey,Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey)">
            <summary>
            Checks if equal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>True, if equal.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.op_Inequality(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey,Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey)">
            <summary>
            Checks if unequal.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>True, if unequal.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey.Equals(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey)">
            <summary>
            Checks if equal.
            </summary>
            <param name="other">The other.</param>
            <returns>True, if equal.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1">
            <summary>
            Message representing the best genomes that have been found in a number of mini tournaments,
            sorted by fitness.
            </summary>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1.#ctor(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.Dictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.List{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank}},Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1" /> class.
            </summary>
            <param name="competitiveParents">
            The best genomes found, ordered by fitness.
            </param>
            <param name="genomeToTournamentRank">
            Genome with a rank for every tournament it participated in.
            </param>
            <param name="generationBest">
            The incumbent genome.
            </param>
            <param name="generationBestResult">
            The result of the incumbent genome.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1.CompetitiveParents">
            <summary>
            Gets genomes found in a number of mini tournaments, sorted by fitness.
            Only contains the winner(s) of each tournament, i.e. the genomes that are allowed to reproduce.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1.GenomeToTournamentRank">
            <summary>
            Gets the known ranks for each genome.
            If a Genome (or an 'equal copy') competed in several tournaments, we will observe several ranks for it.
            This Dictionary uses an <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer"/> to group those results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1.GenerationBest">
            <summary>
            Gets the best genome in the current generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Messages.GgaResult`1.GenerationBestResult">
            <summary>
            Gets the actual run result of the generation's best <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            Used for statistical evaluation.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2">
            <summary>
            An evaluation strategy that sorts the genomes by performing a series of mini tournaments.
            Only the tournament winners are returned as crossover candidates.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._genomes">
            <summary>
            The genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._generation">
            <summary>
            The generation number.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._tournamentManagers">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2._priorityQueue">
            <summary>
            The evaluation priority queue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`0,`1},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IEnumerable{`0},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2"/> class.
            </summary>
            <param name="runEvaluator">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> for sorting genomes.</param>
            <param name="genomes">The genomes for evaluation.</param>
            <param name="instances">The instances for evaluation.</param>
            <param name="configuration">The configuration.</param>
            <param name="generation">The generation number.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.IsGenerationFinished">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.BecomeWorking">
            <summary>
            Instructs all tournament managers to <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.StartSynchronizingQueue(Priority_Queue.IPriorityQueue{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey,System.Double})"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.TryPopEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0}@)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.GenomeInstanceEvaluationFinished(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.RequeueEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentGenerationEvaluationStrategy`2.CreateResultMessageForPopulationStrategy">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2">
            <summary>
            Handles a single mini tournament. Thereby the mini tournament manager is responsible for queuing its genome instance evaluations, handling of racing and reporting its mini tournament result.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._generationId">
            <summary>
            The generation id.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._configuration">
            <summary>
            The algorithm tuner configuration.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._desiredNumberOfWinners">
            <summary>
            The desired number of winners.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._genomeToGenomeTournamentKey">
            <summary>
            The genome to genome tournament key dictionary.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._genomeToGenomeStats">
            <summary>
            The genome to genome stats dictionary.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._lock">
            <summary>
            A lock object.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2._globalPriorityQueue">
            <summary>
            The global evaluation priority queue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.#ctor(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`0,`1},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2"/> class.
            </summary>
            <param name="participants">The tournament's participants.</param>
            <param name="instances">The tournament's instances.</param>
            <param name="miniTournamentId">The mini tournament id.</param>
            <param name="generationId">The generation id.</param>
            <param name="runEvaluator">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.</param>
            <param name="configuration">The algorithm tuner configuration.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.Participants">
            <summary>
            Gets the tournament's participants.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.MiniTournamentId">
            <summary>
            Gets the mini tournament id.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.IsTournamentFinished">
            <summary>
            Gets a value indicating whether the tournament is finished.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.UpdateResult(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1)">
            <summary>
            Handles a result update by updating the corresponding genome stats and evaluation queue and checking for racing.
            </summary>
            <param name="evaluation">The evaluation.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.StartSynchronizingQueue(Priority_Queue.IPriorityQueue{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey,System.Double})">
            <summary>
            Starts the synchronization of the global evaluation queue.
            </summary>
            <param name="globalPriorityQueue">The global evaluation queue.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.TryGetNextInstanceAndUpdateGenomePriority(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey,`0@)">
            <summary>
            Tries to get the next instance of the given genome tournament key and updates the evaluation queue.
            </summary>
            <param name="nextGenomeKey">The next genome tournament key.</param>
            <param name="nextInstance">The next instance.</param>
            <returns>True, if there is a next instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.RequeueEvaluationIfRelevant(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Requeues the given evaluation, if relevant for this mini tournament.
            </summary>
            <param name="evaluation">The evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.CreateMiniTournamentResult">
            <summary>
            Creates the final mini tournament result.
            </summary>
            <returns>The mini tournament result.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.NotifyEvaluationStarted(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <summary>
            Handles the information that a evaluation has started by another mini tournament manager, if relevant.
            </summary>
            <param name="evaluation">The evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.GetExpandedImmutableGenomeStats">
            <summary>
            Returns the expanded immutable version of the current genome stats that includes every genome as often as it participates in the current mini tournament.
            </summary>
            <returns>The expanded immutable genome stats.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.InitializeQueue">
            <summary>
            Initializes the evaluation queue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2.RemoveOrUpdateInPriorityQueue(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.GenomeTournamentKey)">
            <summary>
            Removes or updates the given genome tournament key in the evaluation queue.
            </summary>
            <param name="genomeTournamentKey">The genome tournament key.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank">
            <summary>
            The genome tournament rank.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.TournamentRank">
            <summary>
            Gets or sets the genome's rank within the tournament with <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.TournamentId"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.TournamentId">
            <summary>
            Gets or sets the identifier for the tournament this result was obtained in.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.GenerationId">
            <summary>
            Gets or sets the generation in which the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.TournamentId"/> was executed.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2">
            <summary>
            The mini tournament result.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2.#ctor(System.Int32,System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}},System.Collections.Generic.IReadOnlyDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2"/> class.
            </summary>
            <param name="miniTournamentId">
            The mini tournament id.
            </param>
            <param name="winnerStats">
            The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> of the mini tournament's winners.
            </param>
            <param name="genomeToTournamentRank">
            The genome to tournament rank dictionary.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2.MiniTournamentId">
            <summary>
            Gets the mini tournament id.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2.WinnerStats">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> of the mini tournament's winners.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.MiniTournamentResult`2.GenomeToTournamentRank">
            <summary>
            Gets the genome to tournament rank dictionary.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1">
            <summary>
            The tournament winners with rank.
            </summary>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1.#ctor(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Immutable.ImmutableList{`0},System.Collections.Immutable.ImmutableDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.List{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1"/> class.
            </summary>
            <param name="competitiveParents">
            The competitive parents ordered by fitness.
            </param>
            <param name="generationBest">
            The incumbent genome.
            </param>
            <param name="generationBestResult">
            The result of the incumbent genome.
            </param>
            <param name="genomeToTournamentRank">
            Genome with a rank for every tournament it participated in.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1.CompetitiveParents">
            <summary>
            Gets the competitive parents.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1.GenerationBest">
            <summary>
            Gets the generation best.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1.GenerationBestResult">
            <summary>
            Gets the generation best result.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank`1.GenomeToTournamentRank">
            <summary>
            Gets a dictionary containing the observed tournament results, grouped by <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2">
            <summary>
            A message containing all results a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> has collected up to the message send
            point.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2.#ctor(System.Collections.Generic.Dictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IDictionary{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2"/> class.
            </summary>
            <param name="runResults">The run results.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if result parameter is null.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2.RunResults">
            <summary>
            Gets the run results.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResultsRequest">
            <summary>
            A message requesting all results from a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2">
            <summary>
            Message containing a target algorithm run result.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2.#ctor(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2" /> class.
            </summary>
            <param name="genomeInstancePair">The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1"/>.</param>
            <param name="runResult">The run result.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2.GenomeInstancePair">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2.RunResult">
            <summary>
            Gets the run result.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic">
            <summary>
            A message containing statistical information about all results a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> has collected up to the message send point.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic"/> class.
            </summary>
            <param name="configurationCount">
            The number of unique parameter configurations that have been evaluated.
            </param>
            <param name="totalEvaluationCount">
            The total sum of evaluations, i. e. configuration - instance runs, that have been executed.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic.ConfigurationCount">
            <summary>
            Gets the number of unique parameter configurations that have been evaluated.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic.TotalEvaluationCount">
            <summary>
            Gets the total sum of evaluations, i. e. configuration - instance runs, that have been executed.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticRequest">
            <summary>
            A message requesting evaluation information from a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2">
            <summary>
            A message containing all results a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> has collected for a certain parameter
            configuration up to the message send point.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/> class.
            </summary>
            <param name="genome">The genome.</param>
            <param name="runResults">The run results.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if result parameter is null.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2.Genome">
            <summary>
            Gets the genome.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2.RunResults">
            <summary>
            Gets the run results.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest">
            <summary>
            Message signifying a request for target algorithm run results on a specific genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest" /> class.
            </summary>
            <param name="genome">The genome the run results are requested for.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest.Genome">
            <summary>
            Gets the genome the run results are requested for.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2">
            <summary>
            Responsible for providing already computed results.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2._runResults">
            <summary>
            All run results of target algorithm runs grouped by the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" /> they were configured
            with and instance they were run on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" /> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.HandleResult(Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult{`0,`1})">
            <summary>
            Handles a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2" /> message.
            </summary>
            <param name="evaluationResult">The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2" /> message.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.AddResultToStorageIfUnknown(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,`0,`1)">
            <summary>
            If it there is no corresponding result in storage yet, this method stores the given result using the
            provided <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome" /> - instance combination as key.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome" />.</param>
            <param name="instance">The instance.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.HandleAllResultsRequest(Akka.Actor.IActorRef)">
            <summary>
            Handles a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResultsRequest"/> sent by a certain actor.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.HandleEvaluationStatisticRequest(Akka.Actor.IActorRef)">
            <summary>
            Handles a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticRequest"/> sent by a certain actor.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2.HandleGenomeResultsRequest(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Akka.Actor.IActorRef)">
            <summary>
            Handles a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> sent by a certain actor.
            </summary>
            <param name="genome">The genome the results are requested for.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult">
            <summary>
            A message containing sorted <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult.#ctor(System.Collections.Immutable.ImmutableList{Optano.Algorithm.Tuner.Genomes.ImmutableGenome})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult"/> class.
            </summary>
            <param name="ranking">The sorted <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s, best first.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult.Ranking">
            <summary>
            Gets sorted <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s, best first.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2">
            <summary>
            An evaluation strategy that evaluates all genomes on all instances and returns the global order, using an <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2._genomes">
            <summary>
            The genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2._genomeToGenomeStats">
            <summary>
            The genome to genome stats dictionary.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2._hasStartedWorking">
            <summary>
            A boolean indicating whether this <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2"/> has started working.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`0,`1},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.ImmutableGenome},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2"/> class.
            </summary>
            <param name="runEvaluator">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> for sorting genomes.</param>
            <param name="genomes">The genomes for evaluation.</param>
            <param name="instances">The instances for evaluation.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.IsGenerationFinished">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.TryPopEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0}@)">
            <summary>
            Tries to pop the next evaluation to perform.
            Only returns evaluations, after <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.BecomeWorking"/> has been called.
            </summary>
            <param name="nextEvaluation">The next evaluation.</param>
            <returns><c>true</c>, if an evaluation has been popped.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.GenomeInstanceEvaluationFinished(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0},`1)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.RequeueEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.CreateResultMessageForPopulationStrategy">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.BecomeWorking">
            <summary>
            Before the working phase has started, no evaluations will be returned by <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.SortingGenerationEvaluationStrategy`2.TryPopEvaluation(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair{`0}@)"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.Genome">
            <summary>
            A genome, containing values for parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Genome.GenomeComparer">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer"/> of <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Genome._genes">
            <summary>
            Values for parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Genome._sortedGeneIdentifiers">
            <summary>
            Identifiers of parameters, sorted by name. Content must be equivalent to keys of <see cref="F:Optano.Algorithm.Tuner.Genomes.Genome._genes" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Genome._age">
            <summary>
            The backing variable of <see cref="P:Optano.Algorithm.Tuner.Genomes.Genome.Age"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" /> class.
            The creating class is responsible for making sure the created genome is legal.
            </summary>
            <param name="age">The genome's age.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the specified age is negative.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.#ctor(Optano.Algorithm.Tuner.Genomes.Genome,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> class.
            </summary>
            <param name="genome">The genome to copy.</param>
            <param name="age">The age of the created genome.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the specified age is negative.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.#ctor(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" /> class.
            <para>Copy constructor.</para>
            </summary>
            <param name="genome">The genome to copy.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Genome.IsEngineered">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> was genetically engineered.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Genome.Age">
            <summary>
            Gets the number of generations this genome has survived so far.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.AgeOnce">
            <summary>
            Increment the genome's age by 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GetGeneValue(System.String)">
            <summary>
            Gets the gene's value for the given identifier.
            </summary>
            <param name="identifier">The gene's identifier.</param>
            <returns>The gene's value.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if gene identifier is not known.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.SetGene(System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Sets a parameter value. Overwrites old value if one existed.
            The calling class is responsible for making sure the genome stays legal.
            </summary>
            <param name="identifier">The identifier of the gene to set.</param>
            <param name="allele">The new gene value.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Computes all <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> and then applies the
            filters that are specified in <see cref="T:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter"/>.
            </summary>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.Dictionary`2"/> with the set of parameters
            that can be natively handled by the target algorithm.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.ToString">
            <summary>
            Prints the genome in the form of [identifier1: value1, ..., identifiern: valuen](age: age).
            </summary>
            <returns>A <see cref="T:System.String" /> that represents the genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.ToFilteredGeneString(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Prints the genome in the form of [identifier1: value1, ..., identifiern: valuen](age: age).
            Only uses the currently active parameters. I.e. genes are filtered with <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </summary>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <returns>
            The <see cref="T:System.String"/> that represents the genome.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.ToCappedDecimalString">
            <summary>
            Returns <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToString"/> with <see cref="T:System.Double"/> valued <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> capped to <c>7</c> decimals.
            </summary>
            <returns>The capped string.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GetAllValuesOrdered(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele}})">
            <summary>
            Returns all gene values, ordered as specified by <paramref name="sortFunc"/>.
            </summary>
            <param name="sortFunc">Function to order the gene values by.</param>
            <returns>The ordered gene values.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFormattedAlleleString(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Boolean)">
            <summary>
            Prints the <paramref name="gene"/> value depending on <paramref name="withCappedDecimalDigits"/>.
            </summary>
            <param name="gene">The gene to convert to string.</param>
            <param name="withCappedDecimalDigits"><c>true</c>, to limit decimal places to 7.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Identifies the part of the genome that contains active genes,
            i.e. OR nodes are evaluated and only correct subtrees are added.
            </summary>
            <param name="parameterTree">
            Structure of parameters.
            Caller is responsible for making sure it fits the genome.
            </param>
            <returns>The part of the genome that contains active genes.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.BuildStringRepresentation(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele},System.Boolean)">
            <summary>
            Builds a string representation of the current genome.
            Only uses the parameters given in <paramref name="genomesToPrint"/>.
            </summary>
            <param name="genomesToPrint">
            Should either be <see cref="F:Optano.Algorithm.Tuner.Genomes.Genome._genes"/> or <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </param>
            <param name="withCappedDecimalDigits">
            Default is false.
            </param>
            <returns>
            The <see cref="T:System.String"/> representation of this genome.
            Parameters will be ordered by Key.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer">
            <summary>
            An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> that only checks for gene values
            regardless of genome age or gene order.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Determines whether the specified genomes are equal by comparing their gene values only.
            </summary>
            <param name="first">The first <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" />.</param>
            <param name="second">The second <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" />.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Computes a hash code for the specified genome.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" />.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder">
            <summary>
            Class responsible for building, modifying and validating genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._crossoverSwitchProbability">
            <summary>
            The probability that we switch between parents when doing a crossover and deciding on the value of a
            parameter that has different values for both parents and has a parent parameter in the parameter tree which
            also has different values for both parents.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._mutationRate">
            <summary>
            The probability that a parameter gets mutated.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._mutationVariancePercentage">
            <summary>
            Percentage of the variable's domain that is used to determine the variance for Gaussian mutation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._parameterNodes">
            <summary>
            All <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode" />s in the tree.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._parameterTree">
            <summary>
            Parameter structure.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> class.
            </summary>
            <param name="parameterTree">
            The parameters' structure.
            All genes created by this builder should comply with it.
            </param>
            <param name="configuration">Configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if either of the parameters is null.</exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.ParameterOrigin">
            <summary>
            Specifies from where a gene value was inherited in a crossover.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.ParameterOrigin.Open">
            <summary>
            The origin does not matter as the gene value is the same for both parents and
            we have not yet decided on a preferred parent in the considered tree.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.ParameterOrigin.FirstParent">
            <summary>
            The gene was inherited from the first parent.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.ParameterOrigin.SecondParent">
            <summary>
            The gene was inherited from the second parent.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MaximumRepairAttempts">
            <summary>
            Gets the maximum number of attempts to make a genome valid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateRandomGenome(System.Int32)">
            <summary>
            Creates a genome with random gene values. A repair operation is applied after the creation
            to ensure the genome is valid.
            </summary>
            <param name="age">The genome's age.</param>
            <returns>The created genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateDefaultGenome(System.Int32)">
            <summary>
            Creates a genome that uses the target algorithm's specified default values (or a random domain value, if no default value is specified).
            </summary>
            <param name="age">The age.</param>
            <returns>The default genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Mutates a given genome. A repair operation is applied after the mutation
            to ensure the genome is valid at the end of the method.
            </summary>
            <param name="genome">Genome to mutate. Will be modified.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Crossover(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Computes a single child genome for the given parent genomes.
            Does not include a repair step, so always call <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)" /> afterwards.
            </summary>
            <param name="parent1">The first parent.</param>
            <param name="parent2">The second parent.</param>
            <returns>The computed child. May be invalid.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Tries to make the given genome valid by using <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MutateParameter(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode)" />
            at most <see cref="P:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MaximumRepairAttempts" /> times for every invalid parameter.
            </summary>
            <param name="genome">Genome to make valid. Will be modified.</param>
            <exception cref="T:System.TimeoutException">Thrown if no valid genome could be found.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Decides whether the given genome is valid by calling <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CheckAgainstParameterTree(Optano.Algorithm.Tuner.Genomes.Genome)" />.
            </summary>
            <param name="genome">The genome to test.</param>
            <returns>False if the genome is invalid.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateGenome(System.Int32,System.Boolean)">
            <summary>
            Creates a genome with random or default gene values. A repair operation is applied after the creation
            to ensure the genome is valid.
            </summary>
            <param name="age">The genome's age.</param>
            <param name="useDefaultValues">Indicates whether to use the domain-default values [false], or random domain values [true]. </param>
            <returns>The created genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MutateParameter(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode)">
            <summary>
            Changes the given genome by mutating the gene corresponding to the given <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode" />.
            </summary>
            <param name="genome">The genome to mutate. Will be modified.</param>
            <param name="parameterNode">Specification of the parameter / gene to mutate.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.FindParameterNodes">
            <summary>
            Finds all <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode" />s of the given <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" />.
            </summary>
            <returns>The found nodes in a list.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.SetGeneValue(Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.GenomeBuilder.ParameterOrigin)">
            <summary>
            Sets the value for the specified gene on the given child,
            respecting its parents and the latest parameter origin.
            </summary>
            <param name="node">
            Specifies the gene to set the value for.
            Is allowed to be an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode" />. In this case, nothing happens.
            </param>
            <param name="parent1">The first parent.</param>
            <param name="parent2">The second parent.</param>
            <param name="child">The child. Genome will be modified.</param>
            <param name="lastParameterOrigin">
            The latest parameter origin.
            Influences the probability which parent's gene the child inherits.
            </param>
            <returns>
            The origin of the inherited gene value.
            For an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode" />, returns the given parameter origin.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CheckAgainstParameterTree(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Checks whether the given genome matches the <see cref="F:Optano.Algorithm.Tuner.Genomes.GenomeBuilder._parameterTree" />.
            </summary>
            <param name="genome">The genome to check.</param>
            <returns>Whether or not the genome matches the parameter tree.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.IGenomeRepresentation">
            <summary>
            An object representing a <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.IGenomeRepresentation.Genome">
            <summary>
            Gets the genome described by this object.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome">
            <summary>
            A wrapper around a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> making the class immutable.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GenomeComparer">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer"/> of <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.ImmutableGenome._genome">
            <summary>
            The wrapped <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.#ctor(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> class.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to copy and wrap.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.Age">
            <summary>
            Gets the age of the genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.CreateMutableGenome">
            <summary>
            Creates a mutable <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> with the same age and genes as this instance.
            </summary>
            <returns>The newly created <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Identifies the part of the genome that contains active genes,
            i.e. OR nodes are evaluated and only correct subtrees are added.
            Applies the <see cref="T:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter"/>
            that are defined in the <paramref name="parameterTree"/>.
            </summary>
            <param name="parameterTree">
            Structure of parameters.
            Caller is responsible for making sure it fits the genome.
            </param>
            <returns>The part of the genome that contains active genes, filtered with <see cref="T:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToString">
            <summary>
            Returns a string representation of the genome.
            </summary>
            <returns>The string representation of the genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToFilteredGeneString(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Prints the genome in the form of [identifier1: value1, ..., identifiern: valuen](age: age).
            Only uses the currently active parameters. I.e. genes are filtered with <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </summary>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <returns>
            The <see cref="T:System.String"/> that represents the genome.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToCappedDecimalString">
            <summary>
            Returns <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToString"/> with <see cref="T:System.Double"/> valued <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> capped to <c>7</c> decimals.
            </summary>
            <returns>The capped string.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer">
            <summary>
            An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> that only checks for gene values
            egardless of genome age or gene order.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Determines whether the specified genomes are equal by comparing their gene values only.
            </summary>
            <param name="x">The first <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome" />.</param>
            <param name="y">The second <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome" />.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Computes a hash code for the specified genome.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome" />.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.IRepairedGenomeRepresentation">
            <summary>
            An object representing a <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> which might represent the repaired version of another.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.IRepairedGenomeRepresentation.IsRepaired">
            <summary>
            Gets a value indicating whether the original <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> was invalid and needed
            repairing.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.Population">
            <summary>
            Population used in the Genetic Algorithm.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Population._competitive">
            <summary>
            Competitive part of the population.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Population._nonCompetitive">
            <summary>
            Non-competitive part of the population.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Population._configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Population" /> class.
            </summary>
            <param name="configuration">Configuration parameters.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.#ctor(Optano.Algorithm.Tuner.Genomes.Population)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Population" /> class.
            Copy constructor for <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> class.
            </summary>
            <param name="original">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> object to copy.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Population.Count">
            <summary>
            Gets the total number of genomes in this <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Population.CompetitiveCount">
            <summary>
            Gets the number of competitive genomes.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Population.NonCompetitiveCount">
            <summary>
            Gets the number of non-competitive genomes.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Genomes.Population.AllGenomes">
            <summary>
            Gets all <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s of this <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>, regardless of gender.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.GetCompetitiveIndividuals">
            <summary>
            Returns the competitive part of the population.
            </summary>
            <returns>The competitive part of the population.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.GetNonCompetitiveMates">
            <summary>
            Returns the non competitive part of the population.
            </summary>
            <returns>The non competitive part of the population.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.Age">
            <summary>
            Ages each individual and removes the ones that exceed <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxGenomeAge"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.ReplaceIndividualsWithMutants(Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Replaces <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.PopulationMutantRatio"/> percent of the non competitive population with new, random individuals.
            Replacement is happening randomly.
            The new individuals have the same age distribution as the replaced ones.
            </summary>
            <param name="genomeBuilder"><see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> to build the random individuals.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.AddGenome(Optano.Algorithm.Tuner.Genomes.Genome,System.Boolean)">
            <summary>
            Add genome to population.
            </summary>
            <param name="genome">The genome.</param>
            <param name="isCompetitive">Whether it should be added to the competive population part or not.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Population.IsEmpty">
            <summary>
            Returns whether the population is empty.
            </summary>
            <returns>True if the population is empty.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1">
            <summary>
            A gene's typed value.
            </summary>
            <typeparam name="T">The value's type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Genomes.Values.Allele`1._value">
            <summary>
            The value itself.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1" /> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.GetValue">
            <summary>
            Gets the gene's value.
            </summary>
            <returns>The gene's value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this gene value.
            </summary>
            <returns>A <see cref="T:System.String" /> presentation of the gene's value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.GetHashCode">
            <summary>
            Computes the hash code for this allele.
            Hash only depends on <see cref="F:Optano.Algorithm.Tuner.Genomes.Values.Allele`1._value"/>.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.Optano#Algorithm#Tuner#Genomes#Values#IAllele#GetValue">
            <summary>
            Gets the gene's value as an <see cref="T:System.Object" />.
            </summary>
            <returns>The gene's value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele">
            <summary>
            A gene's value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Genomes.Values.IAllele.GetValue">
            <summary>
            Gets the gene's value.
            </summary>
            <returns>The gene's value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Logging.LoggingHelper">
            <summary>
            Helper class to print log messages.
            Prints all text via the <see cref="T:NLog.Logger"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.LoggingHelper.ConsoleTargetName">
            <summary>
            Identifier for console in <see cref="T:NLog.Config.LoggingConfiguration"/>.
            Used in <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.Configure(System.String)"/> and <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.LoggingHelper.LoggingLock">
            <summary>
            Lock object to synchronize access.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.LoggingHelper.nlogInstance">
            <summary>
            Reference to the NLog instance that is used by the <see cref="T:Optano.Algorithm.Tuner.Logging.LoggingHelper"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Logging.LoggingHelper.NlogInstance">
            <summary>
            Gets the <see cref="F:Optano.Algorithm.Tuner.Logging.LoggingHelper.nlogInstance"/>.
            If it is null, a new <see cref="T:NLog.Logger"/> is created.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.WriteLine(Optano.Algorithm.Tuner.Logging.VerbosityLevel,Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter)">
            <summary>
            Logs the given <paramref name="text"/> at the provided verbosity.
            </summary>
            <param name="minimumVerbosity">The minimum verbosity a logger must have in order to receive the message.
            </param>
            <param name="text">The line to log.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.WriteLine(Optano.Algorithm.Tuner.Logging.VerbosityLevel,Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter,System.Object[])">
            <summary>
            Writes the given <paramref name="formattableText"/>, formatted with <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/> and the given <paramref name="arguments"/>.
            </summary>
            <param name="minimumVerbosity">The minimum verbosity a logger must have in order to receive the message.
            </param>
            <param name="formattableText">A text with using wildcards as {0}, to fill with <paramref name="arguments"/>.</param>
            <param name="arguments">The arguments to fill in the <paramref name="formattableText"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.WriteLine(Optano.Algorithm.Tuner.Logging.VerbosityLevel,System.Globalization.CultureInfo,Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter,System.Object[])">
            <summary>
            Writes the given <paramref name="formattableText"/>, formatted with <paramref name="culture"/> and the given <paramref name="arguments"/>.
            </summary>
            <param name="minimumVerbosity">The minimum verbosity a logger must have in order to receive the message.
            </param>
            <param name="culture">The culture to use.</param>
            <param name="formattableText">A text with using wildcards as {0}, to fill with <paramref name="arguments"/>.</param>
            <param name="arguments">The arguments to fill in the <paramref name="formattableText"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.WriteLine(Optano.Algorithm.Tuner.Logging.VerbosityLevel,System.FormattableString)">
            <summary>
            Writes the <paramref name="format"/> using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="minimumVerbosity">The minimum verbosity a logger must have in order to receive the message.
            </param>
            <param name="format">The interpolated string to write.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.WriteLine(Optano.Algorithm.Tuner.Logging.VerbosityLevel,System.Globalization.CultureInfo,System.FormattableString)">
            <summary>
            Writes the <paramref name="format"/> using <paramref name="culture"/>.
            </summary>
            <param name="minimumVerbosity">The minimum verbosity a logger must have in order to receive the message.
            </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use for formatting.</param>
            <param name="format">The interpolated string to write.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.Configure(System.String)">
            <summary>
            Sets a common NLog configuration.
            Logs to console + <paramref name="outputFilename"/>.
            </summary>
            <param name="outputFilename">
            The output filename.
            It will be combined with <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromCurrentDirectory(System.String)"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)">
            <summary>
            Changes the logging level set for console.
            <para>Assumes there is a rule which applies to a single target named <see cref="F:Optano.Algorithm.Tuner.Logging.LoggingHelper.ConsoleTargetName"/>.</para>
            </summary>
            <param name="verbosity">Specifies the verbosity the console should have.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.TransformToMaxLogLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)">
            <summary>
            Transforms a <see cref="T:Optano.Algorithm.Tuner.Logging.VerbosityLevel"/> value into a maximum <see cref="T:NLog.LogLevel"/>.
            </summary>
            <param name="verbosity">Level to transform.</param>
            <returns>The transformed <see cref="T:NLog.LogLevel"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter">
            <summary>
            Adapter that resolved the implicit cast of interpolated strings from <see cref="T:System.FormattableString"/> to <see cref="T:System.String"/>, so that a custom <see cref="T:System.Globalization.CultureInfo"/> can be applied before the <see cref="T:System.FormattableString"/> is converted.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter"/> class.  
            </summary>
            <param name="s">
            The string to wrap.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.String">
            <summary>
            Gets the represented <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.op_Implicit(System.String)~Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter">
            <summary>
            Implicit conversion from <see cref="T:System.String"/> to <see cref="T:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter"/>.
            </summary>
            <param name="s">
            The <see cref="T:System.String"/> to implicitly convert.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.op_Implicit(System.FormattableString)~Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter">
            <summary>
            Implicit conversion from <see cref="T:System.FormattableString"/> to <see cref="T:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter"/>.
            If no method override is defined for <see cref="T:System.FormattableString"/>, just use the current culture to format the interpolated string.
            </summary>
            <param name="fs">The interpolated string.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.op_Implicit(Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter)~System.String">
            <summary>
            Implicit conversion of <see cref="T:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="s">The string to convert.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Logging.StringIfNotFormattableStringAdapter.ToString">
            <summary>
            Gets the wrapped <see cref="T:System.String"/>.
            </summary>
            <returns>
            The wrapped <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Logging.VerbosityLevel">
            <summary>
            Levels of verbosity for console output.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Warn">
            <summary>
            No console output apart from warnings, errors and downing of computing nodes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info">
            <summary>
            Prints everything printed by <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Warn"/>. 
            Additionally prints the most relevant information, like generation numbers or the discovery of a new best genome.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Debug">
            <summary>
            Prints everything printed by <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info"/>.
            Additionally prints detailed information about the run, e.g. current population.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Trace">
            <summary>
            Prints everything printed by <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Debug"/>.
            Additionally prints information about internal mechanisms as well as very detailed run information,
            e.g. calls to or results from the target algorithm.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3">
            <summary>
            This class preforms the training of the random forest predicting parameter combination quality, and performs
            the 'genetic engineering' as described in
            https://wiwi.uni-paderborn.de/fileadmin/dep3ls7/Downloads/Publikationen/PDFs/IJCAI-15_1.pdf.
            </summary>
            <typeparam name="TLearnerModel">
            ML algorithm that can train an <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/>.
            </typeparam>
            <typeparam name="TPredictorModel">
            Ensemble predictor that works on <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree"/>s 
            for predicting performance of potential offspring genomes.
            </typeparam>
            <typeparam name="TSamplingStrategy">
            Sampling strategy to use for aggregating the training data contained in a <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3._atomicParentCounter">
            <summary>
            The atomic parent counter.
            Should only be accessed with <see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GetNextParentCounterIndex"/> (or <see cref="M:System.Threading.Interlocked.Increment(System.Int32@)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3._currentGeneration">
            <summary>
            Gets the current generation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> class. 
            </summary>
            <param name="tree">
            The parameter tree to work on.
            </param>
            <param name="configuration">
            The configuration.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Optano#Algorithm#Tuner#MachineLearning#IGeneticEngineering#GenomeTransformator">
            <summary>
            Gets the interface specific implementation of <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GenomeTransformator" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GenomeTransformator">
            <summary>
            Gets a transformator, that can transform a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome" /> into its respective <see cref="T:double[]" />
            representation, using a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RandomForestLearner">
            <summary>
            Gets the Custom random forest learner that uses the <see cref="T:SharpLearning.DecisionTrees.SplitSearchers.LinearSplitSearcher`1" /> and
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RandomForestPredictor">
            <summary>
            Gets or sets the random forest predictor that was trained by <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RandomForestLearner" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Trees">
            <summary>
            Gets the list of the currently learned <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RandomForestPredictor" />'s internal trees.
            Required for the <see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ConstructOffspring(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}},System.Int32[],SharpLearning.Containers.Matrices.IMatrix{System.Double},System.Int32[])" /> (= Targeted Sampling) method.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.EngineerGenomes(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome},System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Engineers an offspring-genomes for each <paramref name="chosenCompetitiveParents"/>, using the targeted sampling algorithm.
            </summary>
            <param name="chosenCompetitiveParents">
            The chosen Competitive Parents.
            </param>
            <param name="nonCompetitiveMates">
            The non Competitive Mates.
            </param>
            <param name="genomesForDistanceComputation">
            The genomes For Distance Computation.
            </param>
            <returns>
            The offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GetAttractivenessMeasure(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Gets the predicted ranks for <paramref name="nonCompetitiveMates"/>, which can be used for weights in sexual
            selection.
            See <see cref="M:Optano.Algorithm.Tuner.Randomizer.RouletteSelect(System.Double[],System.Boolean)"/>.
            </summary>
            <param name="nonCompetitiveMates">
            The non competitive parents to score.
            </param>
            <returns>
            The <see cref="T:double[]"/> attractiveness measure.
            Lower numbers (=ranks in this case) indicate higher attractiveness.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.TrainForest(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            Trains a random forest.
            Updates <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Trees"/>: After the call, <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Trees"/> will contain all
            <see cref="T:SharpLearning.DecisionTrees.Models.RegressionDecisionTreeModel"/> that were created within the random forest.
            </summary>
            <param name="trainingData">
            The observations to learn.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RestoreInternalDictionariesWithCorrectComparers">
            <summary>
            Hyperion Serializer "removes" Array-/Genome Comparers from restored Dictionaries, which leads to Key misses.
            Explicitly reload/restore dictionaries with correct comparers here.
            Calls recursively to subclasses.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Computes the index sets for categorical features in double representation.
            </summary>
            <param name="lengthOfFeatures">
            The lengths of features.
            </param>
            <returns>
            Dictionary that uses all indices of <c>all</c> categorical features and maps them to the set of indices that represent the key's categorical feature.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.DetermineBestOffspringOverAllLeaves(System.Collections.Generic.List{Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank},System.Double[])">
            <summary>
            Given the <paramref name="normalizedDistanceFactored"/> and the
            <paramref name="predictedRankForPotentialOffspring"/>,
            this method computes the resulting <c>final score</c> for all potential offspring and returns the
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/>
            with best predicted score.
            </summary>
            <param name="predictedRankForPotentialOffspring">
            The rank for every potential offspring, as predicted by the random
            forest.
            </param>
            <param name="normalizedDistanceFactored">
            Distances normalized to the range [0, distanceInfluenceFactor].
            </param>
            <returns>
            The (assumed) best offspring for the current pair of competitive- and non-competitive genomes.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ExtractFeatureRepresentationFromDonor(System.Int32,System.Int32,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation)">
            <summary>
            Extract the feature representation of feature with length <paramref name="lengthOfCurrentFeature"/>, 
            starting at <paramref name="featureStartColumnIndex"/> from the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/> to work on.
            </summary>
            <param name="featureStartColumnIndex">
            The feature start column index.
            </param>
            <param name="lengthOfCurrentFeature">
            The length of current feature.
            </param>
            <param name="parentToUse">
            The parent to use.
            </param>
            <returns>
            The <see cref="T:double[]"/> representation of the requested feature.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.SplitMatrixInRows(SharpLearning.Containers.Matrices.IMatrix{System.Double})">
            <summary>
            Splits the given <paramref name="matrix"/> in rows.
            Returns a copy of the rows and does not alter the given object.
            </summary>
            <param name="matrix">
            The matrix.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>, containing the rows of the given <paramref name="matrix"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ExtractSubArray(System.Double[],System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
            Extracts a sub array from <paramref name="array"/>.
            </summary>
            <param name="array">The array.</param>
            <param name="indices">The indices which should be copied to the new array.</param>
            <returns>A new array containing a subset of the values of <paramref name="array"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ValidateAverageDistanceParameters(System.Double[],System.Collections.Generic.IReadOnlyList{System.Double[]})">
            <summary>
            Makes sure that input to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeDistanceForSinglePotentialOffspring(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,System.Collections.Generic.IReadOnlyList{System.Double[]},System.Int32[])"/> is valid.
            Logs/Throws otherwise.
            </summary>
            <param name="slicedConvertedDistanceComputationGenomes">
            Features of potential offspring that are relevant for current distance computation.
            </param>
            <param name="slicedGenomeHistory">
            Features of all genomes in current population that are relevant for current distance computation.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeAverageMinkowskiDistance(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,System.Collections.Generic.IReadOnlyList{System.Double[]},System.Int32[])">
            <summary>
            Minkowski-Distance is the L1-Norm.
            </summary>
            <param name="slicedOffspring">
            Offspring to compute distance for.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            Unique genomes to consider for distance computation.
            </param>
            <param name="occurrenceByRow">
            Number of occurrences per <paramref name="slicedConvertedDistanceComputationGenomes"/>
            before making collection distinct.
            </param>
            <returns>
            Average L1 distance between <paramref name="slicedOffspring"/> and all
            <paramref name="slicedConvertedDistanceComputationGenomes"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.CreateRandomForestLearner">
            <summary>
            Creates a <typeparamref name="TLearnerModel"/> as specified by <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.Configuration"/>.
            </summary>
            <returns>The created <typeparamref name="TLearnerModel"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeDistanceForSinglePotentialOffspring(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,System.Collections.Generic.IReadOnlyList{System.Double[]},System.Int32[])">
            <summary>
            Computes distance between <paramref name="slicedOffspring"/> and all <parameref name="slicedConvertedDistanceComputationGenomes"/>.
            Method is used according to selected <see cref="T:Optano.Algorithm.Tuner.Configuration.DistanceMetric"/> in <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.DistanceMetric"/>.
            </summary>
            <param name="slicedOffspring">
            Sliced, potential offspring to compute distances for.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            Sliced population to compute distances to. Each row should be unique.
            </param>
            <param name="occurrenceByRow">
            Occurrence count of duplicate population members.
            </param>
            <returns>
            The computed distance measure.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeDistancesForAllPotentialOffspring(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation},SharpLearning.Containers.Matrices.IMatrix{System.Double},System.Int32[],System.Int32[])">
            <summary>
            Compute the distances for all potential offspring.
            </summary>
            <param name="targetedSamplingOffspring">
            The targeted sampling offspring.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            The sliced converted distance computation genomes.
            Each genome should be unique. Use <paramref name="distancecomputationGenomeOccurrences"/> 
            to indicate the total number of occurrences in the base population.
            </param>
            <param name="distanceComputationFeatureIndices">
            The distance computation feature indices.
            </param>
            <param name="distancecomputationGenomeOccurrences">
            The distancecomputation genome occurrences.
            I.e. the total number of occurences for each given 
            (unique!) <paramref name="slicedConvertedDistanceComputationGenomes"/>.
            </param>
            <returns>
            The <see cref="T:double[]"/> distances.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeHammingDistanceTotalSum(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,System.Collections.Generic.IReadOnlyList{System.Double[]},System.Int32[])">
            <summary>
            Computes the hamming distances between <paramref name="slicedOffspring"/> 
            and all. <parameref name="slicedConvertedDistanceComputationGenomes"/>
            </summary>
            <param name="slicedOffspring">
            The sliced potential offspring.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            The sliced population members. Members should be unique.
            Use <paramref name="occurrenceByRow"/> to indicate the total number of occurrences for each member.
            </param>
            <param name="occurrenceByRow">
            The number of occurrences for each <paramref name="slicedConvertedDistanceComputationGenomes"/>.
            </param>
            <returns>
            The sum of all computed hamming distances.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeNormalizedDistancesWithInfluenceFactor(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation},SharpLearning.Containers.Matrices.IMatrix{System.Double},System.Int32[],System.Int32[])">
            <summary>
            Computes distance for each <paramref name="targetedSamplingOffspring"/> 
            to all <paramref name="slicedConvertedDistanceComputationGenomes"/>.
            Distance is normalized to be in range [0, <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance"/>].
            </summary>
            <param name="targetedSamplingOffspring">
            All potential offspring.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            Unique set of the population members to compute distacnes to.
            </param>
            <param name="distanceComputationFeatureIndices">
            The indexes of features that are relevant for the current distance computation.
            </param>
            <param name="distanceGenomeOccurrences">
            The number of occurrences for each <paramref name="slicedConvertedDistanceComputationGenomes"/>
            in the original population.
            </param>
            <returns>
            The <see cref="T:double[]"/> containing the distance influence on the final predicted offspring score.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeReachableLeavesAndFixations(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}})">
            <summary>
            Computes the set of all leaves that any offspring of the given <paramref name="parentGenomes"/> can fall into.
            </summary>
            <param name="parentGenomes">
            The parent Genomes.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
            (<see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})"/>).
            </param>
            <returns>
            The set of reachable leaf nodes.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ConstructOffspring(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}},System.Int32[],SharpLearning.Containers.Matrices.IMatrix{System.Double},System.Int32[])">
            <summary>
            Generates |targetSampleSize| many parameterizations for every possible leaf node among all forests
            and returns the offspring for which the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RandomForestPredictor"/> predicts the best performance
            (in combination with some bonus with respect to the distance between each offspring and the current population).
            </summary>
            <param name="parentGenomes">
            The parent Genomes.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
            (<see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})"/>).
            </param>
            <param name="distanceComputationFeatureIndices">
            Indices of features that should be considered during distance computation.
            </param>
            <param name="slicedConvertedDistanceComputationGenomes">
            Members of the current population to compute distances to.
            Already slieced to the set of <paramref name="distanceComputationFeatureIndices"/>.
            Only unique genomes required. Total count of occurences is given via <paramref name="distanceGenomeOccurrences"/>.
            </param>
            <param name="distanceGenomeOccurrences">
            The total number of occurences for each <paramref name="slicedConvertedDistanceComputationGenomes"/> in the base population.
            </param>
            <returns>
            The constructed offspring with best predicted score.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.RemoveTerribleOffspring(System.Collections.Generic.IReadOnlyCollection{Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank})">
            <summary>
            Removes all "terrible" offspring.
            Offspring is considered "terrible" if it has no chance to "overtake" the best predicted offspring by using the <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance"/>.
            I.e. Rank(offspring) > Rank(bestPredictedOffspring) + <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance"/> (+ eps.)
            Additionally, duplicate offspring will be removed, too.
            </summary>
            <param name="potentialOffspring">
            The potential offspring to filter.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.List`1"/> with offspring that has a chance to be selected as final offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.CountUniqueFeatures(System.Double[],System.Double[])">
            <summary>
            Counts the number of features that are different between <paramref name="offspring"/> and
            <paramref name="populationMember"/>.
            A feature is considered to be different when the relative difference (i.e. offspringValue/populationMemberValue)
            exceeds 1e-2.
            </summary>
            <param name="offspring">
            The offspring for which the current distance is computed.
            </param>
            <param name="populationMember">
            A member of the current/historical population.
            </param>
            <returns>
            The number of unique features.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.CreateSingleTargetSampleOffspring(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}})">
            <summary>
            Creates a single target sampling offspring.
            </summary>
            <param name="leaf">
            The leaf that is targeted.
            </param>
            <param name="parentGenomes">
            The parent genomes.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
            (<see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})"/>).
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/> of the generated offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.DetermineCurrentFeatureValueDonor(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Int32)">
            <summary>
            Determines the current feature value donor.
            Donor depends on whether the current feature is fixed to a certain parent or not.
            </summary>
            <param name="leaf">
            The leaf.
            </param>
            <param name="parentGenomes">
            The parent genomes.
            </param>
            <param name="featureStartColumnIndex">
            The feature start column index.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/>.
            If feature is not fixed to a specific parent, a biased coin is flipped.
            Probability for selecting feature of competitive parent: <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CrossoverProbabilityCompetitive"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.DetermineDoubleRepresentationOfNextFeature(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Int32,System.Int32)">
            <summary>
            Determine the double representation of next feature.
            Depends on fixation (or a biased coin flip for 'free' feature).
            </summary>
            <param name="leaf">
            The leaf.
            </param>
            <param name="parentGenomes">
            The parent genomes.
            </param>
            <param name="featureStartColumnIndex">
            The feature start column index.
            </param>
            <param name="lengthOfCurrentFeature">
            The length of current feature.
            </param>
            <returns>
            The <see cref="T:double[]"/> representation of the given feature to use in the potential offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GetAttractivenessMeasure(SharpLearning.Containers.Matrices.F64Matrix)">
            <summary>
            Computes an attractiveness measure for the given non-competitive genomes.
            </summary>
            <param name="transformedNonCompetitives">
            The <see cref="T:double[]"/> representation of the non-competitive genomes.
            </param>
            <returns>
            The <see cref="T:double[]"/> containing the predicted rank for each given genome.
            Lower values indicate higher attractiveness.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.GetNextParentCounterIndex">
            <summary>
            Gets the next parent counter index. Used during export of histogram csv data.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/> ID.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.NormalizeDistancesAndApplyInfluenceFactor(System.Double[])">
            <summary>
            Normalize given <paramref name="distances"/> so that they are in the range 
            [0, <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxRanksCompensatedByDistance"/>].
            </summary>
            <param name="distances">
            The distances to normalize.
            </param>
            <returns>
            The <see cref="T:double[]"/> containing the normalized distances.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.PerformTargetedSampling(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations})">
            <summary>
            Generates and scores |targetSampleSize| many re-combinations of the given parents for every leaf.
            </summary>
            <param name="parentGenomes">
            The parent Genomes.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
            (<see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})"/>).
            </param>
            <param name="targetLeaves">
            The leafs to sample for.
            </param>
            <returns>
            All genrated offspring with predicted rank.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.SelectColumnIndicesForDistanceComputation(System.Int32)">
            <summary>
            Select a random subset of features that are considered for distance computation.
            </summary>
            <param name="columnCountOfGenomeDoubleRepresentation">
            The number of columns of a transformed <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </param>
            <returns>
            The <see cref="T:int[]"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.TransformOffspringToGenome(System.Double[])">
            <summary>
            Restores a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> from the <see cref="T:double[]"/>-representation given by
            <paramref name="offspring"/>.
            </summary>
            <param name="offspring">
            The <see cref="T:double[]"/> representation of a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </param>
            <returns>
            The restored <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.BulkGenomeTransformation`1">
            <summary>
            Class that handles the encoding from <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/> for a given <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <typeparam name="TCategoricalEncoding">
            The categorical encoder.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.BulkGenomeTransformation`1.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.BulkGenomeTransformation`1"/> class.
            </summary>
            <param name="tree">
            The parameter tree.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.BulkGenomeTransformation`1.ConvertAllGenomesToMatrix(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Converts the given <paramref name="genomes"/> into a single <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/>.
            Each genome will be represented by a single row in the matrix.
            </summary>
            <param name="genomes">
            The genomes to convert.
            </param>
            <returns>
            The converted genome matrix.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation">
            <summary>
            Utility class that provides better readibility than having to deal with <see cref="T:double[]"/> all the time.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.EqualityComparer">
            <summary>
            The equality comparer.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation._convertedGenome">
            <summary>
            double-representation of a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/> struct.
            </summary>
            <param name="convertedGenome">
            The converted genome that should be wrapped.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.Length">
            <summary>
            Gets the number of columns in the <see cref="F:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation._convertedGenome"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.Item(System.Int32)">
            <summary>
            Hands the <paramref name="value"/> and <paramref name="index"/> to the internal double array.
            </summary>
            <param name="index">
            The index.
            </param>
            <returns>
            The <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.op_Implicit(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation)~System.Double[]">
            <summary>
            Implicit conversion from struct to double array.
            </summary>
            <param name="genomeRepresentation">The genome to convert.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.op_Implicit(System.Double[])~Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation">
            <summary>
            Implicit conversion from double array to <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/>.
            </summary>
            <param name="featureValues">The feature representation to convert.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.op_Equality(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation)">
            <summary>
            The equality operator.
            </summary>
            <param name="a">Parameter a.</param>
            <param name="b">Parameter b.</param>
            <returns>a==b.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.op_Inequality(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation)">
            <summary>
            The inequality operator.
            </summary>
            <param name="a">Parameter a.</param>
            <param name="b">Parameter b.</param>
            <returns>a!=b.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.Equals(System.Object)">
            <summary>
            Uses a <see cref="T:Optano.Algorithm.Tuner.DoubleArrayEqualityComparer"/> to check for equality.
            </summary>
            <param name="other">
            The object to compare with.
            </param>
            <returns>
            The true if other is equal.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation.GetHashCode">
            <summary>
            Uses the <see cref="T:Optano.Algorithm.Tuner.DoubleArrayEqualityComparer"/> to compute a hash code.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank">
            <summary>
            The genome double representation with predicted rank.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.#ctor(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank"/> struct.
            </summary>
            <param name="genomeRepresentation">
            The genome representation.
            </param>
            <param name="predictedRank">
            The predicted rank.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.ConvertedGenomeRepresentation">
            <summary>
            Gets the converted genome representation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.PredictedRank">
            <summary>
            Gets the predicted rank.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.op_Equality(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank)">
            <summary>
            The equality operator.
            </summary>
            <param name="a">Parameter a.</param>
            <param name="b">Parameter b.</param>
            <returns>a==b.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.op_Inequality(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank)">
            <summary>
            The inequality operator.
            </summary>
            <param name="a">Parameter a.</param>
            <param name="b">Parameter b.</param>
            <returns>a!=b.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.Equals(System.Object)">
            <summary>
            Checks if <paramref name="other"/> is equal to this <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank"/>.
            </summary>
            <param name="other">
            The object to compare.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentationWithPredictedRank.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/> hash code.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.IBulkGenomeTransformation">
            <summary>
            Handles the encoding from <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to <see cref="T:double[]"/> representations.
            Especially provides support for SharpLearning's <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.IBulkGenomeTransformation.ConvertAllGenomesToMatrix(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Converts all genomes into <see cref="T:double[]"/> representation
            and stores them within a <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/>.
            </summary>
            <param name="genomes">
            The genomes to convert.
            </param>
            <returns>
            The <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/>, containing a row for each converted genome.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering">
            <summary>
            Genetic engineering is an alternative crossover operator that uses a model-based approach for constructing new offspring.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering.GenomeTransformator">
            <summary>
            Gets the genome transformator.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering.EngineerGenomes(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome},System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Engineers an offspring-genomes for each <paramref name="chosenCompetitiveParents"/>, using the targeted sampling algorithm.
            </summary>
            <param name="chosenCompetitiveParents">
            The chosen Competitive Parents.
            </param>
            <param name="nonCompetitiveMates">
            The non Competitive Mates.
            </param>
            <param name="genomesForDistanceComputation">
            The genomes For Distance Computation.
            </param>
            <returns>
            The offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering.GetAttractivenessMeasure(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Gets the predicted ranks for <paramref name="nonCompetitiveMates"/>, which can be used for weights in sexual
            selection.
            See <see cref="M:Optano.Algorithm.Tuner.Randomizer.RouletteSelect(System.Double[],System.Boolean)"/>.
            </summary>
            <param name="nonCompetitiveMates">
            The non competitive parents to score.
            </param>
            <returns>
            The <see cref="T:double[]"/> attractiveness measure.
            Lower numbers (=ranks in this case) indicate higher attractiveness.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering.TrainForest(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            Trains a random forest.
            </summary>
            <param name="trainingData">
            The observations to learn.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.IGenomeLearner`2">
            <summary>
            Interface to start the training of an <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGenomeLearner`2"/>.
            </summary>
            <typeparam name="TGenomePredictor">
            Type of the trained genome predictor.
            </typeparam>
            <typeparam name="TSamplingStrategy">
            Type of the sampling strategy used for aggregating training data.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.IGenomeLearner`2.Learn(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            Trains the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGenomeLearner`2"/>, using the given <paramref name="data"/>.
            </summary>
            <param name="data">
            The training data.
            </param>
            <returns>
            A trained model of type <typeparamref name="TGenomePredictor"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1">
            <summary>
            Extends the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor"/> interface and provides access to the ensemble's internal <typeparamref name="TWeakPredictor"/>s.
            </summary>
            <typeparam name="TWeakPredictor">
            The ensembles internal weak predictor type.
            </typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1.InternalModels">
            <summary>
            Gets <c>modifiable</c> access to the ensembles internal weak predictors.
            Modifiable includes that single internal <typeparamref name="TWeakPredictor"/>s might be <c>replaced</c> with different models.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1.PredictIndividualTreeValues(System.Double[])">
            <summary>
            Predicts a single <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>'s target performance. Does not compute the average over predictions of all Trees, but instead the individual values.
            </summary>
            <param name="genome">
            The converted <see cref="T:double[]"/>representation of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to predict.
            </param>
            <returns>
            Each tree's predicted performance for the <paramref name="genome"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor">
            <summary>
            Interface to access a predictor model.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor.Predict(System.Double[])">
            <summary>
            Predicts a single <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>'s target performance.
            </summary>
            <param name="genome">The converted <see cref="T:double[]"/>representation of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to predict.</param>
            <returns>The predicted performance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor.Predict(SharpLearning.Containers.Matrices.F64Matrix)">
            <summary>
            Predicts all given <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s' target performances.
            </summary>
            <param name="genomes">The converted <see cref="T:double[]"/>representations of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to predict.</param>
            <returns>The predicted performance for every <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor.Predict(SharpLearning.Containers.Matrices.F64Matrix,System.Int32[])">
            <summary>
            Predicts the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s' target performances for the given <see cref="M:SharpLearning.Containers.Matrices.F64Matrix.Rows(System.Int32[])"/> that are specifed by <paramref name="indices"/>.
            </summary>
            <param name="genomes">The converted <see cref="T:double[]"/>representations of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to predict.</param>
            <param name="indices">The indices to filter <paramref name="genomes"/> by.</param>
            <returns>The predicted performance for the <paramref name="indices"/>-filtered <paramref name="genomes"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IWeakPredictor">
            <summary>
            Implemented by non-ensemble learners. A weak learner can be used as an internal model within an <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/>.
            Right now, it is not enforced that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/> actually needs to us an <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IWeakPredictor"/> as its <c>TWeakPrecitor</c> type.
            This means, that ensembles of ensembles can be created.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> config.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.TreeCount">
            <summary>
            Gets the number of trees in the random forest.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumSplitSize">
            <summary>
            Gets the minimum size of a split in the trees.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MaximumTreeDepth">
            <summary>
            Gets the maximum depth of a tree.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.FeaturesPerSplitRatio">
            <summary>
            Gets the percentage of features to use per split in each tree.
            Commonly used values in literature are ~1/3, or sqrt(#features).
            Keep in mind that #features may be larger than the
            number of parameters in your tree (see <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/>)!.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumInformationGain">
            <summary>
            Gets the minimum information gain for a split in the trees.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.SubSampleRatio">
            <summary>
            Gets the proportion of the observation subset that is passed to each tree during training.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.RunParallel">
            <summary>
            Gets a value indicating whether to train the trees in multiple threads.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks if this config is compatible to the <paramref name="other"/> config.
            </summary>
            <param name="other">
            The other cofiguration.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible in a technical sense for one
            to be used in a continued run based on a run using the other.
            <para>In this case, this is the same as <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>,
            because the random forest is not re-initialized on continue.</para>
            </summary>
            <param name="other">Configuration used for the start of run.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> builder.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultTreeCount">
            <summary>
            The default tree count.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultMinimumSplitSize">
            <summary>
            The default minimum split size.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultMaximumTreeDepth">
            <summary>
            The default maximum tree depth.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultFeaturesPerSplitRatio">
            <summary>
            The default features per split ratio.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultMinimumInformationGain">
            <summary>
            The default minimum information gain.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultSubSampleRatio">
            <summary>
            The default sub sample ratio.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.DefaultRunParallel">
            <summary>
            The default run parallel.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.TreeCount">
            <summary>
            Gets or sets the tree count.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.MinimumSplitSize">
            <summary>
            Gets or sets the minimum split size.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.MaximumTreeDepth">
            <summary>
            Gets or sets the maximum tree depth.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.FeaturesPerSplitRatio">
            <summary>
            Gets or sets the features per split.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.MinimumInformationGain">
            <summary>
            Gets or sets the minimum information gain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SubSampleRatio">
            <summary>
            Gets or sets the sub sample ratio.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.RunParallel">
            <summary>
            Gets or sets a value indicating whether run parallel.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.
            May be null. In that case, defaults are used as fallback.
            Needs to be of type <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> if it is not null.</param>
            <returns>The built <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetTreeCount(System.Int32)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.TreeCount"/>.
            </summary>
            <param name="treeCount">
            The tree count.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetFeaturesPerSplitRatio(System.Double)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.FeaturesPerSplitRatio"/>.
            </summary>
            <param name="featurePerSplitRatio">
            The ratio of features to use during the training of a tree.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetMaximumTreeDepth(System.Int32)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MaximumTreeDepth"/>.
            </summary>
            <param name="depth">
            The depth.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetMinimumInformationGain(System.Double)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumInformationGain"/>.
            </summary>
            <param name="gain">
            The gain.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetMinimumSplitSize(System.Int32)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumSplitSize"/>.
            </summary>
            <param name="split">
            The split size.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetRunParallel(System.Boolean)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.RunParallel"/>.
            </summary>
            <param name="parallel">
            The parallel.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.SetSubSampleRatio(System.Double)">
            <summary>
            Sets the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.SubSampleRatio"/>.
            </summary>
            <param name="subSampleRatio">
            The sub sample ratio.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.ValidateParameters">
            <summary>
            Validates the current parameter settings.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser">
            <summary>
            The regression forest argument parser.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.Identifier">
            <summary>
            Gets the identifier for the parser class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.TreeCountName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.TreeCount"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.MinimumSplitSizeName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumSplitSize"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.MaximumTreeDepthName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MaximumTreeDepth"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.FeaturesPerSplitRatioName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.FeaturesPerSplitRatio"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.MinimumInformationGainName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.MinimumInformationGain"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.SubSampleRatioName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.SubSampleRatio"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.RunParallelName">
            <summary>
            Gets the parameter name for the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.RunParallel"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.PrintHelp(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.CreateOptionSet">
            <summary>
            Create the option set.
            </summary>
            <returns>
            The <see cref="T:NDesk.Options.OptionSet"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree">
            <summary>
            A wrapper that exposes the <see cref="T:SharpLearning.DecisionTrees.Nodes.BinaryTree"/>'s <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree.Root"/> node.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree.#ctor(System.Collections.Generic.List{SharpLearning.DecisionTrees.Nodes.Node},System.Collections.Generic.List{System.Double[]},System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree"/> class.
            </summary>
            <param name="nodes">
            The nodes.
            </param>
            <param name="probabilities">
            Not used for regression trees.
            Argument is required for generic instanciation of <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree"/> within SharpLearning code.
            </param>
            <param name="targetLabels">
            The target labels.
            </param>
            <param name="variableImportance">
            The variable importance.
            Not used for regression tree.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree.Root">
            <summary>
            Gets the root node.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown, if tree contains no nodes.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.ITopPerformerFocusImpurityCalculator">
            <summary>
            An impurity calculator that tries to reach a high resolution on "high performing" areas of the parameter space.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.ITopPerformerFocusImpurityCalculator.UpdateIntervalAndTargets(SharpLearning.Containers.Views.Interval1D,System.Double[])">
            <summary>
            Updates the interval and targets.
            Triggers a re-computation of the top performers.
            </summary>
            <param name="newInterval">The new interval.</param>
            <param name="targets">The targets.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper">
            <summary>
            The random forest helper.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper.IsLeafNode(SharpLearning.DecisionTrees.Nodes.Node)">
            <summary>
            Checks if the <paramref name="node"/> is a leaf in its tree.
            </summary>
            <param name="node">
            The node.
            </param>
            <returns>
            <c>True</c>, iff the node is a leaf.
            I.e. its <see cref="F:SharpLearning.DecisionTrees.Nodes.Node.FeatureIndex"/> &lt; 0.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper.WriteAllTrainingData(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper,System.String)">
            <summary>
            Writes all training data.
            </summary>
            <param name="data">
            The data.
            </param>
            <param name="pathAndFile">
            The path and file.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper.WriteAggregatedTrainingData(SharpLearning.Containers.Matrices.F64Matrix,System.Double[],System.String)">
            <summary>
            Exports the training data that was used to train the current tree.
            </summary>
            <param name="observations">
            The genome.
            </param>
            <param name="ranks">
            The target performance.
            </param>
            <param name="path">
            The path and file name. Add '{0}' in path, if you want an auto-incremented counter in the file name.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper.GetRowAsCsv(SharpLearning.Containers.Matrices.F64Matrix,System.Int32,System.String)">
            <summary>
            Get a row as csv.
            </summary>
            <param name="matrix">
            The matrix.
            </param>
            <param name="row">
            The row.
            </param>
            <param name="sep">
            The seperator.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestHelper.ExportHistogramDataForAllSamplesOfSingleLeaf(System.Double[][],System.Int32,System.Int32)">
            <summary>
            Export histogram data for all samples of single leaf.
            </summary>
            <param name="predictedRanksForTargetSample">
            The predicted ranks for target sample.
            </param>
            <param name="currentGeneration">
            The current generation.
            </param>
            <param name="parentNumber">
            The parent id.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1">
            <summary>
            The standard random forest learner.
            </summary>
            <typeparam name="TSamplingStrategy">
            The strategy used for aggregating training data.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1.#ctor(Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1"/> class.
            </summary>
            <param name="config">
            The parsed <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.
            </param>
            <param name="featuresPerSplit">
            The number of features that are used for the training of a tree.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1.SamplingStrategy">
            <summary>
            Gets or sets the strategy that is used to aggregate and filter the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>, and to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.IEnsembleSamplingStrategy`1.PostProcessModel(Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor{`0})"/> the predictor model.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1.Learn(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            OPTANO Algorithm Tuner specific method to start the training of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1"/>.
            </summary>
            <param name="data">
            All historical tournament data.
            </param>
            <returns>
            A trained and post-processed <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1.CallCreateTree(SharpLearning.Containers.Matrices.F64Matrix,System.Double[],System.Int32[])">
            <summary>
            Method that makes the generically typed call to <see cref="T:SharpLearning.RandomForest.Learners.GenericRandomizedForestBase`2"/>, using the <see cref="T:SharpLearning.DecisionTrees.SplitSearchers.LinearSplitSearcher`1"/> and <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator"/>.
            </summary>
            <param name="observations">
            The training data.
            </param>
            <param name="targets">
            The algorithm performance measures.
            </param>
            <param name="indices">
            The subset of <paramref name="observations"/> to use.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1">
            <summary>
            The genome prediction forest model.
            </summary>
            <typeparam name="TWeakPredictor">
            Type of the weak predictor used by this ensemble.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1"/> class.
            </summary>
            <param name="models">
            The weak predictor models.
            </param>
            <param name="rawVariableImportance">
            The raw variable importance.
            Not used for this model.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.InternalModels">
            <summary>
            Gets or sets the internal models.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.Optano#Algorithm#Tuner#MachineLearning#Prediction#IEnsemblePredictor{TWeakPredictor}#InternalModels">
            <summary>
            Gets the internal models.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.RawVariableImportance">
            <summary>
            Gets or sets the raw variable importance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.Predict(System.Double[])">
            <summary>
            Predict the score for a single genome.
            </summary>
            <param name="genome">
            The genome.
            </param>
            <returns>
            The <see cref="T:System.Double"/> score.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.PredictIndividualTreeValues(System.Double[])">
            <summary>
            Predict score with individual trees.
            </summary>
            <param name="genome">
            The genome.
            </param>
            <returns>
            The <see cref="T:double[]"/> with the score that was predicted by each individual <typeparamref name="TWeakPredictor"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.Predict(SharpLearning.Containers.Matrices.F64Matrix)">
            <summary>
            Predict a batch of genomes.
            </summary>
            <param name="genomes">
            The genomes.
            Row-wise.
            </param>
            <returns>
            The <see cref="T:double[]"/> score for each genome.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.Predict(SharpLearning.Containers.Matrices.F64Matrix,System.Int32[])">
            <summary>
            Batch-prediction for subset of the given genomes.
            </summary>
            <param name="genomes">
            The genomes.
            </param>
            <param name="indices">
            The row indices of genomes to predict for.
            </param>
            <returns>
            The <see cref="T:double[]"/> prediction for each given index.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.GetRawVariableImportance">
            <summary>
            Get raw variable importance.
            </summary>
            <returns>
            The <see cref="T:double[]"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1.GetVariableImportance(System.Collections.Generic.Dictionary{System.String,System.Int32})">
            <summary>
            Get variable importance.
            </summary>
            <param name="featureNameToIndex">
            The feature name to index.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.Dictionary`2"/> that contains the importance for each given feature name.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1">
            <summary>
            Specific random forest that tries to predict the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/>s performance, using a sprecific <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> as its configuration.
            The forest utilizes the custom split criterion and impurity measure, as discussed in the following paper: https://wiwi.uni-paderborn.de/fileadmin/dep3ls7/Downloads/Publikationen/PDFs/IJCAI-15_1.pdf.
            </summary>
            <typeparam name="TSamplingStrategy">
            The strategy to use for aggregating observed training data.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1.#ctor(Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> class.
            </summary>
            <param name="config">
            The parsed <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/>.
            </param>
            <param name="featuresPerSplit">
            The number of features that are used for the training of a tree.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1.SamplingStrategy">
            <summary>
            Gets or sets the strategy that is used to aggregate and filter the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>, and to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.IEnsembleSamplingStrategy`1.PostProcessModel(Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor{`0})"/> the predictor model.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1.Learn(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            OPTANO Algorithm Tuner specific method to start the training of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/>.
            </summary>
            <param name="data">
            All historical tournament data.
            </param>
            <returns>
            A trained and post-processed <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1.CallCreateTree(SharpLearning.Containers.Matrices.F64Matrix,System.Double[],System.Int32[])">
            <summary>
            Method that makes the generically typed call to <see cref="T:SharpLearning.RandomForest.Learners.GenericRandomizedForestBase`2"/>, using the <see cref="T:SharpLearning.DecisionTrees.SplitSearchers.LinearSplitSearcher`1"/> and <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator"/>.
            </summary>
            <param name="observations">
            The training data.
            </param>
            <param name="targets">
            The algorithm performance measures.
            </param>
            <param name="indices">
            The subset of <paramref name="observations"/> to use.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator">
            <summary>
            An impurity calculator that computes split scores according to https://wiwi.uni-paderborn.de/fileadmin/dep3ls7/Downloads/Publikationen/PDFs/IJCAI-15_1.pdf.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator"/> class.
            </summary>
            <param name="topThresholdPercentage">
            The percentage of genomes considered to be top performers.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TargetNames">
            <summary>
            Gets a field which is not used for regression impurities.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.WeightedLeft">
            <summary>
            Gets or sets the weight on of all elements with index &lt;= <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.CurrentPosition"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.WeightedRight">
            <summary>
            Gets or sets the weight on of all elements with index &gt; <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.CurrentPosition"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TopThresholdPercentage">
            <summary>
            Gets the percentage of genomes considered to be top performers.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.IsTopPerformer">
            <summary>
            Gets or sets an indicator if the current sample is considered to be a top performer.
            <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.IsTopPerformer"/>[i] is true, if genome i is considered to be a top performer (within the current interval).
            <c>NOTE:</c> <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.IsTopPerformer"/>.Length == <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.Length. I.e. make sure to access this array with indices from 0 to Interval.Length - 1.
            <c>DO NOT USE</c> "var i = this.Interval.FromInclusive" <c>!!!</c>
            Can be used to sepearate the elements in the current node into Top and Under-performers.
            Elements are presumed to be ordered by the current feature, so that a split can be defined by a single split index.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TopThresholdValue">
            <summary>
            Gets or sets all target performances &lt;= <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TopThresholdValue"/> are considered to be <c>Top Performance</c>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.CurrentPosition">
            <summary>
            Gets or sets the split position to compute KPIs for.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval">
            <summary>
            Gets or sets the current interval to work on.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.AlphaTotalInterval">
            <summary>
            Gets or sets the alpha value of the total interval.
            Updated in <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Init(System.Double[],System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D)"/>. Stores the impurity of this node, given that <c>no</c> further splits are performed.
            Larger values = <c>BETTER</c> score (i.e. <c>lower</c> Impurity!).
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.AlphaLeft">
            <summary>
            Gets or sets the score for the left side of the current split
            Larger values = <c>BETTER</c> score (i.e. <c>lower</c> Impurity!).
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.AlphaRight">
            <summary>
            Gets or sets the score for the right side of the current split
            Larger values = <c>BETTER</c> score (i.e. <c>lower</c> Impurity!).
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Targets">
            <summary>
            Gets or sets the target performance, sorted together with index + feature-values.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Weights">
            <summary>
            Gets or sets the weights for each sample.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TotalTopCount">
            <summary>
            Gets or sets the total number of top performers in the current <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.LeftTopCount">
            <summary>
            Gets or sets the count of "top performers" in the left side of the current split.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.RightTopCount">
            <summary>
            Gets or sets the count of "top performers" in the right side of the current split.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.TotalWeight">
            <summary>
            Gets or sets the total sum of all <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Weights"/> in the current <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.WeightedSumTotalInterval">
            <summary>
            Gets or sets the weighted sum of target performances in the current <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.ChildImpurities">
            <summary>
            Child impurities are not supported.
            </summary>
            <returns>
            The <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.ChildImpurities"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.ImpurityImprovement(System.Double)">
            <summary>
            The actual score improvement.
            </summary>
            <param name="parentImpurity">
            Impurity before computing the current split.
            </param>
            <returns>
            The <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Init(System.Double[],System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D)">
            <summary>
            Refreshes the internal data structures and pre-computed values, according to the given remainder-interval.
            </summary>
            <param name="uniqueTargets">
            Ignored for regression.
            </param>
            <param name="targets">
            Target values, ordered by respective feature-values for the current feature that is evaluated. Ordering needs to be performed in <see cref="T:SharpLearning.DecisionTrees.SplitSearchers.ISplitSearcher`1"/> before different splits can be tested.
            </param>
            <param name="weights">
            The weight for each sample.
            </param>
            <param name="interval">
            The interval to work on.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.LeafValue">
            <summary>
            Gets the "label" for a leaf. For regression, this is the weighted average of all <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Targets"/> in the node.
            Only defined when no no valid split was found so that a node will become a leaf.
            </summary>
            <returns>
            The <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.NodeImpurity">
            <summary>
            <c>IMPORTANT</c> Instead of computing the <c>Impurity</c>, this <see cref="T:SharpLearning.DecisionTrees.ImpurityCalculators.IImpurityCalculator"/> returns the score according to the implemented top-performance split method.
            </summary>
            <returns>
            The impurity of this node, given that <c>no</c> further splits are performed.
            Note that <c>threhold performance</c> only depends on the current elements in <c>this</c> node, and not on that of the parent's threshold!.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Reset">
            <summary>
            Resets the internal data fields.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.SetTopPerformers(System.Boolean[],System.Double)">
            <summary>
            Sets the indicator for the T and U sets, and the current top threshold performance.
            It is assumed that <paramref name="featureSortedTopPerformers"/> is sorted in the same way as
            ITreeBuilder.workFeature.
            </summary>
            <param name="featureSortedTopPerformers">
            The top performer indicator, sorted by current feature.
            </param>
            <param name="topThresholdValue">
            Threshold below which a sample is considered to be a top performer.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.UpdateIndex(System.Int32)">
            <summary>
            Sets the current index to <paramref name="newPosition"/>
            <c>AND</c> triggers the computation of KPIs.
            </summary>
            <param name="newPosition">
            The new split position. Needs to be within <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.UpdateInterval(SharpLearning.Containers.Views.Interval1D)">
            <summary>
            Sets the new <paramref name="newInterval"/>.
            Refreshes the internal data structures, by makig a dummy call to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Init(System.Double[],System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D)"/>.
            </summary>
            <param name="newInterval">
            The new interval.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.UpdateIntervalAndTargets(SharpLearning.Containers.Views.Interval1D,System.Double[])">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.LeafProbabilities">
            <summary>
            Not defined for regression.
            </summary>
            <returns>An empty array.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.ComputeAlpha(System.Int32,System.Int32,System.Int32)">
            <summary>
            Computes the alpha value for the given subset of elements.
            </summary>
            <param name="intervalStartInclusive">
            First index of the subset interval.
            </param>
            <param name="intervalEndInclusive">
            Last index of the subset interval.
            </param>
            <param name="topNodesInInterval">
            Number of top performing nodes in the interval.
            </param>
            <returns>
            The <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.ComputeTotalTopCount">
            <summary>
            Compute total count of top performers in current <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Interval"/>.
            </summary>
            <returns>
            The <see cref="T:System.Int32"/> count.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.UpdateIsTopPerformer">
            <summary>
            Update is top performer indicator.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Targets"/> mustn't be null.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted">
            <summary>
            The converted parent genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.#ctor(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted"/> class.
            </summary>
            <param name="competitiveParent">
            The competitive parent.
            </param>
            <param name="nonCompetitiveParent">
            The non competitive parent.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.CompetitiveParent">
            <summary>
            Gets the competitive parent.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.NonCompetitiveParent">
            <summary>
            Gets the non competitive parent.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.LengthOfDoubleRepresentation">
            <summary>
            Gets the length of double representation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.GetParentToFollow(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation)">
            <summary>
            Gets the parent to follow.
            </summary>
            <param name="computeFixationFor">
            The fixation to check.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted.GetOtherParent(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation)">
            <summary>
            Gets the parent that should not be followed.
            </summary>
            <param name="computeFixationFor">
            The current fixation.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation">
            <summary>
                Helper class that handles the traversal of a tree in the search of reachable target leafs.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation.ComputeReachableTargetLeavesForTree(Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}})">
            <summary>
            Computes the reached target leaves for the current tree.
            </summary>
            <param name="tree">
            The tree.
            </param>
            <param name="parentGenomes">
            The parent genomes.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
                (
                <see cref="M:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3.ComputeIndexSetsForCategoricalFeaturesInDoubleRepresentation(System.Collections.Generic.IReadOnlyList{System.Int32})"/>
                ).
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> that conatins all leaf nodes that an offspring of the
                <paramref name="parentGenomes"/> can fall into.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation.AddTreeNodeAndFixationsIfParentCanContinue(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.ParentGenomesConverted,Optano.Algorithm.Tuner.MachineLearning.RandomForest.GenomePredictionTree,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.HashSet{System.Int32}},System.Collections.Generic.List{Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations})">
            <summary>
            Checks if the given <paramref name="parentToCheck"/> can follow the current tree path.
            </summary>
            <param name="parents">
            The converted parent genomes.
            </param>
            <param name="tree">
            The tree.
            </param>
            <param name="currentNodeAndFixations">
            The current node and feature fixations.
            </param>
            <param name="parentToCheck">
            The parent to check.
            </param>
            <param name="indexSetsForCategoricalFeaturesInDoubleRepresentation">
            The index sets for categorical features in double representation.
            </param>
            <param name="queue">
            The queue of open nodes to traverse.
                If the <paramref name="parentToCheck"/> can continue (i.e. the current node's feature is not fixed to the 'other'
                parent),
                the child node that is visited by <paramref name="parentToCheck"/> will be added (and fixed to the
                <paramref name="parentToCheck"/>).
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation.CheckIfGenomeCanContinueAlone(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation)">
            <summary>
            Checks if parent can continue alone.
                I.e. the current node's split feature index is not fixed to the 'other' parent.
            </summary>
            <param name="currentNodeAndFixations">
            The current node and fixations.
            </param>
            <param name="parentToCheck">
            The parent to check.
            </param>
            <returns>
            <c>True</c>, iff the current node's split feature index is not fixed to the 'other' parent.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation.CheckIfParentGoesLeft(Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.GenomeDoubleRepresentation,SharpLearning.DecisionTrees.Nodes.Node)">
            <summary>
            Checks if the <paramref name="parentGenome"/> is follows the left or right child node.
            </summary>
            <param name="parentGenome">
            The parent genome.
            </param>
            <param name="currentNode">
            The current node.
            </param>
            <returns>
            <c>True</c>, iff the parent's split feature value is less or equal to the split value stored in the current node.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation.IsFixedToDifferentGenome(System.Int32,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation,System.Collections.Generic.Dictionary{System.Int32,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation})">
            <summary>
            Checks if the given <paramref name="featureIndex"/> is fixed to the 'other' genome.
            </summary>
            <param name="featureIndex">
            The feature index.
            </param>
            <param name="currentGenomeType">
            The current genome type.
            </param>
            <param name="featureFixations">
            The feature fixations.
            </param>
            <returns>
            <c>True</c>, iff <paramref name="featureFixations"/> contains a fixation to the 'other' parent (for the current
                <paramref name="featureIndex"/>).
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation">
            <summary>
            The target leaf genome fixation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation.FixedToCompetitiveParent">
            <summary>
            Leaf is fixed to competitive parent.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation.FixedToNonCompetitiveParent">
            <summary>
            Leaf is fixed to non competitive parent.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations">
            <summary>
            Wrapper that stores the current <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation"/>s (by feature index) within the current <see cref="T:SharpLearning.DecisionTrees.Nodes.Node"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.#ctor(SharpLearning.DecisionTrees.Nodes.Node,System.Collections.Generic.Dictionary{System.Int32,Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafGenomeFixation})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations"/> class.
            </summary>
            <param name="currentNode">
            The current node.
            </param>
            <param name="fixedIndicesInDoubleRepresentation">
            The fixations (from earlier splits) by index in the double representation. 
            Dictionary will be copied. Parameter can be null.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.#ctor(Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations"/> class.
            Simple copy constructor.
            </summary>
            <param name="source">
            The source to copy from.
            Must not be null.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.CurrentNode">
            <summary>
            Gets the current node.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.FixedIndicesInDoubleRepresentation">
            <summary>
            Gets the fixations (from earlier splits) by index in the double representation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.CreateCopy">
            <summary>
            Creates a copy of the current <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations"/>.
            The <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations.FixedIndicesInDoubleRepresentation"/> will be re-created (i.e. deeply copied).
            </summary>
            <returns>
            The copied <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TreeNodeAndFixations"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.AggregatedTrainingDataWrapper">
            <summary>
            The class wraps the relevant training data that is passed to the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGenomeLearner`2"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.AggregatedTrainingDataWrapper.RelevantConvertedGenomes">
            <summary>
            Gets or sets the genomes that should be used to train the predictor model.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.AggregatedTrainingDataWrapper.RelevantTargets">
            <summary>
            Gets or sets genome performance that should be learned by the predictor model.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.IEnsembleSamplingStrategy`1">
            <summary>
            Extension of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy"/> that enables postprocessing of newly trained ensemble models.
            E.g. some of the trees in a random forest can be modified/swapped out after the forest is trained.
            </summary>
            <typeparam name="TGenomePredictor">Type of the weak predictor to use within the ensemble.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.IEnsembleSamplingStrategy`1.PostProcessModel(Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor{`0})">
            <summary>
            This method can be used to alter some of the properties of the <paramref name="newModel"/>.
            For example, the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy"/> replaces some of the <paramref name="newModel"/>'s internal weak predictors with weak predictors from previous generations in order to preserve some of the data history.
            </summary>
            <param name="newModel">A freshly trained <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/>.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy">
            <summary>
            Strategy pattern to filter and aggregate the training data before it is passed to the machine learning model.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy.Initialize(System.Object[])">
            <summary>
            Optional: <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> passes the <c>params args</c> from its ctor to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy.Initialize(System.Object[])"/> when the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy"/> is initialized.
            </summary>
            <param name="args">Arguments to configure the strategy.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy.AggregateTargets(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            This method should filter the relevant training data and aggregate it so that the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.AggregatedTrainingDataWrapper"/> contains only the relevant genomes and their respective performance.
            </summary>
            <param name="data">All observed tournament results combined with the generation and tournament.</param>
            <returns>All relevant training data.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.AverageRankStrategy">
            <summary>
            For each (unique) <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>, all observed performances are aggregated using the average over all ranks.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.AverageRankStrategy.Initialize(System.Object[])">
            <summary>
            No params are used.
            </summary>
            <param name="args">
            Arguments are ignored.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.AverageRankStrategy.AggregateTargets(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            Computes the average <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.TournamentRank"/> over all <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank"/> for each <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> in <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.Genomes"/>.
            </summary>
            <param name="data">
            The training data.
            </param>
            <returns>
            The aggregated training data.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.AverageRankStrategy.PostProcessModel(Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor{Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor})">
            <summary>
            Model is not altered.
            </summary>
            <param name="newModel">
            Parameter is ignored.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy">
            <summary>
            The <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.AggregateTargets(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)"/> method only selects the newest tournament results as training data.
            In order to also make use of historical data, <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy"/> selects <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.KeepOldTreeRatio"/> * nTrees many <see cref="P:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1.InternalModels"/> (at random) and replaces them with (randomly chosen) models from the previous generation's <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.KeepOldTreeRatio">
            <summary>
            Gets the proportion of trees to replace with old trees.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.OldEnsemble">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/> from the previous iteration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.Initialize(System.Object[])">
            <summary>
            Optional: <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> passes the <c>params args</c> from its ctor to <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.Initialize(System.Object[])"/> when the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.ISamplingStrategy"/> is initialized.
            </summary>
            <param name="args">args[0]: Expected to contain the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.KeepOldTreeRatio"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.AggregateTargets(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)">
            <summary>
            This method only selects the newest tournament results as training data.
            </summary>
            <param name="data">All historical training data.</param>
            <returns>Only the training data where <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.CurrentGeneration"/> == <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank.GenerationId"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.PostProcessModel(Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor{Optano.Algorithm.Tuner.MachineLearning.Prediction.IGenomePredictor})">
            <summary>
            In order to also make use of historical data, <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy"/> selects <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.KeepOldTreeRatio"/> * nTrees many <see cref="P:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1.InternalModels"/> (at random) and replaces them with (randomly chosen) models from the previous generation's <see cref="T:Optano.Algorithm.Tuner.MachineLearning.Prediction.IEnsemblePredictor`1"/>.
            In the first iteration, this method only sets <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.OldEnsemble"/> to <paramref name="newModel"/>.
            </summary>
            <param name="newModel">The freshly trained predictor model, using data from <see cref="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy.AggregateTargets(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)"/>.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper">
            <summary>
            Wrapper class that holds all observed training data and related auxillary information.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.#ctor(System.Collections.Generic.Dictionary{Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.List{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank}},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/> class.
            </summary>
            <param name="tournamentResults">
            The tournament results.
            </param>
            <param name="currentGeneration">
            The current generation.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.ConvertedGenomes">
            <summary>
            Gets or sets the <see cref="T:double[]"/>-representation of <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.Genomes"/>. 
            Will be computed by <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/>, called by <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.TournamentResults">
            <summary>
            Gets a dictionary that holds all observed <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank"/>s for each <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.Genomes">
            <summary>
            Gets all known genomes.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.CurrentGeneration">
            <summary>
            Gets the generation during which the data snapshot was taken.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.Count">
            <summary>
            Gets the number of <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s.
            <c>NOT</c> the <see cref="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.TotalObservationCount"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper.TotalObservationCount">
            <summary>
            Gets the total number of observations stored in <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1">
            <summary>
            A domain that consists of a set of possible values.
            </summary>
            <typeparam name="T">The values' type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.#ctor(System.Collections.Generic.List{`0},System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1" /> class.
            </summary>
            <param name="possibleValues">All values the domain consists of.</param>
            <param name="defaultValue">The optional default value.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.PossibleValues">
            <summary>
            Gets all possible values of the domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.DomainSize">
            <summary>
            Gets the domain size.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.IsCategoricalDomain">
            <summary>
            Gets a value indicating whether this domain is an instance of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.ConvertBack(System.Double)">
            <summary>
            Convert a double-encoding back to the underlying domain value.
            </summary>
            <param name="value">
            The value to convert back.
            </param>
            <returns>
            Nothing. Method not supported for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Use a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/> to convert categorical domain values.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this domain.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.ConvertToDouble(Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Converts the given <paramref name="member"/> of this <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/> into a dobule value.
            </summary>
            <param name="member">A member of the current domain.</param>
            <returns>A double that represents the <paramref name="member"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.GenerateRandomValue">
            <summary>
            Generates a value from the domain uniformly at random.
            </summary>
            <returns>The generated value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.Mutate(`0,System.Double)">
            <summary>
            Generates a value from the domain that results from mutating the given value.
            In the case of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1" />, this is just a random value from the domain.
            </summary>
            <param name="value">
            The value to base the mutated value on.
            Ignored in the case of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1" />.
            </param>
            <param name="variancePercentage">
            Mutation might utilize Gaussian distributions.
            This parameter defines the respective variance as a certain percentage of the variable's domain.
            Ignored in the case of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1" />.
            </param>
            <returns>The generated value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.Contains(`0)">
            <summary>
            Checks if the given value is part of the domain.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Whether or not the value is part of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.ConvertMemberToDouble(`0)">
            <summary>
            Returns a double-respresentation for the given <paramref name="member"/>.
            </summary>
            <param name="member">
            The member to convert to double.
            </param>
            <returns>
            Method is not supported by <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Use a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/> to convert categorical domain values.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain">
            <summary>
            A domain for <see cref="T:System.Double" /> values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.#ctor(System.Double,System.Double,System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{System.Double}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain" /> class.
            </summary>
            <param name="minimum">The smallest value. Default is <see cref="F:System.Double.MinValue" />.</param>
            <param name="maximum">The largest value. Default is <see cref="F:System.Double.MaxValue" />.</param>
            <param name="defaultValue">The optional default value, if specified by user.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.DomainSize">
            <summary>
            Gets the domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.ConvertBack(System.Double)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to convert back.</param>
            <returns>
            The representing <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.SampleFromGaussianDistribution(System.Double,System.Double)">
            <summary>
            Samples a value contained in the domain using a Gaussian distribution.
            You should usually call <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)" /> instead.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="variancePercentage">
            The distribution's variance is set to this percentage of the variable's
            domain. Needs to be positive and at most 1.
            </param>
            <returns>The sampled value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.GenerateRandomValue">
            <summary>
            Generates a value from the domain uniformly at random.
            </summary>
            <returns>The generated value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.ConvertMemberToDouble(System.Double)">
            <summary>
            Convert member to double.
            Does nothing for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain"/>.
            </summary>
            <param name="alleleValue">
            The allele value.
            </param>
            <returns>
            The <see cref="T:System.Double"/> representation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain">
            <summary>
            A domain for <see cref="T:System.Int32" />s with uniform distribution in log space.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain._logSpace">
            <summary>
            The domain in log space.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.#ctor(System.Int32,System.Int32,System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain" /> class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <param name="defaultValue">The optional default value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if minimum value is not positive.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.DomainSize">
            <summary>
            Gets the domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.ConvertBack(System.Double)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to convert back.</param>
            <returns>The representing <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this domain.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.SampleFromGaussianDistribution(System.Int32,System.Double)">
            <summary>
            Samples a value contained in the domain using a Gaussian distribution.
            You should usually call <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)" /> instead.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="variancePercentage">
            The distribution's variance is set to this percentage of the variable's
            domain. Needs to be positive and at most 1.
            </param>
            <returns>The sampled value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.GenerateRandomValue">
            <summary>
            Generates a value from the domain. Selection is uniformly at random in the log space.
            </summary>
            <returns>A value from the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DiscreteLogDomain.ConvertMemberToDouble(System.Int32)">
            <summary>
            Convert member to double.
            </summary>
            <param name="alleleValue">
            The allele value.
            </param>
            <returns>
            The <see cref="T:System.Double"/> representation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1">
            <summary>
            Represents a parameter's domain containing values of a certain type.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.#ctor(System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1" /> class.
            </summary>
            <param name="defaultValue">The optional default value.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.DomainSize">
            <summary>
            Gets the Domain Size.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.IsCategoricalDomain">
            <summary>
            Gets a value indicating whether this domain is an instance of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.DefaultValue">
            <summary>
            Gets the optional default value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)">
            <summary>
            Generates a gene value from the domain that results from mutating the given gene value.
            </summary>
            <param name="allele">The value to base the mutated value on. Has to be part of the domain.</param>
            <param name="variancePercentage">
            Mutation might utilize Gaussian distributions.
            This parameter defines the respective variance as a certain percentage of the variable's domain.
            Needs to be positive and at most 1.
            </param>
            <returns>The generated gene value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the given value is not part of the domain
            or the given percentage is not a positive value at most 1.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Checks if the given gene value is part of the domain.
            </summary>
            <param name="allele">Gene value to check.</param>
            <returns>Whether or not the given gene value is part of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.GetDefaultValue">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.GenerateRandomGeneValue">
            <summary>
            Generates a gene value from the domain uniformly at random.
            </summary>
            <returns>The generated gene value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.ConvertToDouble(Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Converts the given <paramref name="member"/> of this <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/> into a double value.
            </summary>
            <param name="member">A member of the current domain.</param>
            <returns>A double that represents the <paramref name="member"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.ConvertBack(System.Double)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to convert back.</param>
            <returns>
            The representing <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.Optano#Algorithm#Tuner#Parameters#Domains#IDomain#GenerateRandomGeneValue">
            <summary>
            Generates a gene value from the domain uniformly at random.
            </summary>
            <returns>The generated gene value as an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele" />.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.ConvertMemberToDouble(`0)">
            <summary>
            Convert member to double.
            Only valid for non-<see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.IsCategoricalDomain"/>s.
            </summary>
            <param name="alleleValue">
            The allele value.
            </param>
            <returns>
            The <see cref="T:System.Double"/> representation.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.GenerateRandomValue">
            <summary>
            Generates a value from the domain uniformly at random.
            </summary>
            <returns>The generated value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.Mutate(`0,System.Double)">
            <summary>
            Generates a value from the domain that results from mutating the given value.
            </summary>
            <param name="value">The value to base the mutated value on.</param>
            <param name="variancePercentage">
            Mutation might utilize Gaussian distributions.
            This parameter defines the respective variance as a certain percentage of the variable's domain.
            Needs to be positive and at most 1.
            </param>
            <returns>The generated value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the given percentage
            is not a positive value at most 1.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.Contains(`0)">
            <summary>
            Checks if the given value is part of the domain.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Whether or not the value is part of the domain.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain">
            <summary>
            Represents a parameter's domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize">
            <summary>
            Gets the magnitude of this domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.IsCategoricalDomain">
            <summary>
            Gets a value indicating whether this domain is an instance of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.GetDefaultValue">
            <summary>
            Gets the default value, if one was specified by the user.
            Otherwise, a <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.GenerateRandomGeneValue"/> is returned.
            </summary>
            <returns>The default value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.GenerateRandomGeneValue">
            <summary>
            Generates a gene value taken from the domain uniformly at random.
            </summary>
            <returns>The generated gene value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)">
            <summary>
            Generates a gene value from the domain that results from mutating the given gene value.
            </summary>
            <param name="allele">
            The value to base the mutated value on. Has to be part of the domain.
            </param>
            <param name="variancePercentage">
            Mutation might utilize Gaussian distributions.
            This parameter defines the respective variance as a certain percentage of the variable's domain.
            Needs to be positive and at most 1.
            </param>
            <returns>
            The generated gene value.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the given value is not part of the domain
            or the given percentage is not a positive value at most 1.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Checks if the given gene value is part of the domain.
            </summary>
            <param name="allele">
            Gene value to check.
            </param>
            <returns>
            Whether or not the given gene value is part of the domain.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ConvertToDouble(Optano.Algorithm.Tuner.Genomes.Values.IAllele)">
            <summary>
            Converts the given <paramref name="member"/> of this <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/> into a dobule value.
            </summary>
            <param name="member">
            A member of the current domain.
            </param>
            <returns>
            A double that represents the <paramref name="member"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ConvertBack(System.Double)">
            <summary>
            Restores the <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> from a previous double-conversion.
            Do not call this method for <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.IsCategoricalDomain"/>.
            </summary>
            <param name="value">
            The value to convert back.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain">
            <summary>
            A domain for integer values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.#ctor(System.Int32,System.Int32,System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{System.Int32}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain"/> class.
            </summary>
            <param name="minimum">
            The minimum value. Default is <see cref="F:System.Int32.MinValue"/>.
            </param>
            <param name="maximum">
            The maximum value. Default is <see cref="F:System.Int32.MaxValue"/>.
            </param>
            <param name="defaultValue">The optional default value.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.DomainSize">
            <summary>
            Gets the domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.ConvertBack(System.Double)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to convert back.</param>
            <returns>The representing <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this domain.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.SampleFromGaussianDistribution(System.Int32,System.Double)">
            <summary>
            Samples a value contained in the domain using a Gaussian distribution.
            You should usually call <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)"/> instead.
            </summary>
            <param name="mean">
            The distribution's mean.
            </param>
            <param name="variancePercentage">
            The distribution's variance is set to this percentage of the variable's
            domain. Needs to be positive and at most 1.
            </param>
            <returns>
            The sampled value.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.GenerateRandomValue">
            <summary>
            Generates a value from the domain uniformly at random.
            </summary>
            <returns>The generated value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.ConvertMemberToDouble(System.Int32)">
            <summary>
            Convert member to double.
            </summary>
            <param name="alleleValue">
            The allele value.
            </param>
            <returns>
            The <see cref="T:System.Double"/> representation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain">
            <summary>
            A domain for <see cref="T:System.Double" />s with uniform distribution in log space.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain._logSpace">
            <summary>
            The domain in log space.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.#ctor(System.Double,System.Double,System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{System.Double}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain" /> class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <param name="defaultValue">The optional default value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if minimum value is not positive.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.DomainSize">
            <summary>
            Gets the domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.ConvertBack(System.Double)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to convert back.</param>
            <returns>The representing <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this domain.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.SampleFromGaussianDistribution(System.Double,System.Double)">
            <summary>
            Samples a value contained in the domain using a Gaussian distribution.
            You should usually call <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)" /> instead.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="variancePercentage">
            The distribution's variance is set to this percentage of the variable's
            domain. Needs to be positive and at most 1.
            </param>
            <returns>The sampled value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.GenerateRandomValue">
            <summary>
            Generates a value from the domain. Selection is uniformly at random in the log space.
            </summary>
            <returns>A value from the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.ConvertMemberToDouble(System.Double)">
            <summary>
            Convert member to double.
            </summary>
            <param name="alleleValue">
            The allele value.
            </param>
            <returns>
            The <see cref="T:System.Double"/> representation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1">
            <summary>
            A domain that contains a minimum and maximum value.
            </summary>
            <typeparam name="T">The type contained in the domain. Must be comparable.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1" /> class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value. Must be at least as large as minimum.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.#ctor(`0,`0,System.Nullable{Optano.Algorithm.Tuner.Genomes.Values.Allele{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1" /> class.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value. Must be at least as large as minimum.</param>
            <param name="defaultValue">The optional default value.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Minimum">
            <summary>
            Gets the domain's minimum value.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Maximum">
            <summary>
            Gets the domain's maximum value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this domain.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.SampleFromGaussianDistribution(`0,System.Double)">
            <summary>
            Samples a value contained in the domain using a Gaussian distribution.
            You should usually call <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)" /> instead.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="variancePercentage">
            The distribution's variance is set to this percentage of the variable's
            domain. Needs to be positive and at most 1.
            </param>
            <returns>The sampled value.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)">
            <summary>
            Generates a value from the domain that results from mutating the given value.
            </summary>
            <param name="value">The value to base the mutated value on.</param>
            <param name="variancePercentage">
            Mutation might utilize Gaussian distributions.
            This parameter defines the respective variance as a certain percentage of the variable's domain.
            Needs to be positive and at most 1.
            </param>
            <returns>The generated value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if the given percentage
            is not a positive value at most 1.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Contains(`0)">
            <summary>
            Checks if the given value is part of the domain.
            </summary>
            <param name="value">The value to check.</param>
            <returns>Whether or not the value is part of the domain.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding">
            <summary>
            Encoder that produces a binary encoding for categorical domains.
            See: http://www.kdnuggets.com/2015/12/beyond-one-hot-exploration-categorical-variables.html.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding.ConvertToBits(System.Int32,System.Int32)">
            <summary>
            Converts the <see paramref="indexToConvert"/> into a bit representation.
            </summary>
            <param name="indexToConvert">The index to convert.</param>
            <param name="colCount">The target column count. Make sure that it can fit the representation <see paramref="indexToConvert"/> in base 2.</param>
            <returns>The columns of the binary representation of <paramref name="indexToConvert"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding.NumberOfGeneratedColumnsForCategoricalDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Gets the number of columns that would be generated, if dom was encoded with this encoding.
            </summary>
            <param name="dom">The domain to test.</param>
            <returns>The number of required columns.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding.EncodeNextValue(System.Int32,System.Int32)">
            <summary>
            Encodes the next member of the categorical domain.
            </summary>
            <param name="index">n-th member that should be encoded.</param>
            <param name="columnCount">Total length for double representation of domain members.</param>
            <returns>
            The <see cref="T:double[]"/> encoding for <see paramref="index"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase">
            <summary>
            Abstract base class for various encodings of categorical domains.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase.Encode``1(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Method to convert a given categorical domain into a sepecific <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/>.
            See: http://www.kdnuggets.com/2015/12/beyond-one-hot-exploration-categorical-variables.html.
            </summary>
            <typeparam name="T">
            Domain value type.
            </typeparam>
            <param name="parameterName">
            Name of the parameter that uses <paramref name="domain"/>.
            </param>
            <param name="domain">
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1"/>.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase.NumberOfGeneratedColumns(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Gets the number of columns that will be created by a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> using this <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/>.
            </summary>
            <param name="domain">
            The domain to check for.
            </param>
            <returns>
            The number of columns required to represent the domain.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase.EncodeNextValue(System.Int32,System.Int32)">
            <summary>
            Encodes the next member of the categorical domain.
            </summary>
            <param name="index">n-th member that should be encoded.</param>
            <param name="columnCount">Total length for double representation of domain members.</param>
            <returns>
            The <see cref="T:double[]"/> encoding for <see paramref="index"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase.NumberOfGeneratedColumnsForCategoricalDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Should return the number of columns required to represent the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> <paramref name="domain"/>.
            </summary>
            <param name="domain">Should only be called with categorical domains.</param>
            <returns>The number of columns required to represent this domain as double[].</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase.ValidateDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Checks whether the given <paramref name="dom"/> is a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
            <param name="dom">
            The domain to check.
            </param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="dom"/> needs to be a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> of finite size.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOneHotEncoding">
            <summary>
            Represent a categorical domain by one column for every possible domain value. Exactly one column will be set to 1, which means that the respective categorical value is active.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOneHotEncoding.EncodeNextValue(System.Int32,System.Int32)">
            <summary>
            Encodes the next member of the categorical domain.
            </summary>
            <param name="index">n-th member that should be encoded.</param>
            <param name="columnCount">Total length for double representation of domain members.</param>
            <returns>
            The <see cref="T:double[]"/> encoding for <see paramref="index"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOneHotEncoding.NumberOfGeneratedColumnsForCategoricalDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Gets the number of columns that would be generated, if dom was encoded with this encoding.
            </summary>
            <param name="dom">The domain to test.</param>
            <returns>The number of required columns.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding">
            <summary>
            Represent a categorical domain as a single column. Assign an arbirtrary order to the elements of that category, which will be used as ordinal identifier.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding.EncodeNextValue(System.Int32,System.Int32)">
            <summary>
            Encodes the next member of the categorical domain.
            </summary>
            <param name="index">n-th member that should be encoded.</param>
            <param name="columnCount">Total length for double representation of domain members.</param>
            <returns>
            The <see cref="T:double[]"/> encoding for <see paramref="index"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding.NumberOfGeneratedColumnsForCategoricalDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)">
            <summary>
            Gets the number of columns that would be generated, if dom was encoded with this encoding.
            </summary>
            <param name="dom">The domain to test. Needs to satisfy <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.IsCategoricalDomain"/>. </param>
            <returns>The number of required columns.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1">
            <summary>
            Representation of a converted categorical parameter.
            Note: A converted parameter may require more than one column. See <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.ColumnCount"/>.
            </summary>
            <typeparam name="T">
            The type of the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> that of the converted categorical parameter.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1._keyToAlleleLock">
            <summary>
            The <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.KeyToAllele"/> lock.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.#ctor(System.String,System.Collections.Generic.Dictionary{`0,System.Double[]},Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1"/> class.
            </summary>
            <param name="parameterName">
            The name of the represented parameter. 
            </param>
            <param name="categoryValues">
            The column representation for each <typeparamref name="T"/> in <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.PossibleValues"/>.
            </param>
            <param name="underlyingDomain">
            The underlying <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.UnderlyingCategoricalDomain">
            <summary>
            Gets or sets the underlying categorical domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.ColumnCount">
            <summary>
            Gets or sets the number of columns that is required in order to represent 
            a converted member of the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.UnderlyingCategoricalDomain"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.ParameterName">
            <summary>
            Gets or sets the categorical parameter name.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.Optano#Algorithm#Tuner#Parameters#ParameterConverters#IConvertedCategory#UnderlyingCategoricalDomain">
            <summary>
            Gets the underlying categorical domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.InverseCategoryValues">
            <summary>
            Gets or sets the inverse category values.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.KeyToAllele">
            <summary>
            Gets or sets a cache to store restored alleles for a given key.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.CategoryValues">
            <summary>
            Gets the internal data structure that contains the column representation for each possible category value (by rank as index).
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.GetColumnRepresentation(`0)">
            <summary>
            Get the column representation for a categorical value.
            </summary>
            <param name="categoricalValue">
            The value to convert into a <see cref="T:double[]"/> representation.
            </param>
            <returns>
            A shallow copy of the precomputed column representation.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.GetColumnRepresentation(System.Object)">
            <summary>
            Casts the <paramref name="categoricalValue"/> to <typeparamref name="T"/> and returns <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.GetColumnRepresentation(`0)"/>.
            </summary>
            <param name="categoricalValue">
            The value to represent as <see cref="V:double[]"/>.
            </param>
            <returns>
            The <see cref="T:double[]"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.GetDomainValueAsAllele(System.Double[])">
            <summary>
            Returns the domain value that is represented by <paramref name="key"/> as <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </summary>
            <param name="key">
            The column representation of the requested domain value.
            </param>
            <returns>
            The domain value as <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.Optano#Algorithm#Tuner#Parameters#ParameterConverters#IConvertedCategory#Initialize">
            <summary>
            Initializes the inverse value dictionary.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1.GetDomainValue(System.Double[])">
            <summary>
            Retrieves the domain value for a given column representation of that value.
            </summary>
            <param name="key">
            The column-representation.
            </param>
            <returns>
            The <typeparamref name="T"/> represented by <paramref name="key"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1">
            <summary>
            Class that handles the encoding from <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to <see cref="T:double[]"/> for a given <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <typeparam name="TCategoricalEncoding">
            The categorical encoder.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1._transformationAndEncodingLock">
            <summary>
            The transformation and encoding lock.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1._featureLengths">
            <summary>
            The feature lengths.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> class.
            </summary>
            <param name="tree">
            The parameter tree.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.FeatureCount">
            <summary>
            Gets the feature count required to represent the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.Tree"/> as <see cref="T:double[]"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.Tree">
            <summary>
            Gets the parameter tree this <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> works with.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.ParameterTreeNodeOrder">
            <summary>
            Gets a comparer that defines the order in which the nodes are sorted. Double array representation will use this ordering.
            Can be null.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.CategoricalEncoding">
            <summary>
            Gets or sets the <typeparamref name="TCategoricalEncoding"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.EncodedCategories">
            <summary>
            Gets or sets the cached categorical encodings.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.OrderedTreeNodes">
            <summary>
            Gets the parameter nodes in the tree ordered by Identifier.
            Ordering is the same as in the <see cref="T:SharpLearning.Containers.Matrices.F64Matrix"/>. 
            Keep in mind that there might be index shifts to the right, 
            since categorical nodes might be represented by more than 1 column.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.KnownTransformations">
            <summary>
            Gets the known transformations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.ConvertGenomeToArray(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Converts the given <paramref name="genome"/> into the respective <see cref="T:double[]"/> representation.
            Categorical features are converted using the specified <typeparamref name="TCategoricalEncoding"/>.
            </summary>
            <param name="genome">
            The genome to convert.
            </param>
            <returns>
            The genome values. Orderd by IParameterNode.Identifier.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.ConvertBack(System.Double[])">
            <summary>
            Converts the given <see cref="T:double[]"/> encoding back into a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
            <param name="encodedGenome">
            <see cref="T:double[]"/> representation of a genome.
            </param>
            <returns>
            Representation of the <paramref name="encodedGenome"/> as <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> object.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.GetFeatureLengths">
            <summary>
            Get the feature lengths.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>, containing the number of columns required to represent a feature.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.RestoreInternalDictionariesWithCorrectComparers">
            <summary>
            Restore the internal dictionaries with correct comparers.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.EncodeNodeCategory``1(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Tries to retrieve the cached encoding for the given <paramref name="category"/>, or encodes + stores it in <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.EncodedCategories"/>.
            </summary>
            <typeparam name="T">
            The type of <paramref name="category"/> domain.
            </typeparam>
            <param name="identifier">
            The identifier.
            </param>
            <param name="category">
            The encoding.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.ConvertedCategory`1"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1.ConvertGenome(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Converts the given <paramref name="genome"/> into the respective double-representation.
            Categorical features are converted using the specified <typeparamref name="TCategoricalEncoding"/>.
            Caches the transformation for each genome, so that they do not need to be re-computed.
            <c>Make sure to call result.Clone(), when exposing the return value to public.</c>.
            </summary>
            <param name="genome">
            The genome to convert.
            </param>
            <returns>
            The genome values. Ordered by IParameterNode.Identifier. 
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> can be converted, using different <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalEncodingBase"/>.
            The resulting conversion is represented by this interface.
            Note: A converted parameter may require more than one column when converted into input for <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering"/>.
            See <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.ColumnCount"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.UnderlyingCategoricalDomain">
            <summary>
            Gets the underlying categorical domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.ColumnCount">
            <summary>
            Gets the number of columns that is required in order to represent a converted member of the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.UnderlyingCategoricalDomain"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.ParameterName">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.GetColumnRepresentation(System.Object)">
            <summary>
            Computes the column representation for the given <paramref name="categoricalValue"/>.
            </summary>
            <param name="categoricalValue">
            The categorical value.
            </param>
            <returns>
            The <see cref="T:double[]"/> representation.
            The representation will always be of length <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.ColumnCount"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.GetDomainValueAsAllele(System.Double[])">
            <summary>
            Convert a double representation back into a member of the respective <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> and
            wraps it into a <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </summary>
            <param name="key">
            The key to convert back.
            Needs to be of length <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.ColumnCount"/>.
            </param>
            <returns>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> that was encoded as <paramref name="key"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory.Initialize">
            <summary>
            Initialize the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IConvertedCategory"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation">
            <summary>
            Interface that provides both means for converting a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> into a double representation, and a method for
            re-building internal dictionaries that use custom comparers. This is required because the comparers are not
            restored when de-serialized.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.FeatureCount">
            <summary>
            Gets the feature count required to represent the used <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> as <see cref="T:double[]"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.ConvertGenomeToArray(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Convert the genome to double-representation.
            </summary>
            <param name="genome">
            The genome to convert.
            </param>
            <returns>
            The <see cref="T:double[]"/> representation.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.ConvertBack(System.Double[])">
            <summary>
            Converts a <see cref="T:double[]"/> representation back into a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
            <param name="encodedGenome">
            The encoded genome.
            </param>
            <returns>
            The restored <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.GetFeatureLengths">
            <summary>
            Gets the length of each feature.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>, containing the length of each feature.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.RestoreInternalDictionariesWithCorrectComparers">
            <summary>
            Restore the internal dictionaries with correct comparers.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> which supports handling of continuous values in
            discrete domains.
            </summary>
            <remarks>Implementation exploits that
            <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding.NumberOfGeneratedColumnsForCategoricalDomain(Optano.Algorithm.Tuner.Parameters.Domains.IDomain)"/> equals 1.</remarks>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation"/> class.
            </summary>
            <param name="tree">The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation.RoundToValidValues(System.Double[])">
            <summary>
            Rounds values not mapping to continuous <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1"/>s to the nearest integer.
            </summary>
            <remarks>
            Exploits the usage of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding"/>: Each domain is expressed by a single value.
            </remarks>
            <param name="encodedGenome">
            <see cref="T:double[]"/> representation of a genome.
            </param>
            <returns><paramref name="encodedGenome"/> with some indices rounded to the nearest integer.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition">
            <summary>
            A wrapper that stores information about a dummy parameter
            and how it should be replaced/filtered before the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            is passed to the target algorithm.
            If the current value of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> matches <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>,
            the combination of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.ControlledParameterIdentifier"/>/<see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.NativeOverrideValue"/> will be
            inserted into the dictionary with the ActiveParameters, <c>and</c> the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> will be removed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/> class.
            </summary>
            <param name="indicatorParameterIdentifier">
            The <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> that is checked for <paramref name="indicatorParameterValue"/>.
            </param>
            <param name="indicatorParameterValue">
            The <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/> that triggers the replacement of 
            <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> with <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.ControlledParameterIdentifier"/>.
            </param>
            <param name="controlledParameterIdentifier">
            The identifier of the parameter that is inserted if indicator is matched.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Values must not be null (or white space). 
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier">
            <summary>
            Gets the identifier of the artificial parameter that should be replaced.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue">
            <summary>
            Gets the indicator parameter value.
            If the current value of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> matches this value,
            it will be replaced with the combination of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.ControlledParameterIdentifier"/>/<see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.NativeOverrideValue"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.ControlledParameterIdentifier">
            <summary>
            Gets the identifier of the parameter that is inserted, if the current value of 
            <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> matches the specified <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.NativeOverrideValue">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> that will be inserted for the current <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/>
            if the indicator parameter's value matches <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.SetNativeOverrideValue``1(``0)">
            <summary>
            Sets the value for the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.ControlledParameterIdentifier"/>,
            that should be used when the <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> parameter
            is set to <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/> in the current genome.
            </summary>
            <param name="value">
            The value for the <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/>.
            </param>
            <typeparam name="T">
            The value type of the <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </typeparam>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTree">
            <summary>
            Specifies the parameters' names, domains and dependencies in form of an AND-OR tree:
            OR nodes contain categorical parameters. Every child consists of the parameter tree that emerges
            when the categorical parameter is set to a certain value.
            Children of AND nodes can be optimized separately.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> class.
            </summary>
            <param name="root">The tree's root.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTree.Root">
            <summary>
            Gets the parameter tree's root.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTree.ReplacedParameterFilter">
            <summary>
            Gets the filter for replacement of helper parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.ContainsParameters">
            <summary>
            Finds out whether the tree contains any nodes that represent parameters.
            </summary>
            <returns>True if the tree contains parameters, false otherwise.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.IdentifiersAreUnique">
            <summary>
            Checks if all identifiers stored in the tree are unique.
            </summary>
            <returns>Whether or not the identifiers are unique.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.GetParameters(System.Collections.Generic.Comparer{Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode})">
            <summary>
            Gets all parameter nodes in this tree.
            </summary>
            <param name="paramComparer">Optional: specific return order.</param>
            <returns>The (ordered) enumerable of all <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.GetNumericalParameters">
            <summary>
            Retrieves all numerical parameters.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all numberical parameters.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.FindActiveIdentifiers(System.Collections.Immutable.ImmutableDictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Identifies the identifiers which address active genes if the parameter values equal <paramref name="values"/>,
            i.e. OR nodes are evaluated and only correct subtrees are added.
            </summary>
            <param name="values">
            Values of parameters.
            Caller is responsible for making sure the dictionary fits the parameter tree.
            </param>
            <returns>The identifiers which address active genes.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.FilterIndicatorParameters(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Removes the indicator parameters from <paramref name="activeParameters"/>.
            If their current value matches the specified <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>,
            the defined native parameter/value will be inserted into <paramref name="activeParameters"/>.
            </summary>
            <param name="activeParameters">
            The active parameters to filter on.
            <c>Values will be reomved from the passed dictionary</c>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="activeParameters"/> must not be null.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.AddParameterReplacementDefinition``1(System.String,System.Object,System.String,``0,System.Boolean)">
            <summary>
            Defines a new replacement for an (artifical) parameter.
            Example:
            It can be used for modeling special cases, such as "x = 0" disables "heuristic x", 
            when x is a numerical parameter with a large domain.
            In that case call:
            <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.AddParameterReplacementDefinition``1(System.String,System.Object,System.String,``0,System.Boolean)"/>("xActive", false, "x", 0).
            Afterwards, <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> will never contain
            a value for "xActive", but if "xActive == false", the defined replacement (i.e. "x = 0")
            will be contained in the returned dictionary.
            Important:
            The <paramref name="indicatorParameterIdentifier"/> needs to be a member of the current <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <param name="indicatorParameterIdentifier">
            The name of the indicator (=dummy) parameter that needs to be replaced.
            This parameter will always be removed from the genomes set of active parameters.
            </param>
            <param name="indicatorParameterValue">
            If the <paramref name="indicatorParameterIdentifier"/> is set to <paramref name="indicatorParameterValue"/>
            in the current genome, the <paramref name="controlledParameterIdentifier"/>/<paramref name="nativeOverrideValue"/>
            will be inserted in the set of the <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </param>
            <param name="controlledParameterIdentifier">
            The name of the parameter that will be inserted for <paramref name="indicatorParameterIdentifier"/>
            when it has the value <paramref name="indicatorParameterValue"/>.
            </param>
            <param name="nativeOverrideValue">
            The value to insert for <paramref name="controlledParameterIdentifier"/>.
            </param>
            <param name="alwaysRemoveIndicatorParameter">
            If <c>true</c>, the <paramref name="indicatorParameterIdentifier"/> is added to <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.AddIgnoredParameter(System.String)"/>.
            </param>
            <typeparam name="T">
            The value type of the inserted <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </typeparam>
            <returns>
            The added <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.IsIndicatorParameterAndValueCombinationDefined(System.String,System.Object)">
            <summary>
            Checks if a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/> for the given
            &lt;<paramref name="indicatorParameterIdentifier"/>, <paramref name="indicatorParameterValue"/>&gt;
            is defined.
            </summary>
            <param name="indicatorParameterIdentifier">
            The indicator parameter name.
            </param>
            <param name="indicatorParameterValue">
            The indicator parameter value.
            </param>
            <returns>
            <c>True</c>, if a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/> is defined.
            <c>False</c>, else.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.AddIgnoredParameter(System.String)">
            <summary>
            Adds an ignored parameter definition.
            Ignored parameters will always be removed from the  set of 
            active parameters when <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.FilterIndicatorParameters(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})"/> is called.
            </summary>
            <param name="ignoredParameterName">
            The name of the parameter that should be ignored.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="ignoredParameterName"/> must not be null.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode">
            <summary>
            A node of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> that partitions parameters into groups that can be optimized
            independently.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode._children">
            <summary>
            The node's children. Might be empty.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode" /> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.#ctor(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode" /> class.
            </summary>
            <param name="children">The children to add to the node.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.Children">
            <summary>
            Gets the node's children.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.AddChild(Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode)">
            <summary>
            Adds a child.
            </summary>
            <param name="node">The child to add.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IOrNode">
            <summary>
            A node of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> that splits the parameters into groups
            that only become active for a certain parameter value each.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IOrNode.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)">
            <summary>
            Looks for the child that gets activated for the given value.
            </summary>
            <param name="value">The value to find the fitting child for.</param>
            <param name="child">Outputs the child if one was found, else null.</param>
            <exception cref="T:System.ArgumentException">Thrown if the given value is not a legal value for the node.</exception>
            <returns>Whether a child was found.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode">
            <summary>
            A node of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> that represents a parameter.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode.Identifier">
            <summary>
            Gets the parameter's unique identifier.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode.Domain">
            <summary>
            Gets the parameter's domain.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode">
            <summary>
            A node of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" />. May represent a parameter or an AND node.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode.Children">
            <summary>
            Gets the node's children.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1">
            <summary>
            A node of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> that represents a parameter and whose children consist of the
            subtrees that get evaluated if a specific value of the represented categorical parameter is set.
            </summary>
            <typeparam name="T">The parameter's type. Must either be a value type or of type string.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1._children">
            <summary>
            The node's children. Might be empty.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1._domain">
            <summary>
            The node's domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.#ctor(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1" /> class.
            </summary>
            <param name="identifier">The parameter's identifier. Must be unique.</param>
            <param name="domain">The parameter's domain. It must either contain value types or strings.</param>
            <exception cref="T:System.ArgumentException">Thrown if the type contained in the domain is a reference type
            which is not a string.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.Children">
            <summary>
            Gets the node's children.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.Domain">
            <summary>
            Gets the parameter's domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)">
            <summary>
            Looks for the child that gets activated for the given value.
            </summary>
            <param name="value">The value to find the fitting child for.</param>
            <param name="child">Outputs the child if one was found, else null.</param>
            <exception cref="T:System.ArgumentException">Thrown if the given value is not a legal value for the node.</exception>
            <returns>Whether the child was found.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.AddChild(`0,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode)">
            <summary>
            Adds child for the specified value.
            </summary>
            <param name="value">Value from the domain.</param>
            <param name="child">The child to add.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if the value is not from the domain or
            another child was already added for the value.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.ThrowIfIllegal(`0)">
            <summary>
            Checks if the given value is legal.
            </summary>
            <param name="value">The value to check.</param>
            <exception cref="T:System.ArgumentException">Thrown if the given value is illegal.</exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1">
            <summary>
            Typed implementation of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode" />.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1" /> class.
            </summary>
            <param name="identifier">The parameter's identifier. Must be unique.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.Identifier">
            <summary>
            Gets the parameter's unique identifier.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.Domain">
            <summary>
            Gets the parameter's domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.Children">
            <summary>
            Gets the node's children.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this node.
            </summary>
            <returns>The node's identifier.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1">
            <summary>
            A node of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> that represents a parameter and has at most one child.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1._domain">
            <summary>
            The node's domain.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1._child">
            <summary>
            The node's child. Might be null.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.#ctor(System.String,Optano.Algorithm.Tuner.Parameters.Domains.DomainBase{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1" /> class.
            </summary>
            <param name="identifier">The parameter's identifier. Must be unique.</param>
            <param name="domain">The parameter's domain.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.Domain">
            <summary>
            Gets the parameter's domain.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.Children">
            <summary>
            Gets the node's children: A set that is either empty or contains a single child.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.SetChild(Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode)">
            <summary>
            Sets the node's child. Overwrites it if it was already set.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter">
            <summary>
            Helper class that stores and manages the replacement of "dummy" parameters from the
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> before its values are passed to the target algorithm.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter._filterLock">
            <summary>
            Controls the access to <see cref="P:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.ActiveParameterReplacements"/> and <see cref="P:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.IgnoredParameterIdentifiers"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.ActiveParameterReplacements">
            <summary>
            Gets the active parameter wrappers.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.IgnoredParameterIdentifiers">
            <summary>
            Gets the ignored parameter identifiers.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.DefineParameterReplacement``1(System.String,System.Object,System.String,``0)">
            <summary>
            Defines a new replacement for an artifical parameter.
            </summary>
            <param name="indicatorParameterIdentifier">
            The identifier of the indicator (=dummy) parameter that needs to be replaced.
            This parameter will always be removed from the genomes set of active parameters.
            </param>
            <param name="indicatorParameterValue">
            If the <paramref name="indicatorParameterIdentifier"/> is set to <paramref name="indicatorParameterValue"/>
            in the current genome, the <paramref name="controlledParameterIdentifier"/>/<paramref name="nativeOverrideValue"/>
            will be inserted in the set of the <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </param>
            <param name="controlledParameterIdentifier">
            The identifier of the parameter that will be inserted for <paramref name="indicatorParameterIdentifier"/>
            when it has the value <paramref name="indicatorParameterValue"/>.
            </param>
            <param name="nativeOverrideValue">
            The value to insert for <paramref name="controlledParameterIdentifier"/>.
            </param>
            <typeparam name="T">
            The value type of the inserted <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </typeparam>
            <returns>
            The added <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.AddIgnoredParameterDefinition(System.String)">
            <summary>
            Adds an ignored parameter definition.
            Ignored parameters will always be removed from the  set of 
            active parameters when <see cref="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.HandleSpecialCases(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})"/> is called.
            </summary>
            <param name="ignoredParameterName">
            The identifier of the parameter that should be ignored.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="ignoredParameterName"/> must not be null.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.HandleSpecialCases(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Handles the removal (and replacement) of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/>s
            with the specified native parameters.
            Also removes all <see cref="P:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.IgnoredParameterIdentifiers"/> from <paramref name="parameters"/>.
            </summary>
            <param name="parameters">
            The genome's <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.IsIndicatorParameterAndValueCombinationDefined(System.String,System.Object)">
            <summary>
            Checks if a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/> for the given
            &lt;<paramref name="indicatorParameterIdentifier"/>, <paramref name="indicatorParameterValue"/>&gt;
            is defined.
            </summary>
            <param name="indicatorParameterIdentifier">
            The indicator parameter name.
            </param>
            <param name="indicatorParameterValue">
            The indicator parameter value.
            </param>
            <returns>
            <c>True</c>, if a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition"/> is defined.
            <c>False</c>, else.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.InsertNativeParameterForIndicator(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele},Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition)">
            <summary>
            Inserts the specified replacement value for the indicator parameter,
            if <see cref="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.CheckIfOverrideIsRequired(Optano.Algorithm.Tuner.Genomes.Values.IAllele,Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition)"/>.
            Note: 
            <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> is removed from
            <paramref name="parameters"/>, if it is contained <c>and</c> the current value 
            matches <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>.
            </summary>
            <param name="parameters">
            The genome's <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetActiveGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>.
            </param>
            <param name="parameterReplacementDefinition">
            The parameter wrapper to handle.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Parameters.ReplacedParameterFilter.CheckIfOverrideIsRequired(Optano.Algorithm.Tuner.Genomes.Values.IAllele,Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition)">
            <summary>
            Check if override of <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> is required.
            </summary>
            <param name="indicatorInCurrentTree">
            The indicator's value in the current tree.
            </param>
            <param name="replacementDefinitionWithOverride">
            The wrapper with override.
            </param>
            <returns>
            True, if <paramref name="indicatorInCurrentTree"/>.GetValue().Equals(<see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterValue"/>).
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical">
             <summary>
             Represents a categorical domain as defined by an XML document.
             </summary>
             <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.ValueType">
            <summary>
            Gets the <see cref="T:System.Type"/> of values in the domain, i. e. <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.Categories">
            <summary>
            Gets all possible categories.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.ConvertToParameterTreeDomain">
            <summary>
            Converts this domain to an <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if the object was read from XML in such a way that it
            does not represent a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/> object.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.ConvertToParameterTreeDomain``1">
            <summary>
            Converts this domain to a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
            <typeparam name="T">The type of values in the domain.</typeparam>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.doubles">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.strings">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.ints">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.categorical.booleans">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous">
             <summary>
             Represents a continuous parameter domain as defined by an XML document.
             </summary>
             <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous.ValueType">
            <summary>
            Gets the <see cref="T:System.Type"/> of values in the domain, i. e. <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous.ConvertToParameterTreeDomain">
            <summary>
            Converts this domain to a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain"/> or <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain"/> or <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous.log">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous.start">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.continuous.end">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete">
             <summary>
             Represents an integer domain as defined by an XML document.
             </summary>
             <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete.ValueType">
            <summary>
            Gets the <see cref="T:System.Type"/> of values in the domain, i. e. <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete.ConvertToParameterTreeDomain">
            <summary>
            Converts this domain to an <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain"/> or <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete.log">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete.start">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.discrete.end">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Domain">
            <summary>
            Represents a parameter domain as defined by an XML document.
            </summary>
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Domain.ValueType">
            <summary>
            Gets the <see cref="T:System.Type"/> of values in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Domain.ConvertToParameterTreeDomain">
            <summary>
            Converts this domain to a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if the object was read from XML in such a way that it
            does not represent a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/> object.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Domain.defaultIndexOrValue">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Domain.defaultIndexOrValueSpecified">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.and">
             <summary>
             An AND node in the parameter tree as defined by an XML document.
             </summary>
             <remarks>
             This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.and.ConvertToParameterTreeNode">
            <summary>
            Converts this node to an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.and.node">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Node">
            <summary>
            Represents a node in the parameter tree as defined by an XML document.
            </summary>
            <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
            the class mirroring the XML element into the behavior implementing class located at Data/Parameters.</remarks>
            <remarks/>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Node.ConvertToParameterTreeNode">
            <summary>
            Converts this node to an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/>.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if the object was read from XML in such a way that it
            does not represent a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/> object.</exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.or">
             <summary>
             Represents an OR node in the parameter tree as defined by an XML document.
             </summary>
             <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.or.ConvertToParameterTreeNode``1">
            <summary>
            Converts this node to an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>.
            </summary>
            <typeparam name="T">The type of values the represented parameter can take.</typeparam>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if the object was read from XML in such a way that it
            does not represent a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/> object.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.or.choice">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.ParameterNode">
            <summary>
            Represents a parameter node (i.e. not an AND node) in the parameter tree as defined by an XML document.
            </summary>
            <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
            the class mirroring the XML element into the behavior implementing class located at Data/Parameters.</remarks>
            <remarks/>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.ParameterNode.ConvertToParameterTreeNode">
            <summary>
            Converts this node to an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/>.
            </summary>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/>.</returns>
            <exception cref="T:System.Xml.XmlException">Thrown if the object was read from XML in such a way that it
            does not represent a valid <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/> object.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.ParameterNode.ConvertToParameterTreeNode``1">
            <summary>
            Converts this node to an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/> containing a domain of a certain type.
            </summary>
            <typeparam name="T">The type contained in the domain.</typeparam>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.ParameterNode.domain">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.ParameterNode.id">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.value">
             <summary>
             Represents a simple node in the parameter tree that's neither an AND nor an OR node.
             This class mirrors an XML element.
             </summary>
             <remarks>This is the part of the class that was *not* automatically generated and is responsible for converting
             the class mirroring the XML element into the behavior implementing class located at Data/Parameters.
            
             The class definition is marked as generated because it cannot be changed and StyleCop warnings
             (e.g. capitalization) can't be fixed here.
             </remarks>
            <remarks/>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.value.ConvertToParameterTreeNode``1">
            <summary>
            Converts this node to a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1"/>.
            </summary>
            <typeparam name="T">The type of values the represented parameter can take.</typeparam>
            <returns>The converted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1"/>.</returns>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.value.node">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Choice">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Choice.Item">
            <remarks/>
        </member>
        <member name="P:Optano.Algorithm.Tuner.ParameterTreeReader.Elements.Choice.child">
            <remarks/>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter">
            <summary>
            Converts XML files respecting the schema defined by parameterTree.xsd into <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" />s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)">
            <summary>
            Tries to convert the XML document located at the provided path into a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" />.
            </summary>
            <param name="pathToXmlDocument">Path to XML document to convert into <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" />.</param>
            <returns>The extracted <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree" /> or null if the extraction was unsuccessful.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.TryLoadXmlDocument(System.String,System.Xml.Linq.XDocument@)">
            <summary>
            Tries to load the XML document via <see cref="M:System.Xml.Linq.XDocument.Load(System.String)"/>.
            </summary>
            <param name="pathToXmlDocument">Path to the XML document.</param>
            <param name="xmlFile">Will either be set to the loaded XML document or null if an
            <see cref="T:System.Xml.XmlException"/> is encountered.</param>
            <returns>Whether the document was loaded successfully.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ValidateXmlDocumentAgainstSchema(System.Xml.Linq.XDocument)">
            <summary>
            Validates the provided document against the XSD defined for parameter trees. Writes errors to console.
            </summary>
            <param name="xmlDocument">The document to validate.</param>
            <returns>True iff the file matches the schema.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PathUtils">
            <summary>
            Utility methods for dealing with paths.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromExecutableFolderRelative(System.String)">
            <summary>
            Translates a path relative to the folder where the .exe is located into an absolute one.
            </summary>
            <param name="relativePath">Path relative to executable folder.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromCurrentDirectory(System.String)">
            <summary>
            Translates a path relative to the folder where program was started into an absolute one.
            </summary>
            <param name="relativePath">Path relative to folder the program was started from.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromDirectory(System.String,System.String)">
            <summary>
            Translates a relative path into an absolute one.
            </summary>
            <param name="directory">Directory the path is relative to.</param>
            <param name="relativePath">The relative path.</param>
            <returns>The absolute path.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3">
            <summary>
            Parts of a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> implementation useful for strategies
            employing a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1"/>.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by this strategy instance.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3._currentGeneration">
            <summary>
            The current generation index.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Akka.Actor.IActorRef,Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase{`0,`1,`2})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/> class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
            <param name="searchPointSorter">
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which evaluates
            <typeparamref name="TSearchPoint"/>s via a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
            configuration
            or
            parameterTree
            or
            targetRunResultStorage
            or
            searchPointSorter.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Configuration">
            <summary>
            Gets a number of options used for this instance.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ParameterTree">
            <summary>
            Gets the structure representing the tunable parameters.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.SearchPointSorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which evaluates
            <typeparamref name="TSearchPoint"/>s via a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.TargetRunResultStorage">
            <summary>
            Gets an <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ContinuousOptimizer">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1"/> instance currently in use.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ContinuousOptimizerStatusFilePath">
            <summary>
            Gets the status file path to use for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.OriginalIncumbent">
            <summary>
            Gets the incumbent from before the start of the continuous optimization phase.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.MostRecentSorting">
            <summary>
            Gets the most recent sorting returned by <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ContinuousOptimizer"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.CurrentEvaluationInstances">
            <summary>
            Gets the set of <typeparamref name="TInstance"/>s used for evaluation in this generation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Updates the current population.
            </summary>
            <param name="currentGeneration">The current generation.</param>
            <param name="instancesForEvaluation">Instances to use for evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FindIncumbentGenome">
            <summary>
            Finds an incumbent genome.
            </summary>
            <returns>A most promising genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`1,`2}})">
            <summary>
            Chooses the next population update strategy after this one finished.
            </summary>
            <param name="populationUpdateStrategies">Possible strategies.</param>
            <returns>Index of the chosen strategy.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.HasTerminated">
            <summary>
            Returns a value indicating whether the current instantiation of the strategy has terminated.
            </summary>
            <returns>Whether the current instantiation of the strategy has terminated.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.LogPopulationToConsole">
            <summary>
            Logs information about the current population to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ExportFeatureStandardDeviations">
            <summary>
            Exports the standard deviations of the numerical features of the current population's competitive part via
            <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ComputeAndExportNumericalFeatureCoefficientOfVariation(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.DumpStatus">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.InitializeContinuousOptimizer(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2})">
            <summary>
            Initializes the <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.ContinuousOptimizer"/> for a new strategy phase.
            </summary>
            <param name="basePopulation">Population to start with.</param>
            <param name="currentIncumbent">Most recent incumbent genome. Might be <c>null</c>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.HasFixedInstances">
            <summary>
            Determines whether the continuous optimization method should use a fixed set of evaluation instances for
            the complete phase.
            </summary>
            <returns>
            Whether the continuous optimization method should use a fixed set of evaluation instances for
            the complete phase.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Defines the competitive genomes to use when defining a new population at the end of a phase.
            </summary>
            <param name="originalCompetitives">
            The competitive genomes from the population the new one is based on.
            </param>
            <returns>The competitive genomes to add to the new population.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.DeserializeStrategyStatusFile">
            <summary>
            Deserializes the current strategy status file.
            </summary>
            <returns>The deserialized strategy status.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2">
            <summary>
            An object wrapping the current status of a
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
            <typeparam name="TSearchPoint">
            Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> handled by the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/>.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.#ctor(Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.List{`1},System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2"/> class.
            </summary>
            <param name="originalIncumbent">
            The incumbent from before the start of the continuous optimization phase. Might be <c>null</c>.
            </param>
            <param name="currentEvaluationInstances">
            The most recent set of <typeparamref name="TInstance"/>s used for evaluation.
            </param>
            <param name="mostRecentSorting">
            The most recent sorting returned by
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1.NextGeneration"/>.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.OriginalIncumbent">
            <summary>
            Gets the incumbent from before the start of the CMA-ES phase. Might be <c>null</c>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.MostRecentSorting">
            <summary>
            Gets the most recent sorting.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.CurrentEvaluationInstances">
            <summary>
            Gets the most recent set of <typeparamref name="TInstance"/>s used for evaluation.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser">
            <summary>
            Argument parser for <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser.Identifier">
            <summary>
            Gets the identifier for the parser class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser.PrintHelp(System.Boolean)">
            <summary>
            Prints a description on how to configure differential evolution.
            </summary>
            <param name="printHelpParameter">Indicates whether the help parameter should be printed.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser.CreateOptionSet">
            <summary>
            Creates the <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <returns>
            The <see cref="T:NDesk.Options.OptionSet"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3">
            <summary>
            A base class for strategies updating the <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects using
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instances.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by this strategy instance.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3._numericalStabilityTerminationCriteria">
            <summary>
            A set of termination criteria based on numerical stability.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Akka.Actor.IActorRef,Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.StrategyConfiguration">
            <summary>
            Gets detailed options about this strategy.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.StrategyStatusFilePath">
            <summary>
            Gets the path to use when working with
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.ContinuousOptimizerStatusFilePath">
            <summary>
            Gets the path to use when working with <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.CreateTerminationCriteria">
            <summary>
            Creates the termination criteria for the upcoming CMA-ES phase.
            </summary>
            <returns>The created set of termination criteria.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.HasFixedInstances">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3.DeserializeStrategyStatusFile">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration">
            <summary>
            Wraps relevant parameters for strategies inheriting from
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.#ctor(System.Boolean,System.Int32,System.Int32,System.Double,System.Boolean,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> class.
            </summary>
            <param name="focusOnIncumbent">
            Whether the CMA-ES should focus on improving the continuous parameters of the incumbent.
            If not, it modifies all parameters of the complete competitive population.
            </param>
            <param name="maximumNumberGenerations">
            The maximum number of generations per CMA-ES phase.
            </param>
            <param name="minimumDomainSize">
            The minimum size an integer domain needs to have to be handled as continuous.
            </param>
            <param name="replacementRate">
            The percentage of competitive genomes which get replaced by the best search points found by
            the continuous optimization method at the end of a phase, expressed by a value in [0, 1].
            </param>
            <param name="fixInstances">
            Whether the set of instances to evaluate on should stay the same during a
            CMA-ES phase.
            </param>
            <param name="initialStepSize">
            The step size with which to start CMA-ES phases.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.InitialStepSize">
            <summary>
            Gets the step size with which to start CMA-ES phases.
            A larger step size results in exploration, a smaller one in exploitation.
            <para>
            Internally, all values are mapped into a [0,10] hypercube.
            </para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>s are compatible for one to be
            used in a continued tuning based on a tuning using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> builder.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder.DefaultInitialStepSize">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.InitialStepSize"/>.
            </summary>
            <remarks>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/> looks into [0, 10] and we aim to have the optimum in the initial cube
            distributionMean +- 3 * step size.
            If improving a given solution (e.g. when hybridizing), a smaller step size, e.g. 0.5, is useful.
            </remarks>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder._initialStepSize">
            <summary>
            The value to set for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.InitialStepSize"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder.Instance">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder.SetReplacementRate(System.Double)">
            <summary>
            Sets the percentage of competitive genomes which get replaced by the best search points found by
            the continuous optimization method at the end of a phase, expressed by a value in [0, 1].
            <para>A replacement rate of 0 indicates that only the incumbent itself should be replaced.</para>
            <para>Default is 0.</para>
            </summary>
            <param name="rate">A rate in [0, 1].</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder.SetInitialStepSize(System.Double)">
            <summary>
            Sets the step size with which to start CMA-ES phases.
            A larger step size results in exploration, a smaller one in exploitation.
            <para>
            Internally, all values are mapped into a [0,10] hypercube.
            </para>
            <para>Default is 1.</para>
            </summary>
            <param name="size">The positive step size to start with.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2">
            <summary>
            An object wrapping the current status of strategies inheriting from
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
            <typeparam name="TSearchPoint">
            Type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> handled by the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> instance.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2.#ctor(Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.List{`1},System.Collections.Generic.List{`0})">
            <summary>
            Initializes a new instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2"/> class.
            </summary>
            <param name="originalIncumbent">
            The incumbent from before the start of the CMA-ES phase. Might be <c>null</c>.
            </param>
            <param name="currentEvaluationInstances">
            The most recent set of <typeparamref name="TInstance"/>s used for evaluation.
            </param>
            <param name="mostRecentSorting">
            The most recent sorting returned by <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.NextGeneration"/>.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.CovarianceMatrixAdaptationInformationFlowSwitch">
            <summary>
            Responsible for selecting the correct
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> depending on the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.CovarianceMatrixAdaptationInformationFlowSwitch.CreateCovarianceMatrixAdaptationStrategy``2(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,Akka.Actor.IActorRef,Akka.Actor.IActorRef)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> depending
            on the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <param name="configuration">Options to use.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.</param>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
            <returns>
            The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> instance.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.CovarianceMatrixAdaptationInformationFlowSwitch.DetermineCovarianceMatrixAdaptationStrategyType``2(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Determines the type of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> to create according to
            the provided <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <param name="configuration">The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to check.</param>
            <returns>
            The type of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/> to
            create.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.CovarianceMatrixAdaptationInformationFlowSwitch.StrategyShouldFocusOnIncumbent(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Determines whether the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/>
            is supposed to focus on the incumbent according to the provided <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </summary>
            <param name="configuration">The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to check.</param>
            <returns>
            Whether the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/>
            is supposed to focus on the incumbent.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> representing a complete <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/>.
            Value transformation is handled by <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation"/>.
            Invalid <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> results are replaced with a repaired version.
            
            <para>As parameters are bounded, this is a wrapper around <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>.</para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.ParameterNodeComparer">
            <summary>
            Fixes the order of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode"/>s the same way
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> does.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.#ctor(MathNet.Numerics.LinearAlgebra.Vector{System.Double},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> class.
            </summary>
            <param name="values">
            The real-valued point to base this on.
            This is the internal representation, not the one in the parameter space.
            <para>Use <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> if starting from search space.</para>
            </param>
            <param name="parameterTree">Specifies the parameters.</param>
            <param name="genomeBuilder">Responsible for checking validity and repairing.</param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> class.
            </summary>
            <param name="genome">The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> this search point is based on.</param>
            <param name="values">
            The real-valued point associated with the <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/>.
            This is the internal representation, not the one in the parameter space.
            </param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome">
            <summary>
            Gets the genome described by this <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.IsRepaired">
            <summary>
            Gets a value indicating whether the direct <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> mapping was invalid and needed
            repairing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> from <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/>.
            </summary>
            <param name="genome">The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> on.</param>
            <param name="parameterTree">Specification of all parameters.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.ObtainParameterBounds(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Double[]@,System.Double[]@)">
            <summary>
            Obtains parameter bounds from parameter specification.
            </summary>
            <remarks>Categorical parameters with n values are mapped to a domain containing 0 ... n.</remarks>
            <seealso cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding"/>
            <param name="parameterTree">Specifies the parameters.</param>
            <param name="lowerBounds">Will contain the lower bounds by dimension.</param>
            <param name="upperBounds">Will contain the upper bounds by dimension.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2">
            <summary>
            Uses <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instances to update <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects:
            Continuizes all parameters and works on the complete competitive population.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2._searchPointFactory">
            <summary>
            Specifies how to create a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2._cmaEsRunner">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instance currently in use.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,Akka.Actor.IActorRef,Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.</param>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.ContinuousOptimizer">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.DumpStatus">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.InitializeContinuousOptimizer(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2.ComputeMeanOfCompetitivePopulationPart(Optano.Algorithm.Tuner.Genomes.Population)">
            <summary>
            Computes the mean of the competitive population part.
            </summary>
            <param name="population">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.</param>
            <returns>The mean of the competitive population part.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if population does not contain competitive individuals.
            </exception>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2">
            <summary>
            Uses <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instances to update <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects: In each phase,
            optimizes the continuous parameter set to the discrete parameter set of the current incumbent.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2._searchPointFactory">
            <summary>
            Specifies how to create a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2._cmaEsRunner">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instance currently in use.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,Akka.Actor.IActorRef,Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/>
            class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.</param>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.ContinuousOptimizer">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1"/> instance currently in use.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.DumpStatus">
            <summary>
            Writes all internal data to file.
            <para>Calling <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus"/>, terminating the program and then calling
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> needs to be equivalent to one long run.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.InitializeContinuousOptimizer(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.CreateCmaEsRunner(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Creates a new <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> which evaluates points based on the provided
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
            <param name="evaluationBase">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> determining discrete parameters.</param>
            <returns>The newly created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> based on a <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> s.t. categorical and small integer domains are
            fixed in search.
            Invalid <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> results are replaced with a repaired version.
            
            <para>As parameters are bounded, this is a wrapper around <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,MathNet.Numerics.LinearAlgebra.Vector{System.Double},Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> class.
            </summary>
            <param name="underlyingGenome">The underlying <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.</param>
            <param name="values">
            The real-valued point to base continuous parameters on.
            This is the internal representation, not the one in the parameter space.
            <para>Use <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)"/> if starting from search space.</para>
            </param>
            <param name="genomeSearchPointConverter">
            Responsible for converting between full-fledged <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/>s and continuous values in
            parameter space.
            </param>
            <param name="genomeBuilder">Responsible for checking validity and repairing.</param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.#ctor(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> class.
            </summary>
            <param name="genome">
            The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> this search point is based on.
            Must be valid and match <paramref name="values"/>, else use different constructor.
            </param>
            <param name="values">
            The real-valued point to base continuous parameters on.
            This is the internal representation, not the one in the parameter space.
            </param>
            <param name="lowerBounds">The lower bounds by dimension.</param>
            <param name="upperBounds">The upper bounds by dimension.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome">
            <summary>
            Gets the genome described by this <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.IsRepaired">
            <summary>
            Gets a value indicating whether the direct <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> mapping was invalid and needed
            repairing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> from <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/>.
            </summary>
            <param name="genome">The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> on.</param>
            <param name="parameterTree">Specification of all parameters.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be handled as continuous.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.ObtainParameterBounds(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>
            Obtains parameter bounds from parameter specification.
            </summary>
            <param name="parameterTree">Specifies the parameters. Should all be numerical.</param>
            <param name="minimumDomainSize">
            The minimum size an integer domain needs to have to be handled as continuous.
            </param>
            <param name="lowerBounds">Will contain the lower bounds by dimension.</param>
            <param name="upperBounds">Will contain the upper bounds by dimension.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which evaluates <see cref="T:Optano.Algorithm.Tuner.Genomes.IRepairedGenomeRepresentation"/>s
            via a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
            <typeparam name="TSearchPoint">
            The specific type of <see cref="T:Optano.Algorithm.Tuner.Genomes.IRepairedGenomeRepresentation"/> which can be evaluated.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3.#ctor(Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3"/> class.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" />.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3.Sort(System.Collections.Generic.IList{`0})">
            <summary>
            Sorts <typeparamref name="TSearchPoint"/>s by original validity as <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> and by the
            performance of the associated <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> objects.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
            <returns>Indices of sorted points, best points first.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser">
            <summary>
            Argument parser for <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser._algorithmParameterParser">
            <summary>
            The argument parser for the differential evolution algorithm.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.Identifier">
            <summary>
            Gets the identifier for the parser class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.AdditionalArguments">
            <summary>
            Gets the list of arguments that could not be parsed when calling <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.ParseArguments(System.String[])" />.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">
            Arguments to parse.
            </param>
            <exception cref="T:NDesk.Options.OptionException">
            Thrown if required parameters have not been set.
            </exception>
            <exception cref="T:System.AggregateException">
            Thrown if one or more arguments could not be interpreted.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.PrintHelp(System.Boolean)">
            <summary>
            Prints a description on how to configure differential evolution.
            </summary>
            <param name="printHelpParameter">Indicates whether the help parameter should be printed.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser.CreateOptionSet">
            <summary>
            Creates the <see cref="T:NDesk.Options.OptionSet"/>.
            </summary>
            <returns>
            The <see cref="T:NDesk.Options.OptionSet"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration">
            <summary>
            Relevant parameters for <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/>.
            </summary>
            <seealso cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase" />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.#ctor(System.Boolean,System.Int32,System.Int32,System.Double,System.Boolean,Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> class.
            </summary>
            <param name="maximumNumberGenerations">
            The maximum number of generations per differential evolution phase.
            </param>
            <param name="focusOnIncumbent">
            Whether JADE should focus on improving the incumbent.
            If not, it works on the complete population.
            </param>
            <param name="minimumDomainSize">
            The minimum size an integer domain needs to have to be handled as continuous.
            </param>
            <param name="replacementRate">
            The percentage of competitive genomes which get replaced by the best search points found by
            the continuous optimization method at the end of a phase if <paramref name="focusOnIncumbent"/> is
            <c>true</c>, expressed by a value in [0, 1].
            </param>
            <param name="fixInstances">
            Whether the set of instances to evaluate on should stay the same during a
            differential evolution phase.
            </param>
            <param name="differentialEvolutionConfiguration">
            The configuration for the differential evolution runner.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionConfiguration">
            <summary>
            Gets the configuration for the differential evolution runner.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/>s are compatible for one to be
            used in a continued tuning based on a tuning using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/>s are compatible in a technical
            sense for one to be used in a continued tuning based on a tuning using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued tuning looks like a longer single tuning.</para>
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> builder.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder._differentialEvolutionConfigurationBuilder">
            <summary>
            Builder which creates <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionConfiguration"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.Instance">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.SetReplacementRate(System.Double)">
            <summary>
            Sets the percentage of competitive genomes which get replaced by the best search points found by
            the continuous optimization method at the end of a phase, expressed by a value in [0, 0.5].
            <para>A replacement rate of 0 indicates that only the incumbent itself should be replaced.</para>
            <para>Default is 0.</para>
            </summary>
            <param name="rate">A rate in [0, 0.5].</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.SetDifferentialEvolutionConfigurationBuilder(Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder)">
            <summary>
            Sets relevant parameters for the differential evolution algorithm.
            </summary>
            <param name="builder">
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder"/>.
            </param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder" /> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration)">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> using the provided
            Builds a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> using the provided
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> as fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2">
            <summary>
            Updates <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects using <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instances.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2._strategyConfiguration">
            <summary>
            Detailed options about this strategy.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2._informationFlow">
            <summary>
            Defines the information flow between the <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> used by the main tuning process and the
            one managed by <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2._differentialEvolutionRunner"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2._searchPointFactory">
            <summary>
            Specifies how to create a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> from a <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/> and a
            parent.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2._differentialEvolutionRunner">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instance currently in use.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,Akka.Actor.IActorRef,Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.</param>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
            <param name="targetRunResultStorage">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.ContinuousOptimizer">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.IEvolutionBasedContinuousOptimizer`1"/> instance currently in use.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.ContinuousOptimizerStatusFilePath">
            <summary>
            Gets the status file path to use for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.StrategyStatusFilePath">
            <summary>
            Gets the path to use when working with <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.DumpStatus">
            <summary>
            Writes all internal data to file.
            <para>Calling <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus"/>, terminating the program and then calling
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> needs to be equivalent to one long run.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.InitializeContinuousOptimizer(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.HasFixedInstances">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.DeserializeStrategyStatusFile">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.CreateDifferentialEvolutionRunner(System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instance.
            </summary>
            <param name="meanMutationFactor">The mean mutation factor to start with.</param>
            <param name="meanCrossoverRate">The mean crossover rate to start with.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instance.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1">
            <summary>
            An object wrapping the current status of <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1.#ctor(Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.List{`0},System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1"/> class.
            </summary>
            <param name="originalIncumbent">
            The incumbent from before the start of the JADE phase. Might be <c>null</c>.
            </param>
            <param name="currentEvaluationInstances">
            The most recent set of <typeparamref name="TInstance"/>s used for evaluation.
            </param>
            <param name="mostRecentSorting">
            The most recent sorting returned by differential evolution.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow">
            <summary>
            Defines the information flow between the overall tuning process and a
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> instance which acts on the complete population,
            i.e. fixes different discrete parameters for each individual.
            </summary>
            <remarks>
            This information flow strategy has the advantage that it exchanges lots of information.
            On the negative side, evaluating the same continuous parameter set in combination with different discrete sets
            may exhibit very different performance, violating some assumptions of DE.
            Note that, if no discrete parameters are used, this disadvantage does not matter.
            </remarks>
            <seealso cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow._strategyConfiguration">
            <summary>
            Detailed options about this strategy.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow._parameterTree">
            <summary>
            The structure representing the tunable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow.#ctor(Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/> class.
            </summary>
            <param name="strategyConfiguration">
            Options used for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/>.
            </param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.IInformationFlowStrategy`1">
            <summary>
            Defines the information flow between the main tuning and a
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/> instance.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s handled by the strategy instance.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.IInformationFlowStrategy`1.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Determines the initial points to use for the continuous optimizer at the start of a phase.
            </summary>
            <param name="basePopulation">Population to start with.</param>
            <param name="currentIncumbent">Most recent incumbent genome. Might be <c>null</c>.</param>
            <returns>The initial points to use for the continuous optimizer.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.IInformationFlowStrategy`1.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{`0})">
            <summary>
            Defines the competitive genomes to use when defining a new population at the end of a phase.
            </summary>
            <param name="originalCompetitives">
            The competitive genomes from the population the new one is based on.
            </param>
            <param name="originalIncumbent">
            The original incumbent from the start of the phase. Might be <c>null</c>.
            </param>
            <param name="mostRecentSorting">
            Most recent sorting as found by the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/> instance.
            </param>
            <returns>The competitive genomes to add to the new population.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow">
            <summary>
            Defines the information flow between the overall tuning process and a
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> instance which concentrates on improving the incumbent,
            i.e. only acts on incumbent-based points.
            </summary>
            <remarks>
            Only acting on points with discrete parameters equal to those of the incumbent means that we try to find good
            continuous parameters for a fixed set of discrete ones. It has the advantage that it does not violate any
            assumptions of DE: Everything is continuous.
            On the negative side, such an information flow strategy means that we only exploit a single information point
            from prior optimization.
            </remarks>
            <seealso cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow._strategyConfiguration">
            <summary>
            Detailed options about this strategy.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow._parameterTree">
            <summary>
            The structure representing the tunable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.#ctor(Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/> class.
            </summary>
            <param name="strategyConfiguration">
            Options used for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/>.
            </param>
            <param name="parameterTree">Provides the tunable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.CreateSearchPointsFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,System.Int32)">
            <summary>
            Creates <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s with non-continuous parameters based on the values of the provided
            genome.
            Other parameters are set randomly but for one <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>, which represents the
            genome itself.
            </summary>
            <param name="genome">The genome to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s on.</param>
            <param name="number">The number of <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s to create.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.CreateValidSearchPointFromGenome(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Creates a valid <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> with non-continuous parameters based on the values of the
            provided genome.
            </summary>
            <param name="genome">The genome to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> on.</param>
            <returns>
            A valid <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>. Usually, its non-continuous parameters mirror that of
            <paramref name="genome"/>.
            </returns>
            <exception cref="T:System.TimeoutException"
            >Thrown if no valid point could be found in several iterations.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.ReplaceSomeGenomesWithBestPoints(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint},System.Double)">
            <summary>
            Creates a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the provided one which replaces
            a certain percentage of its members with the best search points returned by differential evolution.
            </summary>
            <param name="originalGenomes">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to base the new one on.</param>
            <param name="mostRecentSorting">
            Most recent sorting found by the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> instance.
            </param>
            <param name="replacementRate">The replacement rate.</param>
            <returns>The newly created <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.ReplaceIncumbentWithBestPoint(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint)">
            <summary>
            Creates a new <see cref="T:System.Collections.Generic.IEnumerable`1"/> based on the provided one which replaces
            the original incumbent with the best search point returned by differential evolution.
            <p>If there was no original genome, a random genome is replaced.</p>
            </summary>
            <param name="originalGenomes">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to base the new one on.</param>
            <param name="originalIncumbent">
            The original incumbent from the start of the phase. Might be <c>null</c>.
            </param>
            <param name="bestPoint">
            The best point found by the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> instance.
            </param>
            <returns>The newly created <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> based on a <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/> s.t. categorical and small integer domains are
            fixed in search.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint._genomeSearchPointConverter">
            <summary>
            Responsible for converting between full-fledged <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s and continuous values.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint._genome">
            <summary>
            The genome described by this <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint._isValid">
            <summary>
            Whether the <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint._genome"/> is valid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.#ctor(MathNet.Numerics.LinearAlgebra.Vector{System.Double},Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> class.
            </summary>
            <param name="values">The real-valued components of this point.</param>
            <param name="parent">
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> this point is based on. Will be used to set remaining components.
            </param>
            <param name="genomeBuilder">
            Responsible for validity checking of <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.#ctor(MathNet.Numerics.LinearAlgebra.Vector{System.Double},Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter,Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> class.
            </summary>
            <param name="values">The real-valued components of this point.</param>
            <param name="genomeSearchPointConverter">
            Responsible for converting between full-fledged <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s and continuous values.
            </param>
            <param name="underlyingGenome">The underlying <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.</param>
            <param name="genomeBuilder">
            Responsible for validity checking of <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome">
            <summary>
            Gets the genome described by this <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> from <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>.
            </summary>
            <param name="genome">The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/> to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> on.</param>
            <param name="parameterTree">Specification of all parameters.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be handled as continuous.</param>
            <param name="genomeBuilder">
            Responsible for validity checking of <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s.
            Needs to be compatible with <paramref name="parameterTree"/>.
            </param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> which is based on a <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>, but uses
            random values for the real-valued components.
            </summary>
            <param name="genome">
            The <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/> to base the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> on.
            Components considered as real-valued are ignored.
            </param>
            <param name="parameterTree">Specification of all parameters.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be handled as continuous.</param>
            <param name="genomeBuilder">
            Responsible for validity checking of <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/>s.
            Needs to be compatible with <paramref name="parameterTree"/>.
            </param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.IsValid">
            <summary>
            Checks whether the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> is valid.
            </summary>
            <returns>Whether the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> is valid.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.ToString">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which evaluates <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> via a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2.#ctor(Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2"/> class.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2.Sort(System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})">
            <summary>
            Sorts <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s by the performance of
            associated <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> objects as evaluated by the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
            <param name="points">The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s to sort.</param>
            <returns>Indices of sorted points, best points first.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus">
            <summary>
            An object wrapping the current status of <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/>.
            Can be serialized to a file and deserialized from one.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.FileName">
            <summary>
            File name to use for serialized data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.#ctor(Optano.Algorithm.Tuner.Genomes.Population,System.Int32,System.Int32,System.Collections.Generic.Dictionary{Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.List{Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.GenomeTournamentRank}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus"/> class.
            </summary>
            <param name="population">The current population.</param>
            <param name="iterationCounter">
            The number of times
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})"/> has been
            called in this GGA phase.
            </param>
            <param name="incumbentKeptCounter">
            The number of successive generations in which the incumbent has not changed.
            </param>
            <param name="allKnownRanks">All known ranks.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.AllKnownRanks">
            <summary>
            Gets all known ranks.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.Population">
            <summary>
            Gets the current population.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.IterationCounter">
            <summary>
            Gets the number of times
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})"/> has been
            called in this GGA phase.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.IncumbentKeptCounter">
            <summary>
            Gets the number of successive generations in which the incumbent has not changed.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2">
            <summary>
            A gender-based genetic algorithm to update <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects.
            <remarks>
            Based on
            <para>
            C. A. Gil, M. Sellmann, K. Tierney: "A Gender-Based Genetic Algorithm for the Automatic Configuration of Algorithms",
            Proceedings of the 15th intern. Conference on the Principles and Practice of Constraint Programming (CP-09), Springer LNCS 5732, pp. 142-157, 2009.
            </para>
            and
            <para>
            C. Ansótegui, Y. Malitsky, H.Samulowitz, M. Sellmann, K. Tierney: "Model-Based Genetic Algorithms for Algorithm Configuration",
            Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence (IJCAI 2015).
            </para>
            </remarks>
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._configuration">
            <summary>
            A number of options used for this instance.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._parameterTree">
            <summary>
            Structure representing the tunable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._tournamentSelector">
            <summary>
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" /> which decides
            which competitive genomes are allowed to reproduce.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._geneticEngineering">
            <summary>
            Object which trains a model and enables model-based crossovers.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._population">
            <summary>
            The current genome population.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._currentGeneration">
            <summary>
            The current generation index.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._iterationCounter">
            <summary>
            The number of times <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})"/> has been
            called in this GGA phase.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._incumbentKeptCounter">
            <summary>
            The number of successive generations in which the incumbent has not changed.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._mostRecentBest">
            <summary>
            Information about the genome that was identified as best in the most recent evaluation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.#ctor(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Genomes.GenomeBuilder,Akka.Actor.IActorRef,Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class.
            </summary>
            <param name="configuration">Options used for this instance.</param>
            <param name="parameterTree">Provides the tuneable parameters.</param>
            <param name="genomeBuilder">Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.</param>
            <param name="tournamentSelector">An <see cref="T:Akka.Actor.IActorRef" /> to a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" /> which decides which competitive
            genomes are allowed to reproduce.</param>
            <param name="geneticEngineering">Object which trains a model and enables model-based crossovers.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.AllKnownRanks">
            <summary>
            Gets or sets all observed tournament results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.StatusFilePath">
            <summary>
            Gets the path to use when working with <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new phase for the strategy.
            </summary>
            <param name="basePopulation">Population to start with.</param>
            <param name="currentIncumbent">Most recent incumbent genome. Might be <c>null</c>.</param>
            <param name="instancesForEvaluation">Instances to use for evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates the current population.
            </summary>
            <param name="currentGeneration">The current generation index.</param>
            <param name="instancesForEvaluation">Instances to use for evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.FindIncumbentGenome">
            <summary>
            Finds an incumbent genome.
            <para>
            In this class, we simply return <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._mostRecentBest"/>.
            </para>
            </summary>
            <returns>The <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._mostRecentBest"/> field.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)">
            <summary>
            Finishes a phase for the strategy.
            </summary>
            <param name="basePopulation">Population on which this phase was based.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> for the next strategy to work with.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`0,`1}})">
            <summary>
            Chooses the next population update strategy after this one finished.
            </summary>
            <param name="populationUpdateStrategies">Possible strategies.</param>
            <returns>Index of the chosen strategy.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.HasTerminated">
            <summary>
            Returns a value indicating whether the current instantiation of the strategy has terminated.
            </summary>
            <returns>Whether the current instantiation of the strategy has terminated.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.LogPopulationToConsole">
            <summary>
            Logs information about the current population to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.ExportFeatureStandardDeviations">
            <summary>
            Exports the standard deviations of the numerical features of the current population's competitive part via
            <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ComputeAndExportNumericalFeatureCoefficientOfVariation(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.DumpStatus">
            <summary>
            Writes all internal data to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <summary>
            Reads all internal data from file.
            </summary>
            <param name="evaluationModel">Reference to up-to-date evaluation model.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UpdateIncumbentKeptCounter(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Updates <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2._incumbentKeptCounter"/>.
            </summary>
            <param name="previousIncumbent">The previous incumbent.</param>
            <param name="newIncumbent">The new incumbent.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UpdateAllKnownRanks(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.Results.TournamentWinnersWithRank{`1})">
            <summary>
            Update all known ranks.
            </summary>
            <param name="tournamentResults">
            The tournament results.
            </param>
            <exception cref="T:System.Exception">
            We expect one result for each competitive genome.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformSelection(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Selects those genomes from the competitive part of the population that are allowed to reproduce.
            </summary>
            <param name="instancesForEvaluation">
            The <typeparamref name="TInstance"/>s to use for evaluation.
            </param>
            <returns>
            Competitive genomes allowed to reproduce.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UpdatePopulation(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Generates natural and engineered offspring,
            updates historical genomes data,
            adds offspring to population,
            ages generated offspring,
            and inserts mutants.
            </summary>
            <param name="competitiveParents">
            The current tournament winners.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.CountDyingCompetitiveGenomes">
            <summary>
            Counts the number of competitive individuals that have reached their
            maximum age and will die at the end of the generation.
            If the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentGenome"/> has exceeded the <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxGenomeAge"/>,
            the number will be reduced by 1, as the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentGenome"/> musn't die.
            <c>Make sure to exclude it from the set of dying genomes in <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.Age"/>!</c>.
            </summary>
            <returns>The number of competitive individuals that will die at the end of the generation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.KeepIncumbentArtificiallyAlive">
            <summary>
            Check if the incumbent needs to be kept alive artificially.
            </summary>
            <returns>
            True, if the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1.IncumbentGenome"/> exceeded <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaxGenomeAge"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.CountDyingNonCompetitiveGenomes">
            <summary>
            Counts the number of non-competitive individuals that have reached their
            maximum age and will die at the end of the generation.
            </summary>
            <returns>The number of non-competitive individuals that will die at the end of the generation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.GenerateAndMutateAllOffspring(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)">
            <summary>
            Generate and mutate all offspring.
            I.e.: Determine required number of genomes,
            perform natural crossover,
            perform model-based crossover,
            mutate genomes.
            </summary>
            <param name="competitiveParents">
            The competitive parents.
            </param>
            <param name="totalDying">
            The total number of dying genomes.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.List`1"/> with the new offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.ComputeNumberOfNaturallyReproducedGenomes(System.Int32)">
            <summary>
            Compute the number of naturally reproduced genomes.
            </summary>
            <param name="totalDying">
            Number of dying genomes.
            </param>
            <returns>
            The <see cref="T:System.Int32"/> number of genomes to reproduce with natural crossover.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformCrossovers(System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)">
            <summary>
            Perfoms crossovers between genomes of different genders.
            </summary>
            <param name="competitiveParents">
            Competitive genomes allowed to reproduce.
            </param>
            <param name="number">
            Number of crossovers to perform.
            </param>
            <returns>
            The offspring.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformGeneticEngineering(System.Int32,System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Performs the genetic engineering.
            I.e.: Train the forest,
            Engineer requested number of offspring.
            </summary>
            <param name="engineeredGenomeNumber">
            The required number of engineered genomes.
            </param>
            <param name="competitiveParents">
            The competitive parents.
            </param>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the engineered genomes.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformMutation(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Mutates each genome.
            </summary>
            <param name="children">
            Genomes to mutate. Will be modified.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.AddToPopulation(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32,System.Int32)">
            <summary>
            Adds the genomes to the current population.
            </summary>
            <param name="genomes">
            The genomes to add to the population.
            </param>
            <param name="competitive">
            The number of genomes to add to the competitive population.
            </param>
            <param name="nonCompetitive">
            The number of genomes to add to the non competitive population.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.AgePopulationAndKeepIncumbentAlive">
            <summary>
            Age the population and keep incumbent alive.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3">
            <summary>
            Abstract base class for all <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which are based on
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>s.
            </summary>
            <typeparam name="TSearchPoint">
            The kind of <typeparamref name="TSearchPoint"/> which gets sorted.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3._generationEvaluationActor">
            <summary>
            Gets an <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3._instances">
            <summary>
            The <typeparamref name="TInstance"/>s to base the sorting on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3.#ctor(Akka.Actor.IActorRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/> class.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3.UpdateInstances(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Updates the <typeparamref name="TInstance"/>s to base the sorting on.
            </summary>
            <param name="instances">The <typeparamref name="TInstance"/>s to use.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3.AssignRanksToGenomes(Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult,System.Collections.Immutable.ImmutableList{Optano.Algorithm.Tuner.Genomes.ImmutableGenome})">
            <summary>
            Assigns ranks to <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s based on a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult"/> on these points.
            </summary>
            <param name="sortResult">
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Sorting.Messages.SortResult"/> on <paramref name="genomes"/>.
            </param>
            <param name="genomes">
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s to assign ranks to.
            </param>
            <returns>The rank assignments.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3.SortGenomes(System.Collections.Immutable.ImmutableList{Optano.Algorithm.Tuner.Genomes.ImmutableGenome})">
            <summary>
            Sorts genomes using the <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3._generationEvaluationActor"/>.
            </summary>
            <param name="genomesToSort">The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s to sort.</param>
            <returns>The sorting result.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter">
            <summary>
            Responsible for converting between full-fledged <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s and continuous values.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.ParameterNodeComparer">
            <summary>
            Fixes the order of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter._realValuedParameters">
            <summary>
            The real valued parameters in order of <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.ParameterNodeComparer"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter"/> class.
            </summary>
            <param name="parameterTree">Specification of all parameters.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be handled as continuous.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.ExtractContinuousParameters(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)">
            <summary>
            Extracts all parameters from the provided <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> which can be considered as
            continuous.
            </summary>
            <param name="parameterTree">The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be considered continuous.</param>
            <returns>
            All parameters from the provided <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> which can be considered as continuous,
            orderd by <see cref="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.ParameterNodeComparer"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.TransformGenomeIntoValues(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Transforms a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> into its real-valued parts.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.</param>
            <returns>The created <see cref="T:double[]"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.RandomlyCreateRealValuedParameterValues">
            <summary>
            Randomly creates values for all parameters considered as real-valued.
            </summary>
            <returns>The created <see cref="T:MathNet.Numerics.LinearAlgebra.Vector`1"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.MergeIntoGenome(MathNet.Numerics.LinearAlgebra.Vector{System.Double},Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Creates a new <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> by merging real-valued components with an existing one.
            </summary>
            <param name="values">The real-valued components.</param>
            <param name="baseGenome">
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> specifying the remaining parameters.
            </param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter.ParameterIsConsideredContinuous(Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterNode,System.Int32)">
            <summary>
            Checks whether the provided <paramref name="parameter"/> can be considered as continuous.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="minimumDomainSize">Minimum size of an integer domain to be considered continuous.</param>
            <returns>Whether the provided <paramref name="parameter"/> can be considered as continuous.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2">
            <summary>
            A strategy to update <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> objects.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new phase for the strategy.
            </summary>
            <param name="basePopulation">Population to start with.</param>
            <param name="currentIncumbent">Most recent incumbent genome. Might be <c>null</c>.</param>
            <param name="instancesForEvaluation">Instances to use for evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Performs an iteration of the population update strategy.
            </summary>
            <param name="currentGeneration">The current generation index.</param>
            <param name="instancesForEvaluation">Instances to use for evaluation.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.FindIncumbentGenome">
            <summary>
            Finds an incumbent genome.
            </summary>
            <returns>A most promising genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)">
            <summary>
            Finishes a phase for the strategy.
            </summary>
            <param name="basePopulation">Population on which this phase was based.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> for the next strategy to work with.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`0,`1}})">
            <summary>
            Chooses the next population update strategy after this one finished.
            </summary>
            <param name="populationUpdateStrategies">Possible strategies.</param>
            <returns>Index of the chosen strategy.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.HasTerminated">
            <summary>
            Returns a value indicating whether the current instantiation of the strategy has terminated.
            </summary>
            <returns>Whether the current instantiation of the strategy has terminated.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.LogPopulationToConsole">
            <summary>
            Logs information about the current population to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.ExportFeatureStandardDeviations">
            <summary>
            Exports the standard deviations of the numerical features of the current population's competitive part via
            <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ComputeAndExportNumericalFeatureCoefficientOfVariation(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus">
            <summary>
            Writes all internal data to file.
            <para>Calling <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus"/>, terminating the program and then calling
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> needs to be equivalent to one long run.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <summary>
            Reads all internal data from file.
            <para>Calling <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus"/>, terminating the program and then calling
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> needs to be equivalent to one long run.</para>
            </summary>
            <param name="evaluationModel">
            Reference to evaluation model handled by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1">
            <summary>
            Contains common configuration options.
            </summary>
            <typeparam name="TConfiguration">The type of the configuration.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.#ctor(System.Boolean,System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1"/> class.
            </summary>
            <param name="focusOnIncumbent">
            Whether the continuous optimization method should focus on improving the incumbent.
            If not, it modifies the complete competitive population.
            </param>
            <param name="maximumNumberGenerations">
            The maximum number of generations per phase.
            </param>
            <param name="minimumDomainSize">
            The minimum size an integer domain needs to have to be handled as continuous.
            </param>
            <param name="replacementRate">
            The percentage of competitive genomes which get replaced by the best search points found by 
            the continuous optimization method at the end of a phase, expressed by a value in [0, 1].
            </param>
            <param name="fixInstances">
            Whether the set of instances to evaluate on should stay the same during a phase.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FocusOnIncumbent">
            <summary>
            Gets a value indicating whether the continuous optimization method should focus on improving the incumbent.
            If not, it modifies the complete competitive population.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MaximumNumberGenerations">
            <summary>
            Gets the maximum number of generations per phase.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MinimumDomainSize">
            <summary>
            Gets the minimum size an integer domain needs to have to be handled as continuous.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.ReplacementRate">
            <summary>
            Gets the percentage of competitive genomes which get replaced by the best search points found by 
            the continuous optimization method at the end of a phase, expressed by a value in [0, 1].
            <para>A replacement rate of 0 indicates that only the incumbent itself should be replaced.</para>
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances">
            <summary>
            Gets a value indicating whether the set of instances to evaluate on should stay the same during a phase.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <typeref name="TConfiguration"/>s are compatible for one
            to be used in a continued tuning based on a tuning using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <typeref name="TConfiguration"/>s are compatible in a technical
            sense for one to be used in a continued tuning based on a tuning using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued tuning looks like a longer single tuning.</para>
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued tuning.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2">
            <summary>
            Basic structure for <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/>s building subclasses of
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1"/>.
            </summary>
            <typeparam name="TConfiguration">
            The exact type of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1"/> which is built.
            </typeparam>
            <typeparam name="TBuilder">
            The type of the implementing class.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.DefaultFocusOnIncumbent">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FocusOnIncumbent"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.DefaultMaximumNumberGenerations">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MaximumNumberGenerations"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.DefaultMinimumDomainSize">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MinimumDomainSize"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.DefaultReplacementRate">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.ReplacementRate"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.DefaultFixInstances">
            <summary>
            The default value for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.FocusOnIncumbent">
            <summary>
            Gets or sets the value to set for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FocusOnIncumbent"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.MaximumNumberGenerations">
            <summary>
            Gets or sets the value to set for
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MaximumNumberGenerations"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.MinimumDomainSize">
            <summary>
            Gets or sets the value to set for
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.MinimumDomainSize"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.ReplacementRate">
            <summary>
            Gets or sets the value to set for
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.ReplacementRate"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.FixInstances">
            <summary>
            Gets or sets the value to set for <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.Instance">
            <summary>
            Gets the current object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Builds a <typeparamref name="TConfiguration"/> using the provided <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> as
            fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The built <typeparamref name="TConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.SetMaximumNumberGenerations(System.Int32)">
            <summary>
            Sets the maximum number of generations per phase.
            Default is <see cref="F:System.Int32.MaxValue"/>.
            </summary>
            <param name="number">Positive number.</param>
            <returns>The <typeparamref name="TBuilder"/> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number is not positive.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.SetMinimumDomainSize(System.Int32)">
            <summary>
            Sets the minimum size an integer domain needs to have to be handled as continuous.
            Default is 20.
            </summary>
            <param name="size">A positive number.</param>
            <returns>The <typeparamref name="TBuilder"/> in its new state.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the number is not positive.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.SetFixInstances(System.Boolean)">
            <summary>
            Sets whether the set of instances to evaluate on should stay the same during a phase.
            Default is false.
            </summary>
            <param name="fix">Whether the set of instances to evaluate on should stay the same.</param>
            <returns>The <typeparamref name="TBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.SetFocusOnIncumbent(System.Boolean)">
            <summary>
            Sets whether the continuous optimization method should focus on improving the incumbent.
            If not, it modifies the complete competitive population.
            Default is false.
            </summary>
            <param name="incumbentFocus">
            Whether the continuous optimization method should focus on improving the incumbent.
            </param>
            <returns>The <typeparamref name="TBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2.BuildWithFallback(`0)">
            <summary>
            Builds a <typeparamref name="TConfiguration"/> using the provided <typeparamref name="TConfiguration"/> as
            fallback.
            </summary>
            <param name="fallback">Used if a property is not set for this
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBuilderBase`2"/>.
            May be null. In that case, defaults are used as fallback.</param>
            <returns>The built <typeparamref name="TConfiguration"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.ProcessUtils">
            <summary>
            Utility functions for process handling.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ProcessUtils.CancelProcess(System.Diagnostics.Process)">
            <summary>
            Kills the given process. Handles exceptions that might be thrown due to the process currently being
            terminated or already having terminated.
            </summary>
            <param name="process">The process to kill.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ProcessUtils.GetCurrentProcessId">
            <summary>
            Returns the current <see cref="P:System.Diagnostics.Process.Id"/>, or <c>0</c> 
            if an exception occurrs during the call.
            </summary>
            <returns>
            The current <see cref="P:System.Diagnostics.Process.Id"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.ProcessUtils.SetDefaultCultureInfo(System.Globalization.CultureInfo)">
            <summary>
            Sets the default <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <param name="cultureInfo">The culture info.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Randomizer">
            <summary>
            Basis for all randomness in the project.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Randomizer.instanceLock">
            <summary>
            Object to lock changes happening on the <see cref="F:Optano.Algorithm.Tuner.Randomizer.instance"/> field.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Randomizer.instance">
            <summary>
            The single <see cref="T:Optano.Algorithm.Tuner.Randomizer" /> instance.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Randomizer._random">
            <summary>
            A pseudo-random number generator.
            Never call directly, but use the thread-safe <see cref="M:Optano.Algorithm.Tuner.Randomizer.Next(System.Int32)" />,
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.Next(System.Int32,System.Int32)" /> and <see cref="M:Optano.Algorithm.Tuner.Randomizer.NextDouble" /> methods.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Optano.Algorithm.Tuner.Randomizer" /> class from being created.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Randomizer" /> class.
            </summary>
            <param name="seed">A number that is used as seed.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Randomizer.Instance">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.Randomizer" /> instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before the instance was configured.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Configure">
            <summary>
            Creates the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> instance with a time-dependent default seed value.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called a second time.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Configure(System.Int32)">
            <summary>
            Creates the <see cref="T:Optano.Algorithm.Tuner.Randomizer" /> instance with a certain seed.
            </summary>
            <param name="seed">A number that is used as seed.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if called a second time.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Reset">
            <summary>
            Destroys the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> instance s.t. <see cref="M:Optano.Algorithm.Tuner.Randomizer.Configure(System.Int32)"/> must be called
            again.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Next(System.Int32,System.Int32)">
            <summary>
            A thread-safe <see cref="M:System.Random.Next(System.Int32,System.Int32)" /> implementation.
            <para>It returns a random integer that is within a specified range.</para>
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">
            The exclusive upper bound of the random number returned. maxValue must be greater
            than or equal to minValue.
            </param>
            <returns>
            A 32-bit signed integer greater than or equal to minValue and less than maxValue;
            that is, the range of return values includes minValue but not maxValue. If minValue
            equals maxValue, minValue is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">minValue is greater than maxValue.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Next(System.Int32)">
            <summary>
            A thread-safe <see cref="M:System.Random.Next(System.Int32)" /> implementation.
            <para>
            It returns a nonnegative random integer that is less than the specified maximum.
            </para>
            </summary>
            <param name="maxValue">
            The exclusive upper bound of the random number to be generated. maxValue must
            be greater than or equal to zero.
            By default, <paramref name="maxValue"/> is set to <see cref="F:System.Int32.MaxValue"/>.
            </param>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than maxValue;
            that is, the range of return values ordinarily includes zero but not maxValue.
            However, if maxValue equals zero, maxValue is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">maxValue is less than zero.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.NextDouble">
            <summary>
            A thread-safe <see cref="M:System.Random.NextDouble" /> implementation.
            <para>It returns a random floating-point number between 0.0 and 1.0.</para>
            </summary>
            <returns>
            A double-precision floating point number greater than or equal to 0.0, and less than 1.0.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.ChooseRandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Selects a random subset from the given collection.
            </summary>
            <remarks>Based on Fisher-Yates shuffle.</remarks>
            <typeparam name="T">The type of the items in the collection.</typeparam>
            <param name="from">The set to return a subset from.</param>
            <param name="number">Size of subset.</param>
            <exception cref="T:System.ArgumentException">
            Thrown if a subset with negative size or size larger than the
            collection itself is requested.
            </exception>
            <returns>A random subset from the given collection.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.SplitIntoRandomBalancedSubsets``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32)">
            <summary>
            Splits the list of participants in random balanced subsets with the given maximum subset size.
            </summary>
            <typeparam name="T">The type of the participants.</typeparam>
            <param name="participants">The list of participants.</param>
            <param name="maximumSubsetSize">The maximum subset size.</param>
            <returns>The random balanced subsets.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.SampleFromNormal(System.Double,System.Double)">
            <summary>
            Samples from a normal distribution.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="standardDeviation">The distribution's standard deviation.</param>
            <returns>The generated sample.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.SampleFromTruncatedNormal(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Samples from a truncated normal distribution.
            </summary>
            <param name="mean">The distribution's mean.</param>
            <param name="standardDeviation">The distribution's standard deviation.</param>
            <param name="minimum">Minimum value.</param>
            <param name="maximum">Maximum value.</param>
            <returns>The generated sample.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.SampleFromUniformDistribution(System.Double,System.Double)">
            <summary>
            Samples from a uniform distribution.
            </summary>
            <param name="minimum">Minimum value.</param>
            <param name="maximum">Maximum value.</param>
            <returns>The generated sample.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.SampleFromCauchyDistribution(System.Double,System.Double)">
            <summary>
            Samples from a Cauchy distribution.
            </summary>
            <param name="location">The distribution's location.</param>
            <param name="scale">The distribution's scale.</param>
            <returns>The generated sample.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)">
            <summary>
            Makes a random binary decision.
            </summary>
            <param name="probability">The probabiity to return true.</param>
            <returns>The decision.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Randomizer.RouletteSelect(System.Double[],System.Boolean)">
            <summary>
            Performs a roulette wheel selection, based on the given weights.
            Each index i will be chosen with a probability of weight[i] / sum(weights).
            </summary>
            <param name="weight">The (un-/normalized) weights.</param>
            <param name="interpreteWeightAsRank">If set to true, all weights will be reversed. I.e. w'[i] &lt;- max(weight) - weight[i].
            Use this, if you are using Ranks instead of weights.</param>
            <returns>The chosen index.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Serialization.IDeserializationRestorer`1">
            <summary>
            Defines how to restore an object which was created by deserialization.
            </summary>
            <typeparam name="T">The type of object which is handled.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Serialization.IDeserializationRestorer`1.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Serialization.StatusBase">
            <summary>
            (De-)serializes data into / from a file. Can handle multiple serializations of the same, but updated, data.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Serialization.StatusBase.WorkInProgressSuffix">
            <summary>
            Suffix added to the file name while writing is in progress.
            The file will lose the suffix once writing completes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Serialization.StatusBase.StatusFileLock">
            <summary>
            Read/write lock for status files.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)">
            <summary>
            Reads a serialized status object from file.
            </summary>
            <param name="path">
            The file path.
            </param>
            <typeparam name="T">
            The type of the expected deserialized object.
            </typeparam>
            <returns>
            The deserialized status object.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)">
            <summary>
            Serializes the object and writes it to a file.
            </summary>
            <param name="path">
            File to write the object to.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ZipFile(System.String,System.String,System.String)">
            <summary>
            Creates a zip folder and adds a file to it.
            </summary>
            <param name="filePath">File to zip.</param>
            <param name="zipFolderPath">The zip folder to create. Should end with '.zip'.</param>
            <param name="fileNameInFolder">The name the added file should have inside the zip folder.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Serialization.StatusBase.InspectPreviousStatus(System.String)">
            <summary>
            Handles an obsolete status before it is deleted.
            </summary>
            <param name="path">Path to obsolete status file.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceBase">
            <summary>
            Instance to be solved by the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2" />.
            Needs to be immutable to guarantee thread-safety.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceBase.ToString">
            <summary>
            Gets a string representation for the current instance.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceBase.GetHashCode">
            <summary>
            Gets a hash code for the current instance.
            <para>The hash code may not depend on object reference if you plan to use OPTANO Algorithm Tuner in a
            distributed fashion.</para>
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceBase.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current instance.
            <para>The function may not depend on object references if you plan to use OPTANO Algorithm Tuner in a
            distributed fashion.</para>
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current instance; otherwise, false.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile">
            <summary>
            Represents a problem instance by storing a file name to one.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/> class.
            </summary>
            <param name="path">The path to the file.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path">
            <summary>
            Gets the path to the instance file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.ToString">
            <summary>
            Returns a string representation of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>.
            </summary>
            <returns>A string representation of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current instance by comparing
            <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True iff the object is equal to this instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>.
            </summary>
            <returns>A hash code for this <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile">
            <summary>
            An <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> treats a combination of actual file (stored in <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/>) and a <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Seed"/> as a unique Instance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> class.
            </summary>
            <param name="path">
            The path to the instance file.
            </param>
            <param name="seed">
            The seed that should be used by the target algorithm.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Seed">
            <summary>
            Gets the seed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)">
            <summary>
            Creates a list of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s on using all valid instance files in the given instance directory.
            </summary>
            <param name="pathToInstanceDirectory">The path to the instance directory.</param>
            <param name="validInstanceExtensions">The list of valid instance file extensions.</param>
            <param name="numberOfSeedsToUse">The number of seeds to use.</param>
            <param name="rngSeed">The random number generator seed.</param>
            <returns>
            The created list of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.SeedsToUse(System.Int32,System.Int32)">
            <summary>
            Generates the seeds to use for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> combinations.
            </summary>
            <param name="numberOfSeedsToUse">The number of seeds to use.</param>
            <param name="rngSeed">The random number generator seed.</param>
            <returns>The seeds.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Equals(System.Object)">
            <summary>
            Checks if the two objects are equal.
            </summary>
            <param name="obj">
            The other object.
            </param>
            <returns>
            True, if <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/> and <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Seed"/> are equal.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.GetHashCode">
            <summary>
            Computes the hash code.
            Depends on <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/> and <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Seed"/>.
            </summary>
            <returns>
            The hash code.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.ToString">
            <summary>
            Returns {Path}_{Seed}.
            </summary>
            <returns>
            The string representation.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.DumpInstanceSeedFileCombinations(System.IO.FileSystemInfo,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Dumps the given <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> combinations to a file.
            </summary>
            <param name="instanceDirectory">The instance directory.</param>
            <param name="instanceSeedFileCombinations">The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> combinations.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2">
            <summary>
            An already configured version of the target algorithm.
            </summary>
            <remarks>
            If you use some resources that should be disposed of as soon as the algorithm has completed working,
            implement <see cref="T:System.IDisposable" /> and OPTANO Algorithm Tuner will dispose it for you.
            </remarks>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2.Run(`0,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the algorithm on the given instance.
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">
            Token that should regurlarly be checked for cancellation.
            If cancellation is detected, the task has to be stopped.
            </param>
            <returns>A task that has returns everything important about the run on completion.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3">
            <summary>
            Class responsible for providing the target algorithm in configured form.
            </summary>
            <typeparam name="TTargetAlgorithm">Type of the target algorithm.</typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures the target algorithm using the given parameters.
            </summary>
            <param name="parameters">The parameters to configure the target algorithm with.</param>
            <returns>The configured target algorithm.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1" /> that holds a single continuous value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.#ctor(System.Double,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult" /> class.
            </summary>
            <param name="value">The value it should hold.</param>
            <param name="runtime">The runtime.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult"/> class. 
            Empty ctor required for <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.CreateCancelledResult(System.TimeSpan)"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.Value">
            <summary>
            Gets the continuous value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.IResult">
            <summary>
            Contains information about the outcome of an algorithm evaluation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.IResult.Runtime">
            <summary>
            Gets the run's duration.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.IResult.IsCancelled">
            <summary>
            Gets a value indicating whether the run was cancelled due to CPU timeout.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1">
            <summary>
            Result of a run of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/>.
            <para>
            Subtypes need to be immutable to guarantee thread-safety.
            </para>
            </summary>
            <typeparam name="TResultType">
            Type of results.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> class.
            </summary>
            <param name="runtime">
            The observed runtime.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.Runtime">
            <summary>
            Gets or sets the run's duration.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled">
            <summary>
            Gets or sets a value indicating whether the run was cancelled due to CPU timeout.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.CreateCancelledResult(System.TimeSpan)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> that represents a cancelled run.
            </summary>
            <param name="runtime">
            Run's duration before cancellation. 
            </param>
            <returns>
            A <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> representing a cancelled run.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.ToString">
            <summary>
            Returns the string representation of the object.
            <para>By default, the representation contains the <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.Runtime"/> and a note that the run was cancelled if
            that's the case. If an implementation has additional interesting values, it should overwrite this method to
            enable useful logs.</para>
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> that holds a runtime.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult"/> class.
            </summary>
            <param name="runtime">The runtime.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult"/> class. 
            Empty ctor required for <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.CreateCancelledResult(System.TimeSpan)"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> which is able to assign a meaningful <see cref="T:System.Double"/> value to each
            <typeparamref name="TResult"/>, and bases its sorting on these values.
            <para>
            OPTANO Algorithm Tuner may exploit the knowledge about these inner workings, e.g. in evaluation statistics.
            </para>
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2.GetMetricRepresentation(`1)">
            <summary>
            Gets a metric representation of the provided result.
            <para><see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}})"/> needs to be based on this.</para>
            </summary>
            <param name="result">The result.</param>
            <returns>A metric representation.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2">
            <summary>
            Customizable comparer, responsible for comparing multiple genome instance pair evaluations.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}})">
            <summary>
            Sorts the provided <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> by performance, best <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> first.
            </summary>
            <param name="allGenomeStatsOfMiniTournament">
            The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> of the current mini tournament.
            <para>
            NOTE: If racing is enabled (i.e. --enableRacing=true), the number of finished instances per genome may vary.
            </para>
            <para>
            NOTE: The finished instances may include results cancelled due to CPU timeouts. For those the <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/>-Boolean is true.
            </para>
            </param>
            <returns>The sorted <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/>, best <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2"/> first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}},System.Int32)">
            <summary>
            Gets all genomes that should not be evaluated further due to racing.
            IMPORTANT: We strongly recommend to not cancel any target algorithm evaluations of possible mini tournament winners by racing, even if all other genome evaluations have been finished, to ensure that all mini tournament winners have seen all instances. That's why the tuner will throw an exception, if you want to cancel more genomes by racing than "number of mini tournament participants - desired number of mini tournament winners".
            NOTE: If racing is enabled (i.e. --enableRacing=true), implementing this method in combination with <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1},System.TimeSpan)"/> can drastically reduce the run time of the whole tuning.
            That's why the implementation of this method should strongly depend on the implementations of <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}})"/> and <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1},System.TimeSpan)"/>.
            </summary>
            <param name="allGenomeStatsOfMiniTournament">The genome stats of the current mini tournament.</param>
            <param name="numberOfMiniTournamentWinners">The desired number of mini tournament winners.</param>
            <returns>The genomes that should not be evaluated further.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1},System.TimeSpan)">
            <summary>
            Computes the evaluation priority of the current genome, based on the given information.
            The lower the evaluation priority, the earlier the genome will be evaluated.
            NOTE: If racing is enabled (i.e. --enableRacing=true), implementing this method in combination with <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}},System.Int32)"/> can drastically reduce the run time of the whole tuning.
            That's why the implementation of this method should strongly depend on the implementations of <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}})"/> and <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}},System.Int32)"/>.
            </summary>
            <param name="genomeStats">The genome stats.</param>
            <param name="cpuTimeout">The CPU timeout.</param>
            <returns>The genome priority.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.RunEvaluatorUtils">
            <summary>
            Utility methods for <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.RunEvaluatorUtils.CheckIfRateIsOutOfBounds(System.Double,System.String)">
            <summary>
            Checks if a rate is out of bounds and writes a warning.
            </summary>
            <param name="rate">The rate.</param>
            <param name="rateName">The rate name.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> that sorts genomes by (penalized) average runtime on target algorithm runs, lower runtime first.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1._factorPar">
            <summary>
            The penalization factor for timed out runs' runtime.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1"/> class.
            </summary>
            <param name="factorPar">
            The penalization factor for timed out runs' runtime.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult}})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult},System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.GetMetricRepresentation(Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult)">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2" /> that sorts genomes by average value in target algorithm runs.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1._ascending">
            <summary>
            A value indicating whether values should be sorted ascendingly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1"/> class.
            </summary>
            <param name="ascending">A value indicating whether values should be sorted ascendingly.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult},System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.GetMetricRepresentation(Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.HasValidResultValue(Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult)">
            <summary>
            Checks, if the result has a valid result value.
            </summary>
            <param name="result">The result.</param>
            <returns>True, if the result has a valid result value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.TimeSpanUtil">
            <summary>
            The time span utils.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TimeSpanUtil.Multiply(System.TimeSpan,System.Int64)">
            <summary>
            Multiplies a timespan by an integer or long value.
            </summary>
            <param name="multiplicand">
            The multiplicand.
            </param>
            <param name="multiplier">
            The multiplier.
            </param>
            <returns>
            The <see cref="T:System.TimeSpan"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TimeSpanUtil.Multiply(System.TimeSpan,System.Double)">
            <summary>
            Multiplies a timespan by a double value.
            </summary>
            <param name="multiplicand">
            The multiplicand.
            </param>
            <param name="multiplier">
            The multiplier.
            </param>
            <returns>
            The <see cref="T:System.TimeSpan"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TimeSpanUtil.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.TimeSpan})">
            <summary>
            Computes the sum over elements of an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, 
            that are converted to <see cref="T:System.TimeSpan"/> with the given <paramref name="selector"/>.
            </summary>
            <param name="source">
            The source enumerable.
            </param>
            <param name="selector">
            The converter from <typeparamref name="TSource"/> to <see cref="T:System.TimeSpan"/>.
            </param>
            <typeparam name="TSource">
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> element type.
            </typeparam>
            <returns>
            The sum of all converted <see cref="T:System.TimeSpan"/>s.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TimeSpanUtil.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.TimeSpan})">
            <summary>
            Computes the average over elements of an <see cref="T:System.Collections.Generic.IEnumerable`1"/>, 
            that are converted to <see cref="T:System.TimeSpan"/> with the given <paramref name="selector"/>.
            </summary>
            <param name="source">
            The source enumerable.
            </param>
            <param name="selector">
            The converter from <typeparamref name="TSource"/> to <see cref="T:System.TimeSpan"/>.
            </param>
            <typeparam name="TSource">
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> element type.
            </typeparam>
            <returns>
            The average over all converted <see cref="T:System.TimeSpan"/>s.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.TimeSpanUtil.Min(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the smaller of the two given <see cref="T:System.TimeSpan"/>s.
            </summary>
            <param name="timeSpanA">
            The time span a.
            </param>
            <param name="timeSpanB">
            The time span b.
            </param>
            <returns>
            The smaller <see cref="T:System.TimeSpan"/>.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation">
            <summary>
            Relevant information about a generation which will be written to an evaluation file at the end of the tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.GenerationInformation.LegendOfGenerationInformation">
            <summary>
            Explanation of <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformation.ToString"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformation.#ctor(System.Int32,System.TimeSpan,System.Int32,System.Type,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> class.
            </summary>
            <param name="generation">The generation index.</param>
            <param name="totalElapsedTime"> The total elapsed time.</param>
            <param name="totalNumberOfEvaluations">
            The total number of evaluations at the end of the generation.
            </param>
            <param name="strategy">The strategy type used in the generation.</param>
            <param name="incumbent">The incumbent.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="generation"/> or <paramref name="totalNumberOfEvaluations"/> are negative.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="strategy"/> or <paramref name="incumbent"/> are <c>null</c>.
            </exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.Generation">
            <summary>
            Gets the generation index.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.TotalElapsedTime">
            <summary>
            Gets the total elapsed time.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.TotalNumberOfEvaluations">
            <summary>
            Gets the total number of evaluations at the end of the generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.Strategy">
            <summary>
            Gets the strategy type used in that generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.Incumbent">
            <summary>
            Gets the incumbent as determined by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.IncumbentTrainingScore">
            <summary>
            Gets or sets <see cref="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.Incumbent"/>'s average score over the complete training set.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.IncumbentTestScore">
            <summary>
            Gets or sets <see cref="P:Optano.Algorithm.Tuner.Tracking.GenerationInformation.Incumbent"/>'s average score over the complete test set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformation.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <seealso cref="F:Optano.Algorithm.Tuner.Tracking.GenerationInformation.LegendOfGenerationInformation"/>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2">
            <summary>
            Responsible for completing <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> objects by adding scores to them.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2._generationEvaluationActor">
            <summary>
            A <see cref="T:Akka.Actor.IActorRef"/> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/> which can be used to provoke
            evaluations.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2._resultStorageActor">
            <summary>
            A <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/> to score the target algorithm run results.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.#ctor(Akka.Actor.IActorRef,Akka.Actor.IActorRef,Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2"/> class.
            </summary>
            <param name="generationEvaluationActor">
            A <see cref="T:Akka.Actor.IActorRef"/> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/> which can be used to provoke
            evaluations.
            </param>
            <param name="resultStorageActor">
            A <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </param>
            <param name="runEvaluator">
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/> to score the target algorithm run results.
            </param>
            <exception cref="T:System.NullReferenceException">
            Thrown if <paramref name="generationEvaluationActor"/>, <paramref name="resultStorageActor"/> or
            <paramref name="runEvaluator"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            Adds incumbent candidate scores to <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation" /> objects.
            </summary>
            <param name="informationHistory">The <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation" /> objects to score.</param>
            <param name="trainingInstances">The training instances.</param>
            <param name="testInstances">The test instances.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="informationHistory"/>, <paramref name="trainingInstances"/> or
            <paramref name="testInstances"/> are <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown if <paramref name="trainingInstances"/> is empty.
            </exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.EvaluateAllIncumbentCandidates(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Provokes evaluations on all incumbent candidates on the provided instances.
            </summary>
            <param name="informationHistory">
            <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> objects storing the incumbent candidates.
            </param>
            <param name="instances">The instances to evaluate the candidates on.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.AverageResultsOn(System.Collections.Generic.IEnumerable{`0},Optano.Algorithm.Tuner.Genomes.ImmutableGenome)">
            <summary>
            Averages the compare values of a certain genome's results on the provided instances.
            </summary>
            <param name="instances">
            The instances to take the average on. All of them should already be evaluated for <paramref name="genome"/>.
            </param>
            <param name="genome">The genome.</param>
            <returns>The average compare value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tracking.LogWriter`2">
            <summary>
            Responsible for rewriting a log file after every generation.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.LogWriter`2.WorkInProgressSuffix">
            <summary>
            Suffix added to the file name while writing is in progress.
            The file will lose the suffix once writing completes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.LogWriter`2._startTime">
            <summary>
            Time at which the program was started.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.LogWriter`2._parameterTree">
            <summary>
            Structure representing the tunable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.LogWriter`2._configuration">
            <summary>
            The algorithm tuner configuration parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tracking.LogWriter`2._elapsedTimeFromPreviousTuningSession">
            <summary>
            Offset for the <see cref="P:Optano.Algorithm.Tuner.Tracking.LogWriter`2.TotalElapsedTime"/>. Can be used when tuning is continued from existing status file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tracking.LogWriter`2"/> class.
            </summary>
            <param name="parameterTree">
            The parameter tree used for tuning.
            </param>
            <param name="configuration">
            The algorithm tuner configuration parameters.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.LogWriter`2.TotalElapsedTime">
            <summary>
            Gets the elapsed time.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})">
            <summary>
            Logs a finished generation to file.
            </summary>
            <param name="numberFinishedGenerations">The number of finished generations so far.</param>
            <param name="totalEvaluationCount">The total number of evaluations so far.</param>
            <param name="fittestGenome">The fittest genome found in the generation.</param>
            <param name="results">All results of the fittest genome so far.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.SetElapsedTimeOffset(System.TimeSpan)">
            <summary>
            Can be used to add an offset to the <see cref="P:Optano.Algorithm.Tuner.Tracking.LogWriter`2.TotalElapsedTime"/>.
            </summary>
            <param name="elapsedTimeFromPreviousSession">
            A non-negative offset. I.e. the elapsed time of a previous tuning session that is continued.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker">
            <summary>
            The run statistic tracker.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ComputeAndExportNumericalFeatureCoefficientOfVariation(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Genomes.Genome},System.Int32)">
            <summary>
            Compute and export numerical feature coefficient of variation.
            </summary>
            <param name="paramTree">
            The parameter tree.
            </param>
            <param name="genomes">
            The genomes.
            </param>
            <param name="currGeneration">
            The current generation.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.TrackConvergenceBehavior``2(Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{``1},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator{``0,``1})">
            <summary>
            Track convergence behavior.
            </summary>
            <param name="incumbentGenomeWrapper">
            The incumbent genome wrapper.
            </param>
            <param name="runEvaluator">
            A <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/> to evaluate the incumbent's results.
            </param>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <returns>
            The <see cref="T:System.Double"/> average <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2.GetMetricRepresentation(`1)"/> of the
            current incumbent.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportConvergenceBehavior(System.Collections.Generic.List{System.Double})">
            <summary>
            Export convergence behavior.
            </summary>
            <param name="incumbentQuality">
            The incumbent quality.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportGenerationHistory(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation})">
            <summary>
            Exports the generation information history to file.
            </summary>
            <param name="informationHistory">The information history.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportAverageIncumbentScores(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Int32)">
            <summary>
            Exports the average incumbent scores by evaluation count to file.
            </summary>
            <param name="informationHistory">The information history.</param>
            <param name="evaluationLimit">
            The evaluation limit after which further generation information is ignored.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tracking.Status`5">
            <summary>
            An object wrapping the current status of tuning a target algorithm.
            Can be serialized to a file and deserialized from one.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <typeparam name="TLearnerModel">
            ML model that trains a <typeparamref name="TPredictorModel"/>.
            </typeparam>
            <typeparam name="TPredictorModel">
            A trained ML model that predicts the performance for a given <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </typeparam>
            <typeparam name="TSamplingStrategy">
            A strategy used for aggregating observed training data.
            </typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.Status`5.#ctor(System.Int32,Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering{`2,`3,`4},System.Int32,System.Collections.Generic.List{System.Double},Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1},System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.TimeSpan)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/> class.
            </summary>
            <param name="generation">
            The current generation.
            </param>
            <param name="population">
            The current population stored by the <see cref="T:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2"/>.
            </param>
            <param name="configuration">
            The algorithm tuner configuration parameters.
            </param>
            <param name="geneticEngineering">
            The complete <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> object 
            contained in <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </param>
            <param name="currentUpdateStrategyIndex">
            Index of the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> used by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </param>
            <param name="incumbentQuality">
            The average incumbent compare value scores.
            </param>
            <param name="incumbentGenomeWrapper">
            The incumbent genome wrapper.
            </param>
            <param name="informationHistory">
            <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> for all previous generations.
            </param>
            <param name="elapsedTime">
            The elapsed time of the tuning.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.IncumbentGenomeWrapper">
            <summary>
            Gets the incumbent genome wrapper.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.IncumbentQuality">
            <summary>
            Gets the incumbent quality.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.Generation">
            <summary>
            Gets the stored generation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.Population">
            <summary>
            Gets the population as stored by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.Configuration">
            <summary>
            Gets the configuration used for the run so far.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.GeneticEngineering">
            <summary>
            Gets the genetic engineering in its current status.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.RunResults">
            <summary>
            Gets a number of run results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.CurrentUpdateStrategyIndex">
            <summary>
            Gets the index of the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> used by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.ElapsedTime">
            <summary>
            Gets the elapsed time of the tuning.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tracking.Status`5.InformationHistory">
            <summary>
            Gets <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>s for all previous generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.Status`5.SetRunResults(System.Collections.Immutable.ImmutableDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Immutable.ImmutableDictionary{`0,`1}})">
            <summary>
            Sets run results for the <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/> object.
            </summary>
            <param name="runResults">
            The run results to store.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tracking.Status`5.WriteToFile(System.String)">
            <summary>
            Serializes the <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/> object and writes it to a file.
            </summary>
            <param name="path">
            File to write the object to.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6">
            <summary>
            The algorithm tuner with generic options to define the model-based crossover operator.
            </summary>
            <typeparam name="TTargetAlgorithm">
            The algorithm that should be tuned.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
            <typeparam name="TModelLearner">
            The machine learning model that trains the specified <typeparamref name="TPredictorModel"/>.
            </typeparam>
            <typeparam name="TPredictorModel">
            The ML model that predicts the performance for a given potential offspring.
            </typeparam>
            <typeparam name="TSamplingStrategy">
            The strategy that is used for aggregating the observed training data before training the <typeparamref name="TPredictorModel"/>.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._instanceSelector">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1" /> used for tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._trainingInstances">
            <summary>
            All <typeparamref name="TInstance"/>s potentially used for tuning.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._parameterTree">
            <summary>
            Structure representing the tuneable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._runEvaluator">
            <summary>
            Object for evaluating target algorithm runs.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._actorSystem">
            <summary>
            Actor system where all actors live.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._resultStorageActor">
            <summary>
            An <see cref="T:Akka.Actor.IActorRef" /> to the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._generationEvaluationActor">
            <summary>
            An <see cref="T:Akka.Actor.IActorRef" /> to the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._configuration">
            <summary>
            A number of options used for this instance.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._logWriter">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Tracking.LogWriter`2"/> writing interesting information to file after each generation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._populationUpdateStrategyManager">
            <summary>
            Manages the different <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> objects.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._currGeneration">
            <summary>
            The current generation index.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._incumbentGenomeWrapper">
            <summary>
            The incumbent genome wrapper.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._informationHistory">
            <summary>
            Contains <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> for all previous generations.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._testInstances">
            <summary>
            <typeparamref name="TInstance"/>s which might be used for testing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},System.Collections.Generic.IEnumerable{`1},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/> class.
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class.
            </summary>
            <param name="targetAlgorithmFactory">
            Produces configured instances of the algorithm to tune.
            </param>
            <param name="runEvaluator">
            Object for evaluating target algorithm runs.
            </param>
            <param name="trainingInstances">
            The set of instances used for tuning.
            </param>
            <param name="parameterTree">
            Provides the tunable parameters.
            </param>
            <param name="configuration">
            Algorithm tuner configuration parameters.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},System.Collections.Generic.IEnumerable{`1},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/> class.
            </summary>
            <param name="targetAlgorithmFactory">
            Produces configured instances of the algorithm to tune.
            </param>
            <param name="runEvaluator">
            Object for evaluating target algorithm runs.
            </param>
            <param name="trainingInstances">
            The set of instances used for tuning.
            </param>
            <param name="parameterTree">
            Provides the tunable parameters.
            </param>
            <param name="configuration">
            Algorithm tuner configuration parameters.
            </param>
            <param name="genomeBuilder">
            Responsible for creation, modification and crossover of genomes.
            Needs to be compatible with the given parameter tree and configuration.
            This parameter can be left out if an ordinary <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> should be used.
            </param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.IncumbentQuality">
            <summary>
            Gets or sets the incumbent quality.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.GeneticEngineering">
            <summary>
            Gets or sets the genetic engineering.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.SetTestInstances(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Sets the instances to use for potential testing.
            </summary>
            <param name="instances">
            <typeparamref name="TInstance"/>s which should be used for testing.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)">
            <summary>
            Reads in a status dump and sets the algorithm tuner to continue at that point.
            Only call this method if <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.Run"/> has not been called yet.
            </summary>
            <param name="pathToStatusFile">
            Path to status file.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.Run">
            <summary>
            Starts a new OPTANO Algorithm Tuner run.
            </summary>
            <returns>Best parameters found for the target algorithm.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CompleteAndExportGenerationHistory">
            <summary>
            Completes the generation information history and exports it to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.Dispose">
            <summary>
            Disposes of the underlying <see cref="T:Akka.Actor.ActorSystem"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.ValidateParameters(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},System.Collections.Generic.IEnumerable{`1},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Validates the parameters:
            * Null checks for every one of them.
            * Checks that the number of training instances provided is sufficient considering the given configuration.
            * Checks that configuration about whether to use run time tuning
            and the usage of the run time tuning result interface fit together
            * Checks that the parameter tree contains parameters.
            * Checks that those parameters' identifiers are unique.
            </summary>
            <param name="targetAlgorithmFactory">
            Produces configured instances of the target algorithm to tune.
            </param>
            <param name="runEvaluator">
            Object for evaluating target algorithm runs.
            </param>
            <param name="trainingInstances">
            The set of instances used for tuning.
            </param>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <param name="configuration">
            Algorithm tuner configuration parameters.
            </param>
            <param name="genomeBuilder">
            The genome builder.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CreatePopulationUpdateStrategies">
            <summary>
            Creates the different <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>s that may be used to
            update the population.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>s.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UpdateGenerationHistory(Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`1,`2})">
            <summary>
            Updates <see cref="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._informationHistory"/> with the current (finished) generation.
            </summary>
            <param name="currentStrategy">The current strategy.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.IsEvaluationLimitMet">
            <summary>
            Determines whether the maximum number of evaluations is met.
            </summary>
            <returns>
              <c>true</c> if evaluation limit is met; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.LogFinishedGeneration">
            <summary>
            Logs information about the finished generation to a log file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.DumpStatus">
            <summary>
            Writes the current status (generation, population, run results) to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.LogStatistics">
            <summary>
            Logs statistics about a finished run of this
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            instance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.InitializePopulation">
            <summary>
            Creates a population consisting of random genomes having an age and gender such that:
            * The size of the non-competitive and competitive parts of the population differs at most by 1.
            * The total size of the population matches the one specified by the <see cref="F:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6._configuration" />.
            * Age is distributed evenly in both population parts.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CreateRandomGenomes(System.Int32,System.Boolean)">
            <summary>
            Creates random genomes with a random age such that age is distributed evenly.
            </summary>
            <param name="numberIndividuals">
            The number of genomes to add.
            </param>
            <param name="includeDefaultGenome">Indicates whether to include a default value genome.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> objects.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UpdateIncumbentGenomeWrapper(Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2})">
            <summary>
            Updates the incumbent genome wrapper.
            </summary>
            <param name="generationBest">
            Best genome of most recent generation.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.TrackConvergenceBehavior">
            <summary>
            Tracks the convergence behavior of the algorithm and logs it to csv.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3">
            <summary>
            Responsible for managing the overall tuning process of OPTANO Algorithm Tuner.
            </summary>
            <typeparam name="TTargetAlgorithm">
            Type of the target algorithm.
            Must implement <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/>.
            </typeparam>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},System.Collections.Generic.IEnumerable{`1},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class.
            </summary>
            <param name="targetAlgorithmFactory">
            The target algorithm factory.
            </param>
            <param name="runEvaluator">
            The run evaluator.
            </param>
            <param name="trainingInstances">
            The training instances.
            </param>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <param name="configuration">
            The configuration.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3.#ctor(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{`0,`1,`2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{`1,`2},System.Collections.Generic.IEnumerable{`1},Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class.
            </summary>
            <param name="targetAlgorithmFactory">
            The target algorithm factory.
            </param>
            <param name="runEvaluator">
            The run evaluator.
            </param>
            <param name="trainingInstances">
            The training instances.
            </param>
            <param name="parameterTree">
            The parameter tree.
            </param>
            <param name="configuration">
            The configuration.
            </param>
            <param name="genomeBuilder">
            The genome builder.
            </param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2">
            <summary>
            Switches between different <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> objects.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type of a single target algorithm evaluation.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2._populationUpdateStrategies">
            <summary>
            All possible <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.#ctor(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`0,`1}},Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2"/> class.
            </summary>
            <param name="populationUpdateStrategies">All possible <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>s.</param>
            <param name="configuration">Algorithm tuner configuration parameters.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.CurrentUpdateStrategyIndex">
            <summary>
            Gets the index of the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> in
            <see cref="F:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2._populationUpdateStrategies"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.BasePopulation">
            <summary>
            Gets the genome population the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> gets based on.
            Is updated each time the strategy is changed.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.CurrentStrategy">
            <summary>
            Gets the current strategy.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.HasPopulation">
            <summary>
            Gets a value indicating whether <see cref="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.BasePopulation"/> was initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.DumpStatus">
            <summary>
            Calls <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus"/> for all possible strategies.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.UseStatusDump(System.Int32,Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)">
            <summary>
            Uses a status dump.
            </summary>
            <param name="currentStrategyIndex">
            Index of the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> in
            <see cref="F:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2._populationUpdateStrategies"/>.
            </param>
            <param name="population">The population as stored in <see cref="P:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.BasePopulation"/>.</param>
            <param name="geneticEngineering">
            Reference to genetic engineering used by
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.Initialize(Optano.Algorithm.Tuner.Genomes.Population)">
            <summary>
            Initializes this instance.
            </summary>
            <param name="population">The population to start with.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.ChangePopulationUpdateStrategy(System.Collections.Generic.ICollection{`0},Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`1})">
            <summary>
            Changes to the correct <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> based on the current
            strategy.
            </summary>
            <param name="initializationInstances">
            Instances to use for potential evaluations on strategy initialization.
            </param>
            <param name="currentIncumbent">Most recent incumbent genome. Might be <c>null</c>.</param>
            <returns>The chosen <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tuning.PopulationUpdateStrategyManager`2.FinishPhase">
            <summary>
            Finishes a strategy phase.
            </summary>
        </member>
    </members>
</doc>
