<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Optano.Algorithm.Tuner.Tests</name>
    </assembly>
    <members>
        <member name="T:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> and <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest._builder">
            <summary>
            Builder used for tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest._randomForestConfigBuilder">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/> used for tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest._defaultTestingHoconConfig">
            <summary>
            Copy of the HOCON config text.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.DefaultBuilderVerbosityIsStatus">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.Verbosity"/> returns
            <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info"/> if nothing is set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.BuilderVerbosityPropertyWorks">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.Verbosity"/> returns
            the level that was set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.BuildWithFallbackUsesFallbacksForDetailedConfigurations">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            also uses fallbacks for detailed configurations what is specified in the new builder.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsTrueForDifferentBaseParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if basic parameters like the verbosity
            or the number of tolerable failures before an exception are different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NumberOfProcessorsLessThanNumberParallelEvaluationsWritesWarning">
            <summary>
            Verifies that providing <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelEvaluations"/> higher than the number of available processors on the system writes a warning to the console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NumberProcessorsEqualToNumberParallelEvaluationsDoesNotWriteWarning">
            <summary>
            Verifies that providing <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.MaximumNumberParallelEvaluations"/> equal to the number of available processors on the system does not write a warning to the console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentPopulationSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the population size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForSmallerEvaluationLimit">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the evaluation limit
            decreases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsTrueForGreaterEvaluationLimit">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the evaluation limit
            increases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentTuningType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if one configuration indicates that
            runtime should be tuned and the other doesn't.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentGenerationNumbers">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the generation number is
            different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumNumberGgaGenerations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the number of
            generations per GGA phase is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumNumberGgaGenerationsWithSameIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum number of
            consecutive GGA generations with the same incumbent is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentContinuousOptimizationMethod">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            continuous optimization method to combine with GGA is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumGenomeAge">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum genome age is
            different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumMiniTournamentSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum mini tournament size
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentWinnerPercentages">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the winner percentage is
            different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentCpuTimeouts">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the CPU timeout is
            different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentCrossoverSwitchProbability">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the crossover switch probability
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMutationRates">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the mutation rate
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMutationVariancePercentage">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the mutation variance percentage
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMinimumNumberInstances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the minimum number of instances
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumNumberInstances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum number of instances
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentGoalGenerations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the goal generation number is
            different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentEngineeredPopulationRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the engineered
            population ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentPopulationMutantRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the population
            mutant ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentGeneticEngineeringStartGeneration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the genetic engineering
            start generation is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentTopPerformerThreshold">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the top performer
            threshold is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentSexualSelectionSetting">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the sexual
            selection setting is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentCrossoverProbabilityCompetitive">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the crossover
            probability for competitive genomes in genetic engineering is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentHammingDistanceTreshold">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the hamming
            distance threshold is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentTargetSamplingSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the target
            sampling size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentNumberRanksCompensatedByDistance">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum number
            ranks compensated by distance is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentFeatureSubsetRatioForDistance">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the feature subset
            ratio for distance is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForDifferentDistanceMetric">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the distance metric
            is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForNewTrainModelSetting">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the train
            model setting changes from false to true.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseNewAddDefaultGenomeValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            add default genome value is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsCompatibleReturnsFalseForIncompatibleRandomForestConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if associated
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> is incompatible.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsTechnicallyCompatibleReturnsTrueForSameRandomForestParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if
            all inherent random forest parameters stay the same.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsTechnicallyCompatibleReturnsFalseForNewTrainModelSetting">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the train
            model setting changes from false to true.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsTechnicallyCompatibleReturnsFalseForNewContinuousOptimizationMethod">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            continuous optimization method to combine with GGA(++) changes to something other than 'none'.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.IsTechnicallyCompatibleReturnsFalseForIncompatibleRandomForestConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if associated
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> is technically incompatible.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.AddingSameDetailedConfigurationBuilderTwiceThrowsError">
            <summary>
            Checks that calling
            <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.AddDetailedConfigurationBuilder(System.String,Optano.Algorithm.Tuner.Configuration.IConfigBuilder{Optano.Algorithm.Tuner.Configuration.ConfigurationBase})"/>
            twice with the same key throws an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.AddingNullAsDetailedConfigurationBuilderThrowsException">
            <summary>
            Checks that calling
            <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder.AddDetailedConfigurationBuilder(System.String,Optano.Algorithm.Tuner.Configuration.IConfigBuilder{Optano.Algorithm.Tuner.Configuration.ConfigurationBase})"/>
            twice with the null as builder throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ExtractDetailedConfigurationThrowsForMissingConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ExtractDetailedConfiguration``1(System.String)"/>
            throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/> if no configuration with identifier
            <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.Identifier"/> exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ExtractDetailedConfigurationThrowsForUnexpectedType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ExtractDetailedConfiguration``1(System.String)"/>
            throws a <see cref="T:System.InvalidCastException"/> if the provided type does not match the found one.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ExtractDetailedConfigurationExtractsConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ExtractDetailedConfiguration``1(System.String)"/>
            extracts the correct configuration if it exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.TooSmallPopulationSizeThrowsError">
            <summary>
            Verifies that setting the population size to 1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MinimumPopulationDoesNotThrowError">
            <summary>
            Checks that setting the population size to 2 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeEvaluationLimitThrowsError">
            <summary>
            Verifies that setting the evaluation limit to -1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroEvaluationsAllowedDoesNotThrowError">
            <summary>
            Checks that setting the evaluation limit to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.TooSmallGenerationNumberThrowsError">
            <summary>
            Verifies that setting the number of generations to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MinimumGenerationNumberDoesNotThrowError">
            <summary>
            Checks that setting the number of generations to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeNumberGenerationsPerPhaseNumberThrowsError">
            <summary>
            Verifies that setting the number of generations per GGA phase to -1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MinimumGenerationsPerPhaseNumberDoesNotThrowError">
            <summary>
            Checks that setting the number of generations per GGA phase to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroGenerationsWithoutNewlyFoundIncumbentThrowsError">
            <summary>
            Verifies that setting the maximum number of consecutive GGA generations with no newly found incumbent to 0
            results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MinimumoGenerationsWithoutNewlyFoundIncumbentDoesNotThrowError">
            <summary>
            Checks that setting the maximum number of consecutive GGA generations with no newly found incumbent to 1
            does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.TooSmallMaxGenomeAgeThrowsError">
            <summary>
            Verifies that setting the maximum genome age to 0 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MinimumMaxGenomeAgeDoesNotThrowError">
            <summary>
            Checks that setting the maximum genome age to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MaxGenomeAgeGreaterThanBothGenderPopulationThrowsError">
            <summary>
            Verifies that setting the maximum genome age to a value higher than the bigger half of the population
            throws an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MaxGenomeAgeEqualsBiggerGenderPopulationSizeDoesNotThrowError">
            <summary>
            Checks that setting the maximum genome age to the size of the bigger half of the population does not
            provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroPercentTournamentWinnerPercentageThrowsError">
            <summary>
            Verifies that setting the number of tournament winners to 0% results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.OneHundredPercentTournamentWinnerPercentageThrowsError">
            <summary>
            Verifies that setting the number of tournament winners to 100% results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroCpuTimeoutThrowsError">
            <summary>
            Verifies that setting the CPU timeout to 0 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeCpuTimeoutThrowsError">
            <summary>
            Verifies that setting the CPU timeout to -1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeCrossoverSwitchProbabilityThrowsError">
            <summary>
            Verifies that setting the crossover switch probability to a negative value results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.Above1CrossoverSwitchProbabilityThrowsError">
            <summary>
            Verifies that setting the crossover switch probability to a value larger than 100% results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroCrossoverSwitchProbabilityDoesNotThrowError">
            <summary>
            Checks that setting the crossover switch probability to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.AlwaysSwitchDoesNotThrowError">
            <summary>
            Checks that setting the crossover switch probability to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeMutationRateThrowsError">
            <summary>
            Verifies that setting the mutation rate to -0.1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.Above1MutationRateThrowsError">
            <summary>
            Verifies that setting the mutation rate to 1.1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroMutationRateDoesNotThrowError">
            <summary>
            Checks that setting the mutation rate to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.AlwaysMutateDoesNotThrowError">
            <summary>
            Checks that setting the mutation rate to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroMutationVariancePercentageThrowsError">
            <summary>
            Verifies that setting the mutation variance percentage to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.Above1MutationVariancePercentageThrowsError">
            <summary>
            Verifies that setting the mutation variance percentage to 1.1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MutationVariancePercentageOf1DoesNotThrowError">
            <summary>
            Checks that setting the mutation variance percentage to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeNumberRepairAttemptsThrowsError">
            <summary>
            Verifies that setting the maximum number of repair attempts to -1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroRepairAttemptsDoesNotThrowError">
            <summary>
            Checks that setting the maximum number of repair attempts to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeMaximumNumberTriesPerEvaluationThrowsError">
            <summary>
            Verifies that setting the maximum number of tries per evaluation to -1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroMaximumNumberTriesPerEvaluationDoesNotThrowError">
            <summary>
            Checks that setting the maximum number of tries per evaluation and tolerating a failure to 0 does not
            provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroNumberOfInstancesThrowsError">
            <summary>
            Verifies that setting the start number of instances to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.DecreasingNumberOfInstancesThrowsError">
            <summary>
            Verifies that setting the final number of instances to less than the start number results in an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ConstantlyOneInstanceDoesNotThrowError">
            <summary>
            Checks that setting both the final and the start number of instances to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NegativeGoalGenerationThrowsError">
            <summary>
            Verifies that setting the goal generation to -1 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.GoalGenerationZeroDoesNotThrowError">
            <summary>
            Checks that setting the goal generation to 0 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.GoalGenerationEqualsGenerationNumberThrowsError">
            <summary>
            Verifies that setting the goal generation index to the same number as number generations results in an
            <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.GoalGenerationLastGenerationDoesNotThrowError">
            <summary>
            Checks that setting the goal generation to the last generation (#number generations - 1) does not provoke
            an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.NullReferenceAsAkkaConfigurationThrowsError">
            <summary>
            Verifies that setting the Akka.NET configuration to null results in an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroCoresThrowsError">
            <summary>
            Verifies that setting the number of cores to 0 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.OneCoreDoesNotThrowError">
            <summary>
            Checks that setting the number of cores to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroMaximumNumberParallelEvaluationsThrowsError">
            <summary>
            Verifies that setting the maximum number of parallel evaluations per node to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MaximumNumberOfParallelEvaluationsOf1DoesNotThrowError">
            <summary>
            Checks that setting the maximum number of parallel evaluations per node to 1 does not
            provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.ZeroMaximumMiniTournamentSizeThrowsError">
            <summary>
            Verifies that setting the maximum mini tournament size to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MaximumMiniTournamentSizeOf1DoesNotThrowError">
            <summary>
            Checks that setting the maximum mini tournament size to 1 does not provoke an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.MissingMaximumNumberParallelEvaluationsThrowsError">
            <summary>
            Verifies that not specifying the maximum number of parallel evaluations leads to an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.UndefinedVerbosityLevelThrowsError">
            <summary>
            Verifies that setting the verbosity level to an undefined value throws an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.UndefinedContinuousOptimizationMethodThrowsError">
            <summary>
            Verifies that setting the continuous optimization method to an undefined value throws an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.SmallNumberGgaGenerationsWritesWarningWithoutContinuousOptimizationMethod">
            <summary>
            Verifies that setting the maximum number of GGA generations per phase smaller than the overall number of
            generations without using an additional method writes out a warning.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.SmallNumberGgaGenerationsWithSameIncumbentWritesWarningWithoutContinuousOptimizationMethod">
            <summary>
            Verifies that setting the maximum number of consecutive GGA generations with the same incumbent smaller
            than the overall number of generations without using an additional method writes out a warning.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.AlgorithmTunerConfigurationTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest"/> used in tests. Must be initialized.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest._consoleOutput">
            <summary>
            Listener for console output.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest._originalConsoleOut">
            <summary>
            Stores the reference to original <see cref="P:System.Console.Out"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.Dispose">
            <summary>
            Cleans up after each test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsReturnsTrueForValidOptionsWithoutHelpOption">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> returns 
            true if valid arguments without the --help one are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsReturnsFalseForMissingOptions">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> returns 
            false if required options are missing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsPrintsInformationAboutMissingOptions">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> prints 
            information if required options are missing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsReturnsFalseForUnknownOptions">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> returns 
            false for additional unknown options.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsPrintsInformationAboutUnknownOptions">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> prints 
            information if unknown options are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsReturnsFalseIfHelpIsRequested">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> returns 
            false if help is requested.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.ArgumentParserUtilsTest.ParseArgumentsPrintsHelpIfHelpIsRequested">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.ArgumentParserUtils.ParseArguments(Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase,System.String[])"/> prints 
            information about options if --help is provided as a parameter.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest">
            <summary>
            Contains tests that should be executed for all classes inheriting from
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest.AccessingHelpTextRequestedBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.HelpTextRequested"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest.AccessingAdditionalArgumentsBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.AdditionalArguments"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest.HelpLongOptionPreventsExceptions">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> with --help
            does not throw an exception even if invalid arguments are given.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ArgumentParsers.HelpSupportingArgumentParserBaseTest.HelpShortOptionPreventsExceptions">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> with -h does
            not throw an exception even if invalid arguments are given.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest">
            <summary>
            Contains tests that should be executed for all test classes for
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s and their <see cref="T:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1"/>s. 
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that the configuration has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.IsCompatibleReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the argument is not of the same
            type as the caller.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.IsTechnicallyCompatibleReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the argument is not of
            the same type as the caller.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.BuildWithFallbackThrowsForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> throws when given a wrong type
            as argument.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.CheckIncompatibility(Optano.Algorithm.Tuner.Configuration.ConfigurationBase,Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks that two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are incompatible with each other using
            <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>.
            </summary>
            <param name="config1">The first <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>.</param>
            <param name="config2">The second <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.CheckTechnicalIncompatibility(Optano.Algorithm.Tuner.Configuration.ConfigurationBase,Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks that two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are technically incompatible with each other 
            using <see cref="M:Optano.Algorithm.Tuner.Configuration.ConfigurationBase.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>.
            </summary>
            <param name="config1">The first <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>.</param>
            <param name="config2">The second <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.WrongTypeConfiguration">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/> subtype used for tests of wrong type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.WrongTypeConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible for one to be used in a continued run
            based on a run using the other.
            </summary>
            <param name="other">Configuration used for the start of tuning.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.WrongTypeConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)">
            <summary>
            Checks whether two <see cref="T:Optano.Algorithm.Tuner.Configuration.ConfigurationBase"/>s are compatible in a technical sense for one
            to be used in a continued run based on a run using the other.
            <para>The difference to <see cref="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.WrongTypeConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> is that this function only checks for technical
            compatibility and does not consider whether the combination of configurations is compatible in the sense
            that the continued run looks like a longer single run.</para>
            </summary>
            <param name="other">Configuration used for the start of run.</param>
            <returns>True iff this configuration can be used for continued run.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Configuration.ConfigurationBaseTest.WrongTypeConfiguration.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest._values">
            <summary>
            Values used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest._lowerBounds">
            <summary>
            Lower bounds used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest._upperBounds">
            <summary>
            Upper bounds used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.ConstructorThrowsForMissingLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>s constructor throws a <see cref="T:System.ArgumentNullException"/>
            if called without lower bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.ConstructorThrowsForMissingUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>s constructor throws a <see cref="T:System.ArgumentNullException"/>
            if called without upper bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.ConstructorThrowsForWrongNumberOfLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of lower bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.ConstructorThrowsForWrongNumberOfUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of upper bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.ConstructorThrowsForLowerBoundHigherUpperBound">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a lower bound greater than its respective upper
            bound.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.MapIntoBoundsWorksCorrectly">
            <summary>
            Checks that the mapping works correctly.
            </summary>
            <remarks>Expected values were computed independently from this program.</remarks>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForMissingValueSet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a set of values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForMissingLowerBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without lower bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForMissingUpperBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without upper bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForWrongNumberOfLowerBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of lower bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForWrongNumberOfUpperBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of upper bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.StandardizeValuesThrowsForLowerBoundHigherUpperBound">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a lower bound greater than its respective upper
            bound.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.MapIntoValuesUndoesStandardizeValues">
            <summary>
            Checks that executing <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.MapIntoBounds"/> on values standardized via
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint.StandardizeValues(System.Collections.Generic.IReadOnlyList{System.Double},System.Double[],System.Double[])"/> returns the original values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPointTest.CreateSearchPoint(System.Int32,MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>.
            </summary>
            <param name="dimension">The dimension the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> should have.</param>
            <param name="values">Values to base the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> on.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest._searchSpaceDimension">
            <summary>
            The search space dimension used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest._initialStepSize">
            <summary>
            The initial step size used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest._populationSize">
            <summary>
            The population size used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest._initialDistributionMean">
            <summary>
            Initial distribution mean used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.ConstructorThrowsForSinglePopulationMember">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a population size of 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.ConstructorThrowsForMissingDistributionMean">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without an initial distribution mean.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.ConstructorThrowsForStepSizeZero">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a step size of 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.PropertiesGetInitializedCorrectly">
            <summary>
            Checks that all properties get initialized correctly.
            </summary>
            <remarks>Expected values were computed independently from this program.</remarks>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.ExpectedConjugateEvolutionPathLengthIsComputedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.ComputeExpectedConjugateEvolutionPathLength"/> returns the
            expected norm of a standard normally distributed vector.
            </summary>
            <remarks>Expected value was computed independently from this program.</remarks>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfigurationTest.DistributionMeanIsImmutable">
            <summary>
            Checks that neither changes to object returned by <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration.InitialDistributionMean"/>
            nor to data the object was initalized with change subsequent return values.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._generation">
            <summary>
            Generation used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._stepSize">
            <summary>
            Step size used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._configuration">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._distributionMean">
            <summary>
            Distribution mean used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._covariances">
            <summary>
            Covariance matrix used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._diagonal">
            <summary>
            Diagonal in eigenvalue decomposition of <see cref="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._covariancesDecomposition"/>:.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._eigenvectors">
            <summary>
            Eigenvectors in eigenvalue decomposition of <see cref="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._covariances"/>:.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._evolutionPath">
            <summary>
            Evolution path used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._conjugateEvolutionPath">
            <summary>
            Conjugate evolution path used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._covariancesDecomposition">
            <summary>
            Eigenvalue decomposition of <see cref="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest._covariances"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.ConstructorThrowsForNegativeGeneration">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative generation number.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.ConstructorThrowsForNegativeStepSize">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative step size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.ConstructorThrowsForNotDiagonalizableMatrix">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/>'s constructor throws a
            <see cref="T:System.IndexOutOfRangeException"/> if called with an eigenvalue
            decomposition of a not diagonalizable matrix.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingDistributionMean">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a distribution mean.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingCovariances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without covariances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingCovariancesDecomposition">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without covariances decomposition.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingEvolutionPath">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without an evolution path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsFalseForMissingConjugateEvolutionPath">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>false</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a conjugate evolution path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.IsCompletelySpecifiedReturnsTrueForEverythingSpecified">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements.IsCompletelySpecified"/>'s returns <c>true</c> if called with a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> where everything is set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.PropertiesAreSetCorrectly">
            <summary>
            Checks that all getters of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> return what they were initialized with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.PropertiesAreSetCorrectlyForMinimumSpecification">
            <summary>
            Checks that all getters of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> return what they were initialized with, even if 
            most of that is <c>null</c>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElementsTest.ObjectIsImmutable">
            <summary>
            Checks that neither changes to data exposed by the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object nor to data the
            object was initalized with change subsequent return values.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest._terminationCriteria">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion"/>s that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest._data">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> that can be used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.ConstructorThrowsOnMissingTerminationCriteria">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no termination criteria are
            provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.ConstructorThrowsOnMissingData">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.TerminationCriteriaAreSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.TerminationCriteria"/>
            returns the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion"/>s provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.DataIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatus.Data"/>
            returns the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/>s provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsStatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._statusFilePath">
            <summary>
            Path to write the status file to.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._sorter">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._searchPointFactory">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> factory used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._runner">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/> instance used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._configuration">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._terminationCriteria">
            <summary>
            Termination criteria used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.ConstructorThrowsForMissingSearchPointSorter">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/>'s constructor without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.ConstructorThrowsForMissingSearchPointFactory">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1"/>'s constructor without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> factory throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.InitializeThrowsForMissingConfiguration">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.InitializeThrowsForMissingTerminationCriteriaSet">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> without a set of
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion"/>s throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.InitializeThrowsForEmptyTerminationCriteriaSet">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> without an empty set of
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion"/>s throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.RunnerUsesCorrectConfiguration">
            <summary>
            Checks that the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/> provided on initialization is used.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.NextGenerationThrowsIfUninitialized">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.NextGeneration"/> throws a
            <see cref="T:System.InvalidOperationException"/> if called without calling
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> before.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.CmaEsCanSolveEasyOptimizationProblem">
            <summary>
            Checks that CMA-ES can minimize the function in <see cref="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest._sorter"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.AnyTerminationCriterionMetThrowsIfUninitialized">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AnyTerminationCriterionMet"/> throws a
            <see cref="T:System.InvalidOperationException"/> if called without calling
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.Initialize(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration,System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.ITerminationCriterion})"/> before.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.AnyTerminationCriterionMetReturnsFalseForNoneMet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AnyTerminationCriterionMet"/> returns false if no criterion is met.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.AnyTerminationCriterionMetReturnsTrueForOneMet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.AnyTerminationCriterionMet"/> returns true once one of them is met.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.DumpStatusCreatesStatusFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.DumpStatus(System.String)"/> creates a status file at the correct
            place.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsTest.UseStatusDumpWorksCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEs`1.UseStatusDump(System.String)"/> uses all information from the dump.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest.IsMetThrowsForMissingCmaEsData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentNullException"/> if called without
            a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest.IsMetThrowsForMissingCovarianceMatrix">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a covariance matrix.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest.IsMetReturnsTrueForMatrixAboveMaxCondition">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a covariance matrix with condition
            number above <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.MaxCondition"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest.IsMetReturnsFalseForMatrixWithMaxCondition">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns false if called with a covariance matrix with condition
            number equal to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCov.MaxCondition"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.ConditionCovTest.CreateCmaEsData(MathNet.Numerics.LinearAlgebra.Matrix{System.Double})">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object with a certain covariance matrix.
            </summary>
            <param name="covariances">The covariance matrix to set.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest.IsMetThrowsForMissingCmaEsData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentNullException"/> if called without
            a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest.ConstructorThrowsForZeroIterations">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations"/> constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a maximum of 0 generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest.IsMetReturnsTrueForMaxIterations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with the maximum number of
            generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest.IsMetReturnsFalseForAlmostMaxIterations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterations.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns false if called with almost the maximum number
            of generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.MaxIterationsTest.CreateCmaEsData(System.Int32)">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object with a certain number of generations.
            </summary>
            <param name="currentGeneration">The number of generations to set.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetThrowsForMissingCmaEsData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentNullException"/> if called without
            a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetThrowsForMissingCovarianceMatrix">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a covariance matrix.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetThrowsForMissingConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetThrowsForMissingDistributionMean">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a distribution mean.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetReturnsTrueForTinyDiagonalElement">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a covariance matrix which has 
            a diagonal element of <see cref="F:System.Double.Epsilon"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetReturnsTrueForTinyStepSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a step size of
            <see cref="F:System.Double.Epsilon"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetReturnsFalseForSignificantShift">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns false if a significant shift happens.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.IsMetReturnsFalseForDifferentGeneration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxis.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> depends on the generation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectAxisTest.CreateCmaEsData(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.Int32,System.Double)">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object with a certain covariance matrix, current generation
            and step size.
            </summary>
            <param name="covariances">The covariance matrix to set.</param>
            <param name="currentGeneration">The generation to set.</param>
            <param name="currentStepSize">The current step size.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetThrowsForMissingCmaEsData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentNullException"/> if called without
            a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetThrowsForMissingCovarianceMatrix">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a covariance matrix.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetThrowsForMissingConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetThrowsForMissingDistributionMean">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a distribution mean.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetReturnsTrueForTinyCovariancesDiagonalElement">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a covariance matrix which has 
            a diagonal element of <see cref="F:System.Double.Epsilon"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetReturnsTrueForTinyStepSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a step size of
            <see cref="F:System.Double.Epsilon"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.IsMetReturnsFalseForSignificantShift">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoord.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns false if a significant shift happens in all coordinates.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.NoEffectCoordTest.CreateCmaEsData(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.Double)">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object with a certain covariance matrix and step size.
            </summary>
            <param name="covariances">The covariance matrix to set.</param>
            <param name="currentStepSize">The current step size.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.IsMetThrowsForMissingCmaEsData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentNullException"/> if called without
            a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.IsMetThrowsForMissingCovarianceMatrix">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a covariance matrix.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.IsMetThrowsForMissingConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called
            with a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object without a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.IsMetReturnsTrueForFactorAboveMaxConstant">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns true if called with a covariance matrix and step sizes
            s.t. the factor between them is greater than <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.MaxFactor"/> times the square root of
            the greatest eigenvalue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.IsMetReturnsFalseForFactorEqualToMaxConstant">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.IsMet(Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements)"/> returns false if called with a covariance matrix and step sizes
            s.t. the factor between them is equal to <see cref="F:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigma.MaxFactor"/> times the square root of
            the greatest eigenvalue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.CovarianceMatrixAdaptation.TerminationCriteria.TolUpSigmaTest.CreateCmaEsData(MathNet.Numerics.LinearAlgebra.Matrix{System.Double},System.Double,System.Double)">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object with a certain covariance matrix,
            initial step size and step size.
            </summary>
            <param name="covariances">The covariance matrix to set.</param>
            <param name="initialStepSize">The initial step size.</param>
            <param name="currentStepSize">The current step size.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.CmaEsElements"/> object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser"/> used in tests as a
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> to use in base class tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.LongOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> correctly interprets
            arguments given in the --longoption=value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.CorrectDefaultValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> leads to correct
            default values if only required arguments are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.TyposProvokeException">
            <summary>
            Verifies that unknown arguments, caused by e.g. typos, provoke an <see cref="T:System.AggregateException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.UnknownArgumentsCanBeIgnored">
            <summary>
            Checks that, in contrast to <see cref="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParserTest.TyposProvokeException"/>, it is possible to instantiate
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionArgumentParser"/> such that unknown arguments are collected and no error
            is thrown.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> and
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest._builder">
            <summary>
            Builder used for tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that the configuration has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.IsCompatibleReturnsFalseForDifferentBestPercentage">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the best
            percentage is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.IsCompatibleReturnsFalseForDifferentLearningRate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the learning
            rate is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.IsCompatibleReturnsTrueForChangesInInitialParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the parameters
            only change in initial values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.IsTechnicallyCompatibleReturnsTrueForDifferentParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> return true for any
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.ZeroBestPercentageThrowsError">
            <summary>
            Verifies that setting the best percentage to 0 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.Above1BestPercentageThrowsError">
            <summary>
            Verifies that setting the best percentage to a value larger than 100% results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.NegativeInitialMeanMutationFactorThrowsError">
            <summary>
            Verifies that setting the initial mean mutation factor to -0.1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.InitialMeanMutationFactorGreaterThan1ThrowsError">
            <summary>
            Verifies that setting the initial mean mutation factor to a value greater than 1 results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.NegativeInitialMeanCrossoverRateThrowsError">
            <summary>
            Verifies that setting the initial mean crossover rate to -0.1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.InitialMeanCrossoverRateGreaterThan1ThrowsError">
            <summary>
            Verifies that setting the initial mean crossover rate to a value greater than 1 results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.NegativeLearningRateThrowsError">
            <summary>
            Verifies that setting the learning rate to -0.1 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.LearningRateGreaterThan1ThrowsError">
            <summary>
            Verifies that setting the learning rate to a value greater than 1 results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.BuilderCanHandleEdgeValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1"/>'s builder does not throw for a
            percentage of population members which may be used as best members of 1, an initial mean mutation factor of
            1, an initial mean crossover rate of 0, and a learning rate of 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfigurationTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest._sortedPopulation">
            <summary>
            Population used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest._generation">
            <summary>
            The generation used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest._maxGenerations">
            <summary>
            Maximum generation number used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest._meanMutationFactor">
            <summary>
            The mean mutation factor used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest._meanCrossoverRate">
            <summary>
            The mean crossover rate used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnNegativeGeneration">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if generation number is
            negative.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnGenerationMaximumSmallerCurrentGeneration">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if maximum generation
            number is smaller than the current generation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnNegativeMeanMutationFactor">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if mean mutation factor is
            negative.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnMeanMutationFactorGreaterThan1">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if mean mutation factor is
            greater than 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnNegativeMeanCrossoverRate">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if mean crossover rate is
            negative.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorThrowsOnMeanCrossoverRateGreaterThan1">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if mean crossover rate is
            greater than 1..
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ConstructorCanHandleEdgeValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1"/>'s constructor does not throw for a
            single population member, a generation of 0, a maximum generation number of 0, and mutation factors as
            well as crossover rates of 0 and 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.SortedPopulationIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.SortedPopulation"/>
            returns the population provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.CurrentGenerationIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.CurrentGeneration"/>
            returns the generation provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.MaxGenerationsIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MaxGenerations"/>
            returns the maximum generation number provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.MeanCrossoverRateIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MeanCrossoverRate"/>
            returns the rate provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.MeanMutationFactorIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatus`1.MeanMutationFactor"/>
            returns the factor provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionStatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest">
            <summary>
            Contains tests for the <see cref="N:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._statusFilePath">
            <summary>
            Path to write the status file to.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._sorter">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._searchPointFactory">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> factory used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._initialPositions">
            <summary>
            Some valid initial positions for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._runner">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/> instance used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._configuration">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.ConstructorThrowsForMissingSearchPointSorter">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/>'s constructor without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.ConstructorThrowsForMissingSearchPointFactory">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/>'s constructor without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> factory throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1"/>'s constructor without a
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/> throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.InitializeThrowsForMissingSearchPoints">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> without a set of
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.InitializeThrowsForEmptyInitialPositions">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> with an empty set of
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.InitializeThrowsForNegativeMaxGenerations">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> with a negative number of maximum
            generations throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.NextGenerationThrowsIfUninitialized">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.NextGeneration"/> throws a
            <see cref="T:System.InvalidOperationException"/> if called without calling
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> before.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.NextGenerationReturnsSortedPopulation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.NextGeneration"/> returns the population in
            correct order.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.NextGenerationImprovesPopulation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.NextGeneration"/> does not worsen any point of
            the population.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.DifferentialEvolutionCanSolveEasyOptimizationProblem">
            <summary>
            Checks that DE can minimize the function in <see cref="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest._sorter"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.AnyTerminationCriterionMetThrowsIfUninitialized">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AnyTerminationCriterionMet"/> throws a
            <see cref="T:System.InvalidOperationException"/> if called without calling
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.Initialize(System.Collections.Generic.IEnumerable{`0},System.Int32)"/> before.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.AnyTerminationCriterionMetReturnsFalseForNoneMet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AnyTerminationCriterionMet"/> returns false if
            no criterion is met.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.AnyTerminationCriterionMetReturnsTrueForMaximumGeneration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AnyTerminationCriterionMet"/> returns true once
            the number of maximum generations is reached.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.AnyTerminationCriterionMetReturnsTrueForMaxDistMet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.AnyTerminationCriterionMet"/> returns true once
            the maximum distance to the best vector is tiny.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.DumpStatusCreatesStatusFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.DumpStatus(System.String)"/> creates a status file at the
            correct place.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionTest.UseStatusDumpWorksCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolution`1.UseStatusDump(System.String)"/> uses all information from the
            dump.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointSorterTestBase`1">
            <summary>
            Defines tests that should be implemented for each <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/>.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> handled by the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/>.
            </typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointSorterTestBase`1.Sorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointSorterTestBase`1.SortingIsConsistent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.Sort(System.Collections.Generic.IList{`0})"/> and
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.DetermineRanks(System.Collections.Generic.IList{`0})"/> are consistent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointSorterTestBase`1.SortingCanHandleDuplicates">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.Sort(System.Collections.Generic.IList{`0})"/> can handle duplicates.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointSorterTestBase`1.CheckSortingConsistence(System.Collections.Generic.IList{`0})">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.Sort(System.Collections.Generic.IList{`0})"/> and
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.DetermineRanks(System.Collections.Generic.IList{`0})"/> are consistent.
            </summary>
            <param name="points">The <typeparamref name="TSearchPoint"/>s to sort.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> which minimizes a function.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction._objectiveFunction">
            <summary>
            The function to minimize.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction.#ctor(System.Linq.Expressions.Expression{System.Func{MathNet.Numerics.LinearAlgebra.Vector{System.Double},System.Double}})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction"/> class.
            </summary>
            <param name="objectiveFunction">The function to minimize.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction.Sort(System.Collections.Generic.IList{Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint})">
            <summary>
            Sorts the points by first value in vector representation.
            </summary>
            <param name="points">The <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>s to sort.</param>
            <returns>Indices of sorted points, best points first.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction.Restore">
            <summary>
            Restores an object after deserialization by <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <remarks>For example, this method might set equality definitions in dictionaries.</remarks>
            <returns>The object in restored state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.MinimizeFunction.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointTest.ConstructorThrowsForMissingValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>'s constructor throws a <see cref="T:System.ArgumentNullException"/> if called
            without values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointTest.ValuesAreSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Values"/> returns the values provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointTest.ToStringPrintsValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.ToString"/> returns the values in format &lt;value1; value2&gt;.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ContinuousOptimization.SearchPointTest.CreateSearchPoint(System.Int32,MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>.
            </summary>
            <param name="dimension">The dimension the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> should have.</param>
            <param name="values">Values to base the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> on.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PathUtils"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest._callingDirectory">
            <summary>
            Directory name from which the current executable gets executed.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest._directoryOfExecutable">
            <summary>
            Directory where the current executable is stored.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromExecutableFolderReflectsExecutableFolder">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromExecutableFolderRelative(System.String)"/> simply returns the
            executable's directory if an empty string is provided as path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromExecutableFolderAddsRelativePathToExecutableFolder">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromExecutableFolderRelative(System.String)"/> adds relative paths to the
            executable's assembly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromExecutableFolderCanHandleDoubleDots">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromExecutableFolderRelative(System.String)"/> interprets .. in relative
            paths as directing to the parent directory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromCurrentDirectoryReflectsCallingFolder">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromCurrentDirectory(System.String)"/> simply returns the
            calling directory if an empty string is provided as path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromCurrentDirectoryAddsRelativePathToCurrentDirectoryFolder">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromCurrentDirectory(System.String)"/> adds relative paths to the
            calling assembly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.GetAbsolutePathFromCurrentDirectoryCanHandleDoubleDots">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.PathUtils.GetAbsolutePathFromCurrentDirectory(System.String)"/> interprets .. in relative
            paths as directing to the parent directory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.PathUtilsTest.TrimTrailingBackslash(System.String)">
            <summary>
            Removes the trailing backslash from path.
            </summary>
            <param name="path">The path.</param>
            <returns>The path without trailing backslash.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ProcessUtils"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.PathToTestApplication">
            <summary>
            The path to the test application, which is used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest._process">
            <summary>
            A started process. Has to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.Dispose">
            <summary>
            Disposes of <see cref="F:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest._process"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.CancelProcessCancelsProcess">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ProcessUtils.CancelProcess(System.Diagnostics.Process)"/> will cancel the process.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.CancelProcessWorksOnExitedProcess">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ProcessUtils.CancelProcess(System.Diagnostics.Process)"/> on a process that already
            exited does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.ProcessUtilsTest.CancelProcessThrowsOnDisposedProcess">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.ProcessUtils.CancelProcess(System.Diagnostics.Process)"/> on a disposed process object
            will throw an <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Randomizer"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest._numberList">
            <summary>
            Arbitrary list used in some tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.Dispose">
            <summary>
            Resets the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SecondConfigureThrowsException">
            <summary>
            Checks that a second configuration call throws an exception.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.UnconfiguredRandomizerThrowsException">
            <summary>
            Checks that calling <see cref="P:Optano.Algorithm.Tuner.Randomizer.Instance"/> on an unconfigured <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> throws 
            an <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ResetAllowsSecondConfigure">
            <summary>
            Checks that it is possible to call <see cref="M:Optano.Algorithm.Tuner.Randomizer.Configure(System.Int32)"/> several times if 
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.Reset"/> is called in-between.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SameInstanceIsReturnedEveryTime">
            <summary>
            Checks that two calls to <see cref="P:Optano.Algorithm.Tuner.Randomizer.Instance"/> return the same objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetReturnsCorrectNumberOfItems">
            <summary>
            Checks that the size of the subset returned by
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.ChooseRandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)"/> is correct.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetThrowsForNegativeCount">
            <summary>
            Checks that an exception is thrown if a subset with a negative size is requested.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetReturnsEmptyForZeroCount">
            <summary>
            Checks that an empty collection is returned if a subset with size 0 is requested.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetReturnsAllForTotalCount">
            <summary>
            Checks that the items stay the same if a subset of the same size as the set is requested.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetThrowsForCountHigherListCount">
            <summary>
            Checks that an exception is thrown if a subset larger than the set is requested.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetForThreeOfThreeDoesNotDepartFromUniformPermutationDistribution">
            <summary>
            Calls <see cref="M:Optano.Algorithm.Tuner.Randomizer.ChooseRandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)"/> many times for a three item list and checks
            that the distribution of permutations does not depart from the uniform distribution with the help of
            the Chi-Squared test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.ChooseRandomSubsetDoesNotChangeList">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Randomizer.ChooseRandomSubset``1(System.Collections.Generic.IEnumerable{``0},System.Int32)"/> does not change the input list.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SampleFromNormalDoesNotDepartFromNormalDistribution">
            <summary>
            Uses the Kolmogorov-Smirnov test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.SampleFromNormal(System.Double,System.Double)"/> produce a distribution that does not depart
            from the respective normal distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SampleFromTruncatedNormalDoesNotDepartFromNormalDistributionForNoTruncation">
            <summary>
            Uses the Kolmogorov-Smirnov test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.SampleFromTruncatedNormal(System.Double,System.Double,System.Double,System.Double)"/> with borders set to
            minimum and maximum double values produce a distribution that does not depart
            from the respective normal distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SampleFromTruncatedNormalStaysInInterval">
            <summary>
            Checks that results from <see cref="M:Optano.Algorithm.Tuner.Randomizer.SampleFromTruncatedNormal(System.Double,System.Double,System.Double,System.Double)"/>
            are contained in the interval used for the call.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SampleFromUniformDistributionDoesNotDepartFromUniformDistribution">
            <summary>
            Uses the Anderson-Darling test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.SampleFromUniformDistribution(System.Double,System.Double)"/> produce a distribution that does
            not depart from the respective uniform distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.SampleFromCauchyDistributionDoesNotDepartFromCauchyDistribution">
            <summary>
            Uses the Anderson-Darling test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Randomizer.SampleFromCauchyDistribution(System.Double,System.Double)"/> produce a distribution that does
            not depart from the respective Cauchy distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.DecideWithNegativeProbabilityThrowsError">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)"/> with a negative value throws an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.DecideWithZeroProbabilityDoesNotThrowError">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)"/> with 0 does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.DecideWithProbabilityHigherThan1ThrowsError">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)"/> with a value higher than 1 throws an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.DecideWithProbabilityOf1DoesNotThrowError">
            <summary>
            Checks that calling <see cref="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)"/> with 1 does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Core.RandomizerTest.DecideRespectsGivenProbability">
            <summary>
            Calls <see cref="M:Optano.Algorithm.Tuner.Randomizer.Decide(System.Double)"/> many times for a specific probability and verifies that the
            amount of positive decisions conforms to a distribution where positive decisions happen with the
            given probability. Departion from that distribution is detected using a Chi-Squared test.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser"/> used in tests. Must be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser"/> used in tests as a <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> to use
            in base class tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingConfigurationBuilderBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParser`1.ConfigurationBuilder"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingMaximumNumberParallelEvaluationsBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.MaximumNumberParallelEvaluations"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingPathToTrainingInstanceFolderBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.PathToTrainingInstanceFolder"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingPathToTestInstanceFolderBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.PathToTestInstanceFolder"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingPortBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.Port"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingStartFromExistingStatusBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.StartFromExistingStatus"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.AccessingStatusFileDirectoryBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.StatusFileDirectory"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.LongOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> correctly interprets arguments
            given in the --longoption=value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.ShortOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> correctly interprets arguments
            given in the -shortoption value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.DifferentialEvolutionOptionsThrowExceptionWithoutCorrectContinuousOptimizationMethod">
            <summary>
            Checks that using options defined by <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> without using
            --jade, throw <see cref="T:System.AggregateException"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.DifferentialEvolutionOptionsAreParsedWithDifferentialEvolutionOption">
            <summary>
            Checks that options defined by <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> are parsed when
            using --jade.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.CovarianceMatrixAdaptationOptionsThrowExceptionWithoutCorrectContinuousOptimizationMethod">
            <summary>
            Checks that using options defined by <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> without using
            --cmaEs, throw <see cref="T:System.AggregateException"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.CovarianceMatrixAdaptationOptionsAreParsedWithDifferentialEvolutionOption">
            <summary>
            Checks that options defined by <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> are parsed when
            using --jade.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.SettingTwoContinuousOptimizationMethodsThrowsException">
            <summary>
            Checks that setting two continuous optimization methods at the same time throws a
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.LongOptionsCompatibleWithContinueParameterAreParsedCorrectly">
            <summary>
            Checks that the configuration options that may go together with --continue are parsed correctly if given in
            their long version.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.ShortOptionsCompatibleWithContinueParameterAreParsedCorrectly">
            <summary>
            Checks that the configuration options that may go together with --continue are parsed correctly if given in
            their short version.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.DisablingStrictCompatibilityCheckEnablesAllConfigurationOptionsForContinueParameter">
            <summary>
            Checks that configuration options which change the inner workings of the algorithm do not throw an
            <see cref="T:NDesk.Options.OptionException"/> if combined with the --continue and --strictCompatibilityCheck=false
            parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.LongHelpOptionWorksOnContinue">
            <summary>
            Checks that --help option is recognized even if --continue is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.ShortHelpOptionWorksOnContinue">
            <summary>
            Checks that -h option is recognized even if --continue is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.NoMaximumNumberParallelEvaluationInfoThrowsException">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.MasterArgumentParser.ParseArguments(System.String[])"/> without providing
            information about the maximum number of parallel evaluations per node thrown an
            <see cref="T:NDesk.Options.OptionException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterArgumentParserTest.TyposProvokeException">
            <summary>
            Verifies that unknown arguments, caused by e.g. typos, provoke an <see cref="T:System.AggregateException"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.Master`3"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest._statusFilePath">
            <summary>
            Path to status file that gets written in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest._alternativeStatusFilePath">
            <summary>
            Path to alternative status file that gets written in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest._alternativeLogFilePath">
            <summary>
            Path to alternative log file that gets written in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest._pathToGgaStatusFile">
            <summary>
            Path to <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus"/> file that gets written in some tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.DummyGeneticEngineering">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.ParameterTree">
            <summary>
            Gets or sets the <see cref="P:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.ParameterTree"/> to use in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.CommandLineParametersAreTranslatedIntoConfiguration">
            <summary>
            Checks that all command line parameters provided via
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})"/>
            get translated into some kind of configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.RunDoesNotStartOnHelpParameter">
            <summary>
            Checks that a call to
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})"/>
            does not start execution if --help is provided as a parameter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.RunDoesNotStartOnInvalidParameters">
            <summary>
            Checks that a call to
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})"/>
            does not start
            execution if parameters are invalid (e.g. not all required parameters are provided).
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.OriginalConfigurationGetsOverwrittenWithNewParametersOnContinue">
            <summary>
            Checks that parameters specified alongside "--continue" are combined with the ones from the original
            configuration read from status.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.StatusFileGetsIgnoredWithoutContinueParameter">
            <summary>
            Checks that an existing status file does not get read if the --continue parameter is not set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.AkkaConfigurationIsTakenFromNewParametersOnContinue">
            <summary>
            Checks that if using --continue, Akka configuration parameters are always taken from the newly specified
            parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.InstanceFolderIsTakenFromNewParametersOnContinue">
            <summary>
            Checks that if using --continue, the instance folder parameter is always taken from the newly specified
            parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.MasterPrintsEndResultToConsole">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})"/>
            prints the best parameters to console at the end of execution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.MasterSetsCorrectLoggingLevel">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.Master`6.Run(System.String[],System.Func{Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,Optano.Algorithm.Tuner.Tuning.AlgorithmTuner{`0,`1,`2,`3,`4,`5}})"/>
            configures the logger correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.CleanupDefault">
            <summary>
            Deletes the status files if they were written.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.InitializeDefault">
            <summary>
            Initialization method called before each test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.BuildSimpleAlgorithmTuner(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String)">
            <summary>
            Builds a simple <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> instance with a single parameter
            a which is always 1.
            </summary>
            <param name="config">The configuratoin to use.</param>
            <param name="trainingInstancePath">Path to training instance folder.</param>
            <param name="testInstancePath">Path to test instance folder.</param>
            <returns>The build <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.MasterTest.WriteConfigurationToStatusFile(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String)">
            <summary>
            Writes the provided <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> into a status file stored at the provided path.
            The generation will be set to 0 and the population and run results will be empty.
            </summary>
            <param name="config">The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to write to the status file.</param>
            <param name="pathToStatusFile">Path to which the status file should be written.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser"/> used in tests. Must be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser"/> used in tests as a <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> to use
            in base class tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.AccessingPortBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.Port"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.AccessingSeedHostNameBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.SeedHostName"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> throws an
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.AccessingVerbosityLevelBeforeParsingThrowsException">
            <summary>
            Verifies that accessing <see cref="P:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.VerbosityLevel"/> before calling
            <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> thows an 
            <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.LongOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> correctly interprets arguments
            given in the --longoption=value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.ShortOptionsAreParsedCorreclty">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> correctly interprets arguments
            given in the -shortoption value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.CorrectDefaultValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> leads to correct default values if
            only required arguments are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.NoSeedHostNameEvaluationInfoThrowsException">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.DistributedExecution.WorkerArgumentParser.ParseArguments(System.String[])"/> without providing
            information about the seed host name thrown an <see cref="T:NDesk.Options.OptionException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.DistributedExecution.WorkerArgumentParserTest.TyposProvokeException">
            <summary>
            Verifies that unknown arguments, caused by e.g. typos, provoke an <see cref="T:System.AggregateException"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> implementation with a configurable
            <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> function.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder._isValidFunction">
            <summary>
            Function to call when evaluating <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder._makeValidFunction">
            <summary>
            Function to call when evaluating <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Func{Optano.Algorithm.Tuner.Genomes.Genome,System.Boolean},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder"/> class.
            </summary>
            <param name="parameterTree">The parameters' structure.
            All genes created by this builder should comply with it.</param>
            <param name="isValidFunction">The function that checks whether or not a genome is valid.</param>
            <param name="mutationRate">Probability that a certain parameter is mutated when mutating a genome.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Func{Optano.Algorithm.Tuner.Genomes.Genome,System.Boolean},System.Action{Optano.Algorithm.Tuner.Genomes.Genome},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder"/> class.
            </summary>
            <param name="parameterTree">The parameters' structure.
            All genes created by this builder should comply with it.</param>
            <param name="isValidFunction">The function that checks whether or not a genome is valid.</param>
            <param name="makeValidFunction">The function which repairs a genome.</param>
            <param name="mutationRate">Probability that a certain parameter is mutated when mutating a genome.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Decides whether the given genome is valid.
            </summary>
            <param name="genome">The genome to test.</param>
            <returns>False if the genome is invalid.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeBuilders.ConfigurableGenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Tries to make the given genome valid.
            </summary>
            <param name="genome">Genome to make valid. Will be modified.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest._generationEvaluationActorRef">
            <summary>
            Reference to the generation evaluation actor.
            Has to be initialized.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest._evaluationActorRef">
            <summary>
            An actor reference to the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> used in tests. Needs to be initialized.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest._genome">
            <summary>
            An <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> that adheres to the default parameter tree in <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder"/>.
            Needs to be initialized.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest._testInstance">
            <summary>
            A test instance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.ConstructorThrowsErrorOnMissingTargetAlgorithmFactory">
            <summary>
            Verifies that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>'s constructor throws an exception when called without
            a <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.ConstructorThrowsErrorOnMissingResultStorageActor">
            <summary>
            Verifies that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>'s constructor throws an exception when called without
            an <see cref="T:Akka.Actor.IActorRef"/> to a result storage actor.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.ConstructorThrowsErrorOnMissingAlgorithmTunerConfiguration">
            <summary>
            Verifies that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>'s constructor throws an exception when called without
            a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.ConstructorThrowsErrorOnMissingParameterTree">
            <summary>
            Verifies that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>'s constructor throws an exception when called without
            a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.PollsAreAcceptedInReadyState">
            <summary>
            Checks that sending a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Messages.Poll"/> message results in acceptance directly after creating the actor.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.CpuTimeoutLeadsToCancellations">
            <summary>
            Checks that a <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CpuTimeout"/> smaller than the target algorithm's runtime
            leads to a result with a <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/>" flag with a runtime of
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.CpuTimeout"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationsAreCancelledOnActorStop">
            <summary>
            Checks that evaluations get cancelled when the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> is stopped.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.RepetitiveEvaluationFailureThrowsException">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> throws an <see cref="T:System.AggregateException"/> if a
            certain evaluation results in failures repeatedly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.RepetitiveEvaluationFailureGetsPrintedToConsole">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> prints information to console if a certain
            evaluation results in failures repeatedly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.FlakyEvaluationGetsRepeatedWithoutException">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> keeps working without throwing an exception if
            evaluations only fail from time to time and not several times in a row.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.InstanceFailuresAreResetForNewGenome">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> doesn't sum up failures on instances when using
            different genomes, i.e. even if evaluations on a certain instance fail multiple times, the overall
            genome evaluation is still successful if they only fail once per genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.CreateEvaluationActorWithRiskyOperation(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.Int32)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> that uses a target
            algorithm factory which produces <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation"/>s.
            </summary>
            <param name="config"><see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use.</param>
            <param name="failuresInARow">The desired number of failures in a row per <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation"/>.
            </param>
            <returns>An <see cref="T:Akka.Actor.IActorRef"/> to the evaluation actor.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.CreateEvaluationActorWithLongRunningTargetAlgorithm(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.TimeSpan)">
            <summary>
            Creates an <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> that uses a target
            algorithm factory which always produces target algorithms with the specified runtime.
            </summary>
            <param name="config"><see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use.</param>
            <param name="runtime">The target algorithm's desired runtime.</param>
            <returns>An <see cref="T:Akka.Actor.IActorRef"/> to the evaluation actor.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder">
            <summary>
            Convenience class for building <see cref="T:Akka.Actor.Props"/> for creating an
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> instance.
            Specifies default constructor parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder._targetAlgorithmFactory">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder._parameterTree">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder._configuration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to provide.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder.Build(Akka.Actor.IActorRef)">
            <summary>
            Builds a <see cref="T:Akka.Actor.Props"/> object executing
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/>'s constructor using the
            configured arguments.
            </summary>
            <param name="generationEvaluationActorRef">Reference to a generation evaluation actor.</param>
            <returns>The props.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder.SetTargetAlgorithmFactory(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult})">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> to provide to
            the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> constructor.
            Default is a factory which creates the same noop target algorithm <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/>
            for all inputs.
            </summary>
            <param name="targetAlgorithmFactory">The target algorithm factory to provide to the evaluation actor
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder.SetParameterTree(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> constructor.
            Default is a simple parameter tree representing a single integer value.
            </summary>
            <param name="parameterTree">The parameter tree to provide to the evaluation actor constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder.SetConfiguration(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.EvaluationActor`3"/> constructor.
            Default is the default <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> with 1 core.
            </summary>
            <param name="configuration">The configuration to provide to the evaluation actor constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.Evaluation.EvaluationActorTest.EvaluationActorPropsBuilder"/> in its new state.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest._numberInstances">
            <summary>
            The number of instances to create for <see cref="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest._instanceList"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest._instanceList">
            <summary>
            An instance list used in multiple tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.Dispose">
            <summary>
            Resets the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.InstancesAreAllStored">
            <summary>
            Checks that all instances provided on construction are stored within the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.MinimumNumberReturnedForFirstGeneration">
            <summary>
            Checks that the number of instances returned in the first generation equals the corresponding value used
            for construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.MaximumNumberReturnedForGoalGeneration">
            <summary>
            Checks that the number of instances returned for the generation that was set as goal generation equals the
            maximum number of instances set at construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.MaximumNumberReturnedForLastGeneration">
            <summary>
            Checks that the number of instances returned for the last generation equals the corresponding value used
            for construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.InstancesAreIncreasedLinearlyUntilGoalGeneration">
            <summary>
            For an example, checks that the number of instances depends linearly on the generation in the first few
            generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.InstancesCannotBeChanged">
            <summary>
            Checks that altering the list used for construction will not change the instances in the
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/> afterwards.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.SelectThrowsErrorForNegativeGenerationNumber">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1.Select(System.Int32)"/> throws an error
            if one tries to request instances for a negative generation number.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.InstanceSelection.InstanceSelectorTest.BuildSelector(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Builds an <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/>.
            </summary>
            <param name="numInstancesAtStart">Number instances returned for first generation.</param>
            <param name="numInstancesAtEnd">Number instances returned all generations between goal generation and last
            generation.</param>
            <param name="goalGeneration">First generation for which the maximum number of instances should be returned.
            </param>
            <param name="generations">The number of generations.</param>
            <returns>The built <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.InstanceSelection.InstanceSelector`1"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest">
            <summary>
            Tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest._instances">
            <summary>
            A list of 10 test instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest._genome">
            <summary>
            A test genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.AllOpenStats">
            <summary>
            Gets or sets an instance of stats where all <see cref="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest._instances"/> are initially <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.OpenInstances"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.Test_Initialization(System.Int32,System.Int32)">
            <summary>
            Tests if the open and running instances are moved to the correct collection in <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/>' constructor.
            </summary>
            <param name="numOpen">The number of open instances to add.</param>
            <param name="numRunning">The number of running instances to add.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.PropertiesAndCollectionsAreInitializesProperly(System.Int32,System.Int32)">
            <summary>
            Checks if boolean properties and counts of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2"/> are correct.
            </summary>
            <param name="numOpen">The number of open instances to add.</param>
            <param name="numRunning">The number of running instances to add.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.RequeueOpenInstanceReturnsFalseAndDoesNotAddDuplicateToOpenInstances">
            <summary>
            Tests that requeue of open instances is not possible.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.TryStartInstanceMovesInstanceFromOpenToRunning">
            <summary>
            Tests that open instances are started properly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.TryStartInstanceWithNoOpenInstanceDoesNothing">
            <summary>
            Tests that TryStartInstance does not change the state when no open instance exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.FinishOpenInstanceReturnsFalseAndDoesNothing">
            <summary>
            Tests that open instance cannot be finished without starting it first.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.FinishInstanceMovesInstanceFromRunningToFinished">
            <summary>
            Tests if running instance is finished properly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.TotalRuntimeOfFinishedInstancesIsCorrect">
            <summary>
             Tests that the runtime of all finished instance is measured correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.UpdateCancelledByRacingMovesAllUnfinishedInstancesToCancelledByRacing">
            <summary>
            Tests that open + running instances are moved to the <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeStats`2.CancelledByRacingInstances"/> when killing the genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.GenomeStatsTest.CreateStats(System.Int32,System.Int32)">
            <summary>
            Initializes GenomeStats.
            </summary>
            <param name="numOpen">The number of initially open instances.</param>
            <param name="numRunning">The number of initially running instances.</param>
            <returns>The new genome stats.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest">
            <summary>
            Tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.TestAlleleName">
            <summary>
            The name for the test allele.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._instances">
            <summary>
            A set of test instances.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._participants">
            <summary>
            A set of tournament participants.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._globalQueue">
            <summary>
            The global priority queue.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._configuration">
            <summary>
            The test configuration.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._runEvaluator">
            <summary>
            The run evaluator.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest._defaultManager">
            <summary>
            The test mini tournament manager.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.MiniTournamentManagerIsInitializedProperly">
            <summary>
            Tests if the constructor sets all observable properties as expected.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.QueueReturnsGenomesInCorrectOrder">
            <summary>
            Tests that the dequeue returns elements in the expected order.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.PriorityInQueueIsUpdatedWhenInstancesAreStarted">
            <summary>
            Tests that priorities in queue are updated according to run evaluator's new priority.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.GenomeWithoutOpenInstancesIsRemovedFromQueue">
            <summary>
            Tests that genomes without open instances are removed from the global queue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.RacingRemovesKilledGenomesFromQueue">
            <summary>
            Tests that genomes which get killed by racing are removed from the global queue.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.RequeueAllEvaluations(Optano.Algorithm.Tuner.GenomeEvaluation.MiniTournaments.MiniTournamentManager{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult})">
            <summary>
            Initially, all genome instance evaluations are considered "running", while results are fetched from <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            For testing, this step is skipped an all evaluations need to be requeued.
            </summary>
            <param name="manager">The manager to update.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.MiniTournaments.MiniTournamentManagerTest.CreateGenomesDescendingByAge(System.Int32,System.Int32)">
            <summary>
            Creates an ordered enumerable of genomes, sorted descending by age.
            </summary>
            <param name="count">The number of genomes to create.</param>
            <param name="startAge">The age of the youngest genome.</param>
            <returns>The genomes.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.AllResultsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.AllResultsTest.ConstructorThrowsOnMissingResults">
            <summary>
            Tests that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no results are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.AllResultsTest.RunResultsAreSetCorrectly">
            <summary>
            Tests that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2.RunResults"/> contains the results provided on intialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.AllResultsTest.RunResultsAreImmutable">
            <summary>
            Tests that the collection returned by <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResults`2.RunResults"/> does not reflect any changes
            of the dictionaries provided on initialization.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.genomeInstancePair">
            <summary>
            A simple <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenomeInstancePair`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.result">
            <summary>
            A simple <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest._evaluationResult">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/> to use in tests. Needs to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.ConstructorThrowsExceptionOnMissingGenomeInstancePair">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/>'s constructor without providing a
            genome instance pair throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.ConstructorThrowsExceptionOnMissingResult">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/>'s constructor without providing a
            run result throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.GenomeInstancePairIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2.GenomeInstancePair"/> returns the same genome instance pair that was used for initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationResultTest.ResultIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2.RunResult"/> returns the same result that was used for initialization.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticTest.ConstructorThrowsExceptionOnNegativeConfigurationCount">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic"/>'s constructor with a negative configuration count
            throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticTest.ConstructorThrowsExceptionOnEvaluationCountSmallerThanConfigurationCount">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic"/>'s constructor with a total evaluation count smaller
            than the configuration count throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticTest.TotalEvaluationCountIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic.TotalEvaluationCount"/> returns the number that was provided on
            initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticTest.ConfigurationCountIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatistic.ConfigurationCount"/> returns the number that was provided on
            initialization.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest.Genome">
            <summary>
            An empty <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest._genomeResultsRequestMessage">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> to use in tests. Needs to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest.ConstructorThrowsExceptionOnMissingGenome">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/>'s constructor without providing a
            genome throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequestTest.GenomeIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest.Genome"/> returns the genome that was used for initialization.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsTest.ConstructorThrowsExceptionOnMissingGenome">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/>'s constructor without providing a
            genome throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsTest.ConstructorThrowsExceptionOnMissingResultsDictionary">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/>'s constructor without providing a
            results dictionary throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsTest.RunResultsAreSetCorrectly">
            <summary>
            Tests that <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2.RunResults"/> contains the results provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.Messages.GenomeResultsTest.RunResultsAreImmutable">
            <summary>
            Tests that the collection returned by <see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2.RunResults"/> does not reflect any changes
            to the dictionary provided on initialization.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.Genome">
            <summary>
            An empty <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.TestInstance">
            <summary>
            A simple <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.TestResultRuntime">
            <summary>
            Runtime of <see cref="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.TestResult"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.TestResult">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> with a runtime of <see cref="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.TestResultRuntime"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest._resultStorageActorRef">
            <summary>
            An actor reference to the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> used in tests. Needs to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.RunResultGetsStored">
            <summary>
            Checks that sending a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/> message containing a run result leads to that result
            being stored in the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> s.t. subsequent <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/>s
            can find it.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.RunResultGetsStoredEvenIfResultForOtherInstanceAlreadyExists">
            <summary>
            Checks that sending a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/> message containing a run result leads to that result
            being stored in the <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> even if a result for the same genome, but different
            instance is already stored.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.NewResultIsNotStoredIfOneAlreadyExists">
            <summary>
            Checks that when sending two different <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/>s containing the same genome - instance
            combination, but different run results, the second result is not stored.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.ResultRequestOnEmptyStorageProducesEmptyResultMessage">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> on empty storage results in an answering
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.ResultRequestProducesStorageMissEvenIfGenomeIsKnown">
            <summary>
            Checks that only results for observed instances are returned.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.ResultRequestReturnsCorrectResultForStoredRun">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> on a known genome - instance combination with a run
            result yields that run result as a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationResult`2"/> message.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.ResultRequestReturnsCorrectResultForReorderedAgedGenome">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> is not comparing a genome's age or the genes' order,
            but only the gene values, i.e. it will not return an empty result if there is a run result
            for a genome - instance combination with a younger genome that has a different gene order, but overall
            contains the same genes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.AllResultsRequestReturnsAllStoredResults">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.AllResultsRequest"/> on a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> returns all stored
            results.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.EvaluationStatisticRequestReturnsCorrectNumbers">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.EvaluationStatisticRequest"/> on a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> returns the correct numbers.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.GenomeResultsRequestReturnsAllStoredResultsForGenome">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> on a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> returns all 
            stored results for the provided genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.GenomeEvaluation.ResultStorage.ResultStorageActorTest.GenomeResultsRequestMayReturnEmptyCollection">
            <summary>
            Checks that a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResultsRequest"/> on a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/> may return an 
            empty collections if no results exist for the provided genome.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.DecisionParameter">
            <summary>
            Identifier of a parameter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.SmallValueParameter">
            <summary>
            Identifier of a parameter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.DiscreteParameter">
            <summary>
            Identifier of a parameter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.ContinuousParameter">
            <summary>
            Identifier of a parameter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.genomeValueComparer">
            <summary>
            An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> that only checks for gene values regardless of genome age.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.loopCountForRandomTests">
            <summary>
            The number of times each test using randomness is performed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.Dispose">
            <summary>
            Resets the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.ConstructorThrowsExceptionOnMissingParameterTree">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>'s constructor without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.ConstructorThrowsExceptionOnMissingConfiguration">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>'s constructor without a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateIsNoOperationIfMutationRateIs0">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/> does not do anything
            if the mutation rate is set to 0 and the original genome is valid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateChangesGivenGenomeIfMutationRateIs1">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/> changes the genome if the mutation rate is set to 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateRespectsMutationRate">
            <summary>
            Checks that the number of mutations that occured when calling <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/>
            roughly corresponds to the set mutation rate.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateMayChangeEveryParameter">
            <summary>
            Checks that calls to <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/> may change every part of the genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateThrowsErrorIfNoValidGenomesExist">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/> throws a <see cref="T:System.TimeoutException"/>
            if no valid genomes exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MutateRepairsInvalidGenomes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Mutate(Optano.Algorithm.Tuner.Genomes.Genome)"/> manages to repair invalid genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MakeGenomeValidRepairsInvalidGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> repairs an invalid genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MakeGenomeValidDoesNothingForValidGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> does not change valid genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.MakeGenomeValidThrowsIfNoValidGenomeExists">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.MakeGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> throws a <see cref="T:System.TimeoutException"/>
            if no valid genomes exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.ValidateGenomeReturnsFalseForWrongDomain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false
            if one gene value is outside of the correct domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.ValidateGenomeReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false
            if one gene value has the wrong type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CreateRandomGenomeCreatesValidGenome">
            <summary>
            Checks that genomes created by <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateRandomGenome(System.Int32)"/> are valid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CreateRandomGenomeThrowsErrorIfNoValidGenomesExist">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateRandomGenome(System.Int32)"/> throws a <see cref="T:System.TimeoutException"/>
            if no valid genomes exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CrossoverWithEqualValuedGenomesGeneratesSameGenome">
            <summary>
            Checks that a crossover between two genomes with the same gene values generates a child which has the same
            gene values again.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CrossoverRandomlyDecidesOnParentToTakeGeneValueFromForSingleGene">
            <summary>
            Uses the Chi-Squared test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Crossover(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> on a single gene produce children that have both
            parents' gene values with equal probability.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CrossoverRespectsSwitchProbability">
            <summary>
            Uses the Chi-Squared test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.Crossover(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> on two dependent genes produce children whose second
            gene is dependent on the 1st one as the probability it is taken from the same parent is the probability set
            in the <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.DefaultGenomeUsesDefaultValues">
            <summary>
            Checks that the <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.CreateDefaultGenome(System.Int32)"/> uses the specified domain default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CreateGenomeBuilder(System.Boolean)">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> that uses the parameter tree from
            <see cref="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.BuildParameterTree(System.Boolean)"/>.
            </summary>
            <param name="includeDefaultValues">Indicates whether to add default values to the domains.</param>
            <returns>The genome builder.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CreateGenomeBuilderWithoutRandomMutation">
            <summary>
            Creates a simple <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> that has a mutation rate of 0 and uses the parameter tree from
            <see cref="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.BuildParameterTree(System.Boolean)"/>.
            </summary>
            <returns>The genome builder.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.CreateCustomGenomeBuilder(System.Double,System.Func{Optano.Algorithm.Tuner.Genomes.Genome,System.Boolean})">
            <summary>
            Creates a genome builder with a custom <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/> function and a
            custom mutation rate.
            </summary>
            <param name="mutationRate">The mutation rate.</param>
            <param name="isValidFunction">What to check for <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/>.</param>
            <returns>The genome builder.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.BuildParameterTree(System.Boolean)">
            <summary>
            Builds the following parameter tree:
            - AND node as root
            - 1st child of AND node: OR node with string either a or b (default: "a")
            - 2nd child of AND node: value node with integer between 1 and 5 (default: 1)
            - OR node, a branch: value node with integer (default: 42).
            - OR node, b branch: value node with double between 0.1 and 0.8 (default: 0.2).
            </summary>
            <param name="includeDefaultValues">Indicates whether to add default values to the domains.</param>
            <returns>The build parameter tree.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.BuildFittingGenome">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> that fits the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> built in
            <see cref="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeBuilderTest.BuildParameterTree(System.Boolean)"/>.
            </summary>
            <returns>The built <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest">
            <summary>
            Contains tests for class <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest._genome">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> used for testing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.AgeIsSetCorrectly">
            <summary>
            Checks that setting the age by constructor is working.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.NegativeAgeThrowsException">
            <summary>
            Checks trying to set a negative age results in a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.DefaultAgeIsZero">
            <summary>
            Checks that the genome's age is 0 after parameterless construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.CopyGeneValueConstructorCopiesEverythingButAge">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>'s constructor which takes another <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> and an age copies
            everything but the age, which is set as specified.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.CopyGeneValueConstructorThrowsForNegativeAge">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>'s constructor which takes another <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> and an age
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative age.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.CopyGeneValueConstructorCreatesIndependentGenome">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>'s constructor which takes another <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> and an age
            creates an object which is independent from the provided one.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.AgingWorks">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.AgeOnce"/> increases age by 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneIsSetCorrectly">
            <summary>
            Checks setting and getting a gene.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.SetGeneOverwritesOldValue">
            <summary>
            Checks that setting a gene twice overwrites it.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GetGeneValueThrowsExceptionOnUnknownIdentifier">
            <summary>
            Checks that trying to get a nonexistant gene throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GetFilteredGenesIgnoreAndNodes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> returns correct values
            for the genes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GetFilteredGenesUsesCorrectValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> returns the correct values for all returned identifiers.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GetFilteredGenesHandlesOrNodesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>
            only adds the correct subtree of an OR node to the dictionary.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.ParameterReplacementDoesNotRemoveIfValueDoesNotMatch">
            <summary>
            Tests that dummy parameters are not removed from <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>,
            when only a replacement (without ignoring) is defined,
            and that replacement parameter/allele is not inserted if indicator value does not match.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.ParameterReplacementRemovesIgnoredParameterIfValueDoesNotMatch">
            <summary>
            Tests that dummy parameters are not removed from <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>,
            when only a replacement (without ignoring) is defined,
            and that replacement parameter/allele is not inserted if indicator value does not match.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.ParameterReplacementTriggeredIfValueMatches">
            <summary>
            Tests that dummy parameters are removed from <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/>,
            and that replacement parameter/allele is inserted if indicator value does match.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.IgnoredParametersAreRemoved">
            <summary>
            Tests that ignored parameters are removed correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.TwoMatchesCanNotBeDefined">
            <summary>
            Tests that a single indicator/value-pair can be used for one replacement definition.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.UndefinedIndicatorNameCausesException">
            <summary>
            Checks if an <see cref="T:System.ArgumentException"/> is thrown for a parameter replacement
            with a <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterReplacementDefinition.IndicatorParameterIdentifier"/> that is not a parameter
            of the current <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.AgeIsCorrectlyPrinted">
            <summary>
            Checks that age is correclty printed when using <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToString"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GenesAreCorrectlyPrinted">
            <summary>
            Checks that genes are correclty printed when using <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToString"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerIgnoresOrder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns true even if the order
            of genes is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsFalseForMissingGenes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false if one of the
            genomes is missing a gene.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsFalseForDifferentValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false if one of the
            values is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsFalseForFirstGenomeNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false if the first
            parameter is null and the second one isn't.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsFalseForSecondGenomeNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns false if the second
            parameter is null and the first one isn't.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsNullForBothGenomesNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Genomes.Genome)"/> returns true if both parameters
            are null.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsSameHashCodesForDifferentAgeAndOrder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.Genome)"/> is equal for two genes if they
            contain the same gene values, but picked them up in a different order and are of a different age.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsDifferentHashCodesForDifferentValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.Genome)"/> is different for two genomes with
            the same genes, but different gene values.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.GeneValueComparerReturnsDifferentHashCodesForMissingValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.Genome)"/> is different for two genomes with
            the same gene values where one of the genomes is missing one gene.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.TransformGeneToDoubleArrayBinary">
            <summary>
            Tests the binary encoding.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.TransformGeneToDoubleArrayOneHot">
            <summary>
            Tests the one-hot encoding.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.TransformGeneToDoubleArrayOrdinal">
            <summary>
            Tests the ordinal encoding.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.CheckToFilteredGeneString">
            <summary>
            Tests that the <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToFilteredGeneString(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> method does not print filtered gene values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.HyperionSerializerHandlesSortedDictionariesCorrectly">
            <summary>
            Checks, whether HyperionSerializer handles SortedDictionaries correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.BuildSimpleTestTreeWithAndRoot">
            <summary>
            Builds up a tree with AND node as root, a and b children of AND node, c child of a.
            </summary>
            <returns>The built tree.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.GenomeTest.BuildCategoricalDomainParameterTree">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> which consists of integer value nodes "1intDom" and "2intDom" and a
            categorical domain which is dependent on "1intDom".
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.ParameterId">
            <summary>
            The identifier of the single gene used for the test genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.parameterTree">
            <summary>
            A simple <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.geneValueComparer">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest._originalGenome">
            <summary>
            The mutable <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> used as a basis for <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>s in tests.
            Needs to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GetFilteredGenesReturnsSameForImmutableAndMutable">
            <summary>
            Checks that the output of <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> and
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.GetFilteredGenes(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> is the same directly after initialization of
            <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.ImmutableGenomeDoesNotChangeOnOriginalGenomeMutate">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> is not modified when the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> that was provided
            on initialization is changed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.CreateMutableGenomeReturnsGenomeWithOriginalGeneValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.CreateMutableGenome"/> returns a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> with same
            gene values as the one that was provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.CreateMutableGenomeReturnsGenomeWithOriginalAge">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.CreateMutableGenome"/> returns a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> with same
            age as the one that was provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.ImmutableGenomeDoesNotChangeOnChildGenomeMutate">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> is not modified when a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> that was provided
            by <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.CreateMutableGenome"/> is changed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.ToStringEqualsGenomesToString">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToString"/> returns the same as <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToString"/>
            directly after intialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.ToFilteredGeneStringEqualsGenomesToFilteredGeneString">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.ToFilteredGeneString(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> returns the same as
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Genome.ToFilteredGeneString(Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> directly after intialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerIgnoresOrder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/>
            returns true even if the order of genes is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsFalseForMissingGenes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/>
            returns false if one of the genomes is missing a gene.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsFalseForDifferentValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> returns
            false if one of the values is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsFalseForFirstGenomeNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> returns
            false if the first parameter is null and the second one isn't.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsFalseForSecondGenomeNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> returns
            false if the second parameter is null and the first one isn't.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsNullForBothGenomesNull">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.Equals(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/>
            returns true if both parameters are null.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsSameHashCodesForDifferentAgeAndOrder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> is equal for two
            genes if they contain the same gene values, but picked them up in a different order and are of a different
            age.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsDifferentHashCodesForDifferentValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> is different for
            two genomes with the same genes, but different gene values.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.GeneValueComparerReturnsDifferentHashCodesForMissingValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Genomes.ImmutableGenome.GeneValueComparer.GetHashCode(Optano.Algorithm.Tuner.Genomes.ImmutableGenome)"/> is different for
            two genomes with the same gene values where one of the genomes is missing one gene.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.ImmutableGenomeTest.BuildCategoricalDomainParameterTree">
            <summary>
            Builds a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> which consists of integer value nodes "1intDom" and "2intDom" and a
            categorical domain which is dependent on "1intDom".
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest">
            <summary>
            Contains tests for class <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._nonCompetitiveGenome">
            <summary>
            Genome that is used as a non competitive genome in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._competitiveGenome">
            <summary>
            Genome that is used as a competitive genome in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._maxAge">
            <summary>
            The maximum age of a single genome.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._populationMutantRatio">
            <summary>
            The ratio of mutants in the non-competitive population after every iteration.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._genomeBuilder">
            <summary>
            Simple genome builder for building random genomes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest._population">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> instance used for testing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CopyConstructorThrowsForMissingOriginal">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>'s copy constructor throws an
            <see cref="T:System.ArgumentNullException"/> when no original is provided to copy from.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CopyConstructorCopiesPopulationParts">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>'s copy constructor copies both population parts.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CopyConstructorMakesDeepCopy">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>'s copy constructor makes an actual copy that is not influenced
            by changes to the original.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.NonCompetitiveGenomeIsReturnedOnNonCompetitiveRequest">
            <summary>
            Tests that a genome that is added as non competitive is returned when calling
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.GetNonCompetitiveMates"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CompetitiveGenomeIsNotReturnedOnNonCompetitiveRequest">
            <summary>
            Tests that a genome that is added as competitive is not returned when calling
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.GetNonCompetitiveMates"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CompetitiveGenomeIsReturnedOnCompetitiveRequest">
            <summary>
            Tests that a genome that is added as competitive is returned when calling
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.GetCompetitiveIndividuals"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.NonCompetitiveGenomeIsNotReturnedOnCompetitiveRequest">
            <summary>
            Tests that a genome that is added as non competitive is not returned when calling
            <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.GetCompetitiveIndividuals"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.AgingIncreasesAge">
            <summary>
            Tests that aging increments the age of all genomes in population.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.AgingRemovesDyingGenomesFromNonCompetitivePopulation">
            <summary>
            Tests that genomes with maximum age are removed from the non competitive part of the population after
            aging. 
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.AgingRemovesDyingGenomesFromCompetitivePopulation">
            <summary>
            Tests that genomes with maximum age are removed from the competitive part of the population after aging.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.IsEmptyReturnsTrueIfPopulationEmpty">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.IsEmpty"/> returns false if the population is empty.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.IsEmptyReturnsFalseIfCompetitiveGenomeExists">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.IsEmpty"/> returns false if the population contains a competitive genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.IsEmptyReturnsFalseIfNonCompetitiveGenomeExists">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Genomes.Population.IsEmpty"/> returns false if the population contains a non-competitive
            genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CorrectNumberOfIndividualsGetReplaced">
            <summary>
            Check that the correct number of individuals get replaced on replacement.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.AgeDistributionDoesNotChangeOnReplacement">
            <summary>
            Check that age distribution stays the same before and after replacement.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.PopulationTest.CreatePopulation(System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a population with the given configuration.
            </summary>
            <param name="populationSize">The population's size.</param>
            <param name="maxAge">Maximum age of a genome.</param>
            <param name="populationMutantRatio">The ratio of non competitive genomes to replace each population.
            </param>
            <returns>The population.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Genomes.Values.AlleleTest">
            <summary>
            Contains tests for class <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Genomes.Values.AlleleTest.ValueIsStoredCorrectly">
            <summary>
            Checks that the value set in the constructor is also returned by <see cref="M:Optano.Algorithm.Tuner.Genomes.Values.Allele`1.GetValue"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Logging.LoggingHelper"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.LogFile">
            <summary>
            File in which <see cref="T:Optano.Algorithm.Tuner.Logging.LoggingHelper"/> will write into.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.TestChangeConsoleLoggingLevelToWarn">
            <summary>
            Checks that after calling <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)"/> with
            <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Warn"/>, only logs of type <see cref="F:NLog.LogLevel.Warn"/> are 
            written to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.TestChangeConsoleLoggingLevelToInfo">
            <summary>
            Checks that after calling <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)"/> with
            <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Info"/>, only logs of type <see cref="F:NLog.LogLevel.Warn"/>  or
            <see cref="F:NLog.LogLevel.Info"/> are written to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.TestChangeConsoleLoggingLevelToDebug">
            <summary>
            Checks that after calling <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)"/> with
            <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Debug"/>, only logs of type <see cref="F:NLog.LogLevel.Warn"/>,
            <see cref="F:NLog.LogLevel.Info"/> or <see cref="F:NLog.LogLevel.Debug"/> are written to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.TestChangeConsoleLoggingLevelToTrace">
            <summary>
            Checks that after calling <see cref="M:Optano.Algorithm.Tuner.Logging.LoggingHelper.ChangeConsoleLoggingLevel(Optano.Algorithm.Tuner.Logging.VerbosityLevel)"/> with
            <see cref="F:Optano.Algorithm.Tuner.Logging.VerbosityLevel.Trace"/>, logs of type <see cref="F:NLog.LogLevel.Warn"/>,
            <see cref="F:NLog.LogLevel.Info"/>, <see cref="F:NLog.LogLevel.Debug"/> and <see cref="F:NLog.LogLevel.Trace"/>
            are written to console.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.WriteLinesForAllLogLevels">
            <summary>
            Writes an empty line for every <see cref="T:Optano.Algorithm.Tuner.Logging.VerbosityLevel"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Logging.LoggingHelperTest.CheckLinesForAllLogLevels(System.String,System.Collections.Generic.IList{NLog.LogLevel})">
            <summary>
            Checks that the provided lines contain exactly the provided levels.
            </summary>
            <param name="lines">Lines to check.</param>
            <param name="expectedLevels">Expected log levels.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopsizeHalf">
            <summary>
            Half of the population size.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.CurrentTree">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.CurrentConfig">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.TrainingData">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.EngineeringInstance">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationCompetitive">
            <summary>
            Gets or sets the competitive part of the population.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationNonCompetitive">
            <summary>
            Gets or sets the non competitive part of the population.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationCurrentComplete">
            <summary>
            Gets or sets the total population.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.ConstructorThrowsForMissingRandomForestConfiguration">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/>'s constructor
            throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"/> if no configuration with identifier
            <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.RegressionForestArgumentParser.Identifier"/> exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.ConstructorThrowsForWrongTypeRandomForestConfiguration">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/>'s constructor
            throws a <see cref="T:System.InvalidCastException"/> if no <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.InitializeAndTrain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering.TrainForest(Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper)"/> works successfully if
            <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.InitializeAndPopulateProperties(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)"/> is called beforehand.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.EngineerValidGenomes">
            <summary>
            Checks that engineered genomes
            * are created in the correct quantity,
            * are marked as being 'engineered',
            * have valid values, and
            * are of better fitness than their parents.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.InitializeAndPopulateProperties(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            I don't know a good way to use 'TestInitialize' flag with test-specific parameters.
            </summary>
            <param name="tree">The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to use.</param>
            <param name="config">The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.InitializeTrainingDataAndCurrentPopulation">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.TrainingData"/> and <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationNonCompetitive"/>, <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationCompetitive"/> as well as <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.PopulationCurrentComplete"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.GetDefaultTrainingData(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Generates training data.
            </summary>
            <param name="tree"><see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to base genomes on.</param>
            <returns>The generated <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GeneticEngineeringTest.ValidateGenomeValues(Optano.Algorithm.Tuner.Genomes.Genome)">
            <summary>
            Checks if all <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> in the given <paramref name="genome"/> contain valid values.
            Assert.Fail() if genome contains an invalid value.
            </summary>
            <param name="genome">The <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to validate.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest">
            <summary>
            Tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest._categoricalDomain">
            <summary>
            A categorical domain with 10 discrete values.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest._tree">
            <summary>
            A parameter tree with a continuous domain (name: "continuous") and a categorical domain (name: "test").
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest"/> class.
            Serves as test initialize method.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.Dispose">
            <summary>
            Serves as test teardown method.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.BinaryEncodingComputesCorrectNumberOfGeneratedColumns">
            <summary>
            Tests that binary encoding reports the correct number of generated columns.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.OneHotEncodingReturnsCorrectNumberOfGeneratedColumns">
            <summary>
            Tests that one hot encoding reports the correct number of generated columns.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.OrdinalEncodingReturnsCorrectNumberOfGeneratedColumns">
            <summary>
            Tests that ordinal encoding reports the correct number of generated columns.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.EncodedValuesAreDecodedCorrectly(System.Type)">
            <summary>
            Tests that encodings are decoded correctly.
            </summary>
            <param name="encodingType">The categorical encoding to test.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.GenomeTransformationComputesCorrectFeatureLengths(System.Type,System.Int32[])">
            <summary>
            Tests that the genome transformation reports the correct feature lengths.
            </summary>
            <param name="encodingType">The typed GenomeTransformation.</param>
            <param name="expectedLengths">The expected feature lengths.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.GenomeTransformationTest.GenomeTransformationEncodesAndDecodesCorrectly(System.Type,System.Double[])">
            <summary>
            Tests that GenomeTransformation encodes and decodes genomes correctly.
            </summary>
            <param name="genomeTransformationType">The typed GenomeTransformation.</param>
            <param name="expectedConversion">The expected double representation.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig"/> and
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest._builder">
            <summary>
            Builder used for tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that the configuration has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentMaximumTreeDepth">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum
            tree depth is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentFeaturesPerSplitRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the features per
            split ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentMinimumInformationGain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the minimum
            information gain is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentMinimumSplitSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the minimum
            split size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentRunParallelFlag">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the run
            parallel flag is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentSubSampleRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the sub
            sample ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsFalseForDifferentTreeCount">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the tree
            count is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsCompatibleReturnsTrueForSameParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the parameters
            are the same.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentMaximumTreeDepth">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the maximum
            tree depth is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentFeaturesPerSplitRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the features per
            split ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentMinimumInformationGain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the minimum
            information gain is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentMinimumSplitSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the minimum
            split size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentRunParallelFlag">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the run
            parallel flag is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentSubSampleRatio">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the sub
            sample ratio is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsFalseForDifferentTreeCount">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the tree
            count is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.IsTechnicallyCompatibleReturnsTrueForSameParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the parameters
            are the same.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.MaximumTreeDepthOfZeroThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with a maximum tree depth of 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.ZeroFeaturesPerSplitRatioThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with features per split ratio set
            to 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.Above1FeaturesPerSplitRatioThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with a features per split ratio
            above 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.ZeroSubSampleRatioThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with a sub sample ratio of 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.Above1SubSampleRatioThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with a sub sample ratio
            above 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.NegativeTreeCountThrows">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfig.GenomePredictionRandomForestConfigBuilder.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if called on a builder with negative tree count.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.Configuration.GenomePredictionRandomForestConfigTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearnerTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearner`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearnerTest.ConstructorThrowsForNegativeFeaturesPerSplit">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestOutOfBox.StandardRandomForestLearnerTest"/>s throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative value for features per split.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForestTests">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForestTests.ConstructorThrowsForNegativeFeaturesPerSplit">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/>s throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative value for features per split.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForestTests.TestMatrixShouldNotBeNull">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> throws a
            <see cref="T:System.NullReferenceException"/> if learning is called without any observations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForestTests.TestImpurityCalculator">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator"/> works correctly.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests">
            <summary>
            Tests for the GGA++ split criterion.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TargetArrayIsSortedByReference">
            <summary>
            Checks if SharpLearning sorts the arrays from its function arguments "in place" via references.
            This is a requirement for <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.ITopPerformerFocusImpurityCalculator"/> to work correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.GetFeatureMatrix">
            <summary>
            Generates a 10 x 10 matrix filled with the numbers 0 .. 99.
            </summary>
            <returns>A matrix.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher">
            <summary>
            Works like a <see cref="T:SharpLearning.DecisionTrees.SplitSearchers.LinearSplitSearcher`1"/>.
            Validates that <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator.CurrentTargets"/> always matches the <c>targets</c> parameter from the <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher.FindBestSplit(Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator,System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher._splitSearcher">
            <summary>
            The linear split searcher.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher._callCount">
            <summary>
             The call count.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher"/> class.
            </summary>
            <param name="minSplitSize">The minimum split size.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher.FindBestSplit(Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator,System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestSplitSearcher.CheckIfTargetsDoMatch(Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator,System.Double[])">
            <summary>
            Checks if <see cref="P:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator.CurrentTargets"/> is equal to <paramref name="targets"/>.
            </summary>
            <param name="impurityCalculator">The test impurity calculator.</param>
            <param name="targets">The targets parameter from <see cref="M:SharpLearning.DecisionTrees.SplitSearchers.ISplitSearcher`1.FindBestSplit(`0,System.Double[],System.Double[],SharpLearning.Containers.Views.Interval1D,System.Double)"/>.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator">
            <summary>
            Provides access to private <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Targets"/> array.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.RandomForest.TopPerformerFocusTests.TestImpurityCalculator.CurrentTargets">
            <summary>
            Gets the current <see cref="P:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.TopPerformerFocusImpurityCalculator.Targets"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest">
            <summary>
            The target leaf computation test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.AllLeaves">
            <summary>
            Gets or sets the all leaves.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.Tree">
            <summary>
            Gets or sets the tree.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.Dispose">
            <summary>
            The cleanup.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.AllTargetLeavesAreFound">
            <summary>
            Tests that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation"/> returns all 4 reachable leaves.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.AllTargetLeavesAreFoundVersionB">
            <summary>
            Tests that <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TargetLeafSampling.TargetLeafComputation"/> returns all 4 reachable leaves.
            Uses different parents than <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.AllTargetLeavesAreFound"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeaves">
            <summary>
            Tests that not all leaves are reachable when a feature is duplicated.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeavesVersionB">
            <summary>
            Tests that not all leaves are reachable when a feature is duplicated.
            Uses different parents than <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeaves"/> and <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeavesVersionC"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeavesVersionC">
            <summary>
            Tests that not all leaves are reachable when a feature is duplicated.
            Uses different parents than <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeaves"/> and <see cref="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.DuplicateFeatureReducesReachableLeavesVersionB"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.UnbalancedTreeIsHandledCorrectly">
            <summary>
            Tests that fixations and reachable leaves can be computed on unbalanced trees.
            Parents can reach all leaves.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.UnbalancedTreeWithDuplicateFeature">
            <summary>
            Tests that only the first leaf is returned for duplicate feature 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.CreateTree">
            <summary>
            Creates a binary tree with 4 leaves.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TargetLeafSampling.TargetLeafComputationTest.CreateUnbalancedTree">
            <summary>
            Creates an unbalanced tree with 3 leaves.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils">
            <summary>
            Useful methods for testing data objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils.GenerateGenomes(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.Int32)">
            <summary>
            Generates <paramref name="count"/> random genomes adhering to the given <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <param name="tree"><see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to base genomes on.</param>
            <param name="config"><see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use when creating genomes.</param>
            <param name="count">The number of genomes to create.</param>
            <returns>The created genomes.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils.GenerateTrainingData(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.MachineLearning.GenomeRepresentation.IBulkGenomeTransformation,System.Int32,System.Int32,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Simulates a tuner run for the specified number of generations and stores results in a new <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>.
            </summary>
            <param name="tree"><see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to base genomes on.</param>
            <param name="encoder">Strategy to convert genomes to double arrays.</param>
            <param name="genomeCount">Number of genomes to add to result per generation.</param>
            <param name="generations">Number of generations to simulate.</param>
            <param name="config"><see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>, required to generate new genomes.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.TrainingDataWrapper"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils.EvaluateTargetFunction(Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation,System.Collections.Generic.List{Optano.Algorithm.Tuner.Genomes.Genome})">
            <summary>
            Evaluates target function given by <see cref="T:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils"/> on every genome provided.
            </summary>
            <param name="encoder">Encoder to convert genomes to double arrays.</param>
            <param name="genomes">Genomes to evaluate.</param>
            <returns>Results for every genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils.EvaluateTargetFunction(System.Double[])">
            <summary>
            Evaluates x[0] ^ 3 - 3 * x[0] + x[1] ^ 2 + \sum_{i=2}{(-1) ^ i * x[i]} on the provided variables.
            </summary>
            <param name="genomeEncoding">The variables to evaluate the function on.</param>
            <returns>The value obtained by evaluation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.MachineLearning.TestDataUtils.EvaluateSingleIndex(System.Double,System.Int32)">
            <summary>
            Evaluates a single index of x[0] ^ 3 - 3 * x[0] + x[1] ^ 2 + \sum_{i=2}{(-1) ^ i * x[i]}.
            </summary>
            <param name="parameterValue">The x value.</param>
            <param name="index">The index.</param>
            <returns>The value obtained by evaluating the single index.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.categories">
            <summary>
            Category values used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.triesForRandomTests">
            <summary>
            The number of iterations in tests that test random methods.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.dummyVariancePercentage">
            <summary>
            The variance percentage value needed for <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/>.
            Categorical domains don't use it.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest._categoricalDomain">
            <summary>
            Categorical domain. Will be initialized each time with <see cref="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.categories"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.PossibleValuesAreCorrectlySet">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.PossibleValues"/> contains the values provided at construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.PossibleValuesAreIndependentFromProvidedList">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.PossibleValues"/> are persistent even if the collection used
            for construction is modified.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.RandomGenerationStaysInDomain">
            <summary>
            Checks that randomly generated values are contained in domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.RandomGenerationSpansWholeDomain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.GenerateRandomValue"/> may hit all values of the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.ContainsGeneValueReturnsTrueForIncludedValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns true for a value that is one of the categories.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.ContainsGeneValueReturnsFalseForInvalidValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns false if called with a gene
            value that is not contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.ContainsGeneValueReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns false if called with a type
            that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.ContainsGeneValueReturnsTrueForSubtype">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns true
            if a subtype with correct value is given as parameter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.MutateGeneValueThrowsExceptionForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentException"/> if called with a type that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.MutateGeneValueThrowsExceptionForInvalidValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentException"/> if called with a gene value that is not contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.ToStringShowsAllCategories">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.ToString"/> returns a string of the form
            {category1, category2, ..., categoryn}.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.CategoricalDomainTest.MutateDoesNotDepartFromUniformDistribution">
            <summary>
            Uses the Chi-Squared test to verify that many calls of <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1.Mutate(`0,System.Double)"/>
            produce a distribution that does not depart from the uniform distribution.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain"/>. 
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.TriesForRandomTests">
            <summary>
            The number of iterations in tests that test random methods.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.minimum">
            <summary>
            Minimum value used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.maximum">
            <summary>
            Maximum value used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest._continuousDomain">
            <summary>
            Continuous domain. Has to be initialized for each test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.MinAndMaxCorrectlySet">
            <summary>
            Test minimum and maximum value properties.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.TestDefaultMinimumIsMinimumDouble">
            <summary>
            Checks that the default minimum value is <see cref="F:System.Double.MinValue"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.TestDefaultMaximumIsMaximumDouble">
            <summary>
            Checks that the default maximum value is <see cref="F:System.Double.MaxValue"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.RandomGenerationStaysInDomain">
            <summary>
            Checks that randomly generated values are contained in domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.GenerateRandomGeneValueDoesNotDepartFromUniformDistribution">
            <summary>
            Uses the Anderson-Darling test to verify that many calls of
            <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain.GenerateRandomValue"/> produce a distribution that does not depart from the
            uniform distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.ToStringShowsMinimumAndMaximum">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.ToString"/> prints out the expected string
            containing the correct minimum and maximum values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.MutationDistributionDoesNotDepartFromNormalDistribution">
            <summary>
            Uses the Kolmogorov-Smirnov test to verify that the results of
            <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)"/> produce a distribution that does not depart
            from the respective normal distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.MutationStaysInDomain">
            <summary>
            Checks that results of <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.DomainBase`1.Mutate(`0,System.Double)"/> are contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.CreateNumericalDomain(System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.ContinuousDomain"/>.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <returns>The created domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.ContinuousDomainTest.WrapInAlleleWithCorrectType(System.Int32)">
            <summary>
            Wraps the given value into an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </summary>
            <param name="value">The value to wrap.</param>
            <returns>An <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> containing the value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest">
            <summary>
            Defines tests that should be implemented for each <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.Dispose">
            <summary>
            Resets the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.MutateGeneValueThrowsExceptionForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentException"/> if called with a type that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.MutateGeneValueThrowsExceptionForInvalidValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentException"/> if called with a gene value that is not contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.DomainBaseTest.ContainsGeneValueReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns false if called with a type
            that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.triesForRandomTests">
            <summary>
            The number of iterations in tests that test random methods.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.minimum">
            <summary>
            Minimum value used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.maximum">
            <summary>
            Maximum value used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest._integerDomain">
            <summary>
            Integer domain. Has to be initialized for each test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.MinAndMaxCorrectlySet">
            <summary>
            Test minimum and maximum value properties.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.TestDefaultMinimumIsMinimumInteger">
            <summary>
            Checks that the default minimum value is <see cref="F:System.Int32.MinValue"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.TestDefaultMaximumIsMaximumInteger">
            <summary>
            Checks that the default maximum value is <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.RandomGenerationCreatesLegalGenes">
            <summary>
            Checks that the random generator always returns a valid value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.GenerateRandomGeneValueDoesNotDepartFromUniformDistribution">
            <summary>
            Uses the Chi-Squared test to verify that many calls of <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.GenerateRandomValue"/>
            produce a distribution that does not depart from the uniform distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.ToStringShowsMinimumAndMaximum">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain.ToString"/> prints out the expected string
            containing the correct minimum and maximum values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.MutationDistributionMeanAndStandardDeviationAreRoughlyAsExpected">
            <summary>
            Checks that the distribution created by multiple calls to
            <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> has the original value as mean
            and the specified variance / standard deviation.
            </summary>
            <remarks>This is only a rough test up to 10 percent.</remarks>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.CreateNumericalDomain(System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IntegerDomain"/>.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <returns>The created domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.IntegerDomainTest.WrapInAlleleWithCorrectType(System.Int32)">
            <summary>
            Wraps the given value into an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </summary>
            <param name="value">The value to wrap.</param>
            <returns>An <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> containing the value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.minimum">
            <summary>
            A minimum domain value used by several tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.maximum">
            <summary>
            A maximum domain value used by several tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.MinAndMaxCorrectlySet">
            <summary>
            Verifies that the minimum and maximum values specified on construction really get returned on
            <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Minimum"/> and <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Maximum"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.MinimumZeroThrowsException">
            <summary>
            Checks that setting the minimum to 0 results in an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.GenerateRandomGeneValueDoesNotDepartFromUniformDistributionInLogSpace">
            <summary>
            Uses the Anderson-Darling test to check that the distribution generated by the repeated translation of
            calls to <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.GenerateRandomGeneValue"/> to log space does not depart from a uniform
            distribution.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.ToStringShowsMinimumAndMaximum">
            <summary>
            Tests that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain.ToString"/> prints out the expected string
            containing the correct minimum and maximum values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.MutationDistributionDoesNotDepartFromNormalDistributionInLogSpace">
            <summary>
            Uses the Kolmogorov-Smirnov test to check that the distribution generated by the repeated translation of
            calls to <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> to log space does not depart from a 
            normal distribution with fitting parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.MutationStaysInDomain">
            <summary>
            Checks that results of <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1.Mutate(`0,System.Double)"/> are contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.CreateNumericalDomain(System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.LogDomain"/>.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <returns>The created domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.LogDomainTest.WrapInAlleleWithCorrectType(System.Int32)">
            <summary>
            Wraps the given value into an <see cref="T:System.Double"/> <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.Allele`1"/>.
            </summary>
            <param name="value">The value to wrap.</param>
            <returns>An <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> containing the value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.minimum">
            <summary>
            A minimum value often used in tests. Valid for all subtypes of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.maximum">
            <summary>
            A maximum value often used in tests. Valid for all subtypes of <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.irrelevantVariance">
            <summary>
            The variance percentage value needed for <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/>.
            Use this field if the variance is irrelevant for the test.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest._domain">
            <summary>
            The default <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.NumericalDomain`1"/> to use in tests. Has to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ToStringShowsMinimumAndMaximum">
            <summary>
            Tests that the ToString method prints out the expected string
            containing the correct minimum and maximum values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.MinAndMaxCorrectlySet">
            <summary>
            Test minimum and maximum value properties.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.EmptyDomainThrowsException">
            <summary>
            Test that setting a higher minimum than maximum throws an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.DomainSizeIsCorrect">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.DomainSize"/> correctly returns the domain's magnitude.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.MutateGeneValueThrowsExceptionForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentException"/> if called with a type that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.MutateGeneValueThrowsExceptionForInvalidValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a gene value that is not contained in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.MutateGeneValueThrowsExceptionForZeroVariancePercentage">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> throws an
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a variance percentage of 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.MutateGeneValueDoesNotThrowForVariancePercentage100">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.MutateGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele,System.Double)"/> does not throw an
            error if called with a variance percentage of 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ContainsGeneValueReturnsFalseForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns false if called with a type
            that is not a subtype of the domain objects' type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ContainsGeneValueReturnsTrueForMinimum">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns true for minimum value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ContainsGeneValueReturnsTrueForMaximum">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns true for maximum value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ContainsGeneValueReturnsFalseForLowerValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> returns false for too low values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.ContainsGeneValueReturnsFalseForHigherValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.Domains.IDomain.ContainsGeneValue(Optano.Algorithm.Tuner.Genomes.Values.IAllele)"/> return false for too high values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.CreateNumericalDomain(System.Int32,System.Int32)">
            <summary>
            Creates a numerical domain of the type that is being tested.
            </summary>
            <param name="minimum">The minimum value.</param>
            <param name="maximum">The maximum value.</param>
            <returns>The created domain.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.Domains.NumericalDomainTest.WrapInAlleleWithCorrectType(System.Int32)">
            <summary>
            Wraps the given value into an <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> in a way that
            the type being tested can handle.
            </summary>
            <param name="value">The value to wrap.</param>
            <returns>An <see cref="T:Optano.Algorithm.Tuner.Genomes.Values.IAllele"/> containing the value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.GenomeTransformation">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.CurrentTree">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.Genomes">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to use in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.OrdinalTestFeatureLength">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.GetFeatureLengths"/> returns 1 for a
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding"/> with 7 possible values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.BinaryTestFeatureLength">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.GetFeatureLengths"/> returns 3 for a
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding"/> with 7 possible values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.OneHotTestFeatureLength">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.IGenomeTransformation.GetFeatureLengths"/> returns 7 for a
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOneHotEncoding"/> with 7 possible values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.OrdinalConvertAndRestore">
            <summary>
            Validates convert methods for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOrdinalEncoding"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.BinaryConvertAndRestore">
            <summary>
            Validates convert methods for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalBinaryEncoding"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.OneHotConvertAndRestore">
            <summary>
            Validates convert methods for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.CategoricalOneHotEncoding"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.InitializeTypedTransformation``1(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Initializes a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/>.
            </summary>
            <typeparam name="TEncoding">Type of the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.GenomeTransformation`1"/>.</typeparam>
            <param name="tree">Specification of target algorithm parameters.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.InitializeSingleCategoryOneGenomePerValue``1(System.Int32)">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.Genomes"/> creating one <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> per value of a
            <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>, where the domain consists of <paramref name="categoricalValueCount"/>
            strings.
            </summary>
            <typeparam name="TEncoding">Encoding of domain.</typeparam>
            <param name="categoricalValueCount">Number of categorical values to use.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.SingleCategoryTree``1(Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> consisting of a single node with categorical domain.
            </summary>
            <typeparam name="T">Type of the categorical domain.</typeparam>
            <param name="domain">The categorical domain.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.GetTestDomain(System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/> consisting of <paramref name="members"/> strings of the form
            "CategoricalValue_{number}". Iteration starts at 1.
            </summary>
            <param name="members">Number of categories.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain`1"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.ValidateGenomeConversion">
            <summary>
            Checks that for each <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> in <see cref="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.Genomes"/>, two convertings using
            <see cref="P:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.GenomeTransformationTest.GenomeTransformation"/> result in the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> one started with.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.TolerantGenomeTransformationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterConverters.TolerantGenomeTransformationTest.RoundToValidValuesWorks">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterConverters.TolerantGenomeTransformation.RoundToValidValues(System.Double[])"/> acts correctly for different
            <see cref="T:Optano.Algorithm.Tuner.Parameters.Domains.IDomain"/>s.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.AndNodeTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.AndNodeTest.ConstructorThrowsOnMissingChildren">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode"/>'s constructor with the children parameter set to null throws an
            <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.AndNodeTest.ChildrenAreReturnedCorrectly">
            <summary>
            Checks that added children are returned correctly when using <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.Children"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.AndNodeTest.ChildrenProvidedOnConstructionAreAdded">
            <summary>
            Checks that the children provided on construction are a subset of the ones returned by
            <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.AndNode.Children"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.AndNodeTest.CreateNode(System.String)">
            <summary>
            Creates a simple node with the given identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>The created node.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.Domain">
            <summary>
            Domain used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest._decisionNode">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/> used in tests. Needs to be initialized. 
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ConstructorThrowsForNonStringReferenceType">
            <summary>
            Verifies that calling <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>'s constructor with a reference type which is not string 
            results in an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ConstructorDoesNotThrowErrorForString">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>'s constructor with the type 'string' does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ConstructorDoesNotThrowErrorForStruct">
            <summary>
            Checks that calling <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>'s constructor with a type parameter of type struct does not
            throw an exception.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ChildrenAreReturnedCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.Children"/> correctly returns all added children.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.OnlyOneChildPerValue">
            <summary>
            Checks that an exception is thrown when several nodes are added for the same value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ValueSpecifiedForChildBranchMustExist">
            <summary>
            Checks that an exception is thrown when a node is added for a value not in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.GetChildThrowsForWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)"/> throws an exception
            when a child is queried using a type different from the domain's type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.GetChildThrowsForUnknownValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)"/> throws an exception
            when a child is queried for a value not in the domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.GetChildWorksForLegalValueWithoutChild">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)"/> returns false if the child is queried for a value
            in the domain that does not have a child assigned. The out parameter should be set to null.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.GetChildWorksIfChildExists">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1.TryGetChild(System.Object,Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.IParameterTreeNode@)"/> sets the correct child if one exists and returns true.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.ConstructNode``1(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Constructs an <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.OrNode`1"/>.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
            <param name="identifier">The identifier.</param>
            <param name="domain">The parameter's domain.</param>
            <returns>The constructed node.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.OrNodeTest.CreateNode(System.String)">
            <summary>
            Creates a simple node with the given identifier.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>The created node.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ParameterNodeTest">
            <summary>
            Contains tests for class <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ParameterNodeTest.Identifier">
            <summary>
            Identifier used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ParameterNodeTest.IdentifierIsCorrectlySet">
            <summary>
            Checks that identifier is correctly set after construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ParameterNodeTest.ToStringReturnsIdentifier">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1.ToString"/> returns its identifier.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ParameterNodeTest.ConstructNode``1(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Constructs a node of the subclass of <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ParameterNodeBase`1"/> that one wants to test.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
            <param name="identifier">The parameter's identifier.</param>
            <param name="domain">The parameter's domain.</param>
            <returns>The constructed node.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest._valueNode">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1"/> used in tests. 
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest.NoChildResultsInEmptyCollection">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.Children"/> returns an empty collection if no child is set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest.ChildIsReturnedCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1.Children"/> returns the single child that was set if one was set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest.AddingChildTwiceDoesOverwrite">
            <summary>
            Checks that adding a child for the second time replaces the old child.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeNodes.ValueNodeTest.ConstructNode``1(System.String,Optano.Algorithm.Tuner.Parameters.Domains.CategoricalDomain{``0})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTreeNodes.ValueNode`1"/>.
            </summary>
            <typeparam name="T">The parameter's type.</typeparam>
            <param name="identifier">The identifier.</param>
            <param name="domain">The parameter's domain.</param>
            <returns>The created node.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.RootIsSetCorrectly">
            <summary>
            Checks that the root set while constructing the tree is also returned by <see cref="P:Optano.Algorithm.Tuner.Parameters.ParameterTree.Root"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.IdentifiesAreUniqueReturnsFalseForDuplicateIdentifiers">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.IdentifiersAreUnique"/> returns false if duplicate identifiers exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.IdentifiersAreUniqueReturnsTrueForUniqueIdentifiers">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.IdentifiersAreUnique"/> returns true if all identifiers are unique.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.ContainsParametersReturnsFalseForTreeConsistingOfAndNodes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.ContainsParameters"/> returns false
            if the tree only consists of AND nodes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.ContainsParametersReturnsTrueForTreeContainingParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.ContainsParameters"/> returns true if the tree contains a parameter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.TestFindActiveIdentifiers">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Parameters.ParameterTree.FindActiveIdentifiers(System.Collections.Immutable.ImmutableDictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})"/>
            only adds the correct subtree of an OR node to the dictionary.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.CheckIfTreeCanBeDeserialized">
            <summary>
            Checks that a parameter tree without active filers can be deserialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Parameters.ParameterTreeTest.CheckIfTreeWithFiltersCanBeDeserialized">
            <summary>
            Checks that a parameter tree with active filers can be deserialized.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.PathPrefix">
            <summary>
            Prefix for path to test XML files.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForMissingFile">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a path
            that doesn't exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForMissingFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            that states the document could not be opened if called with a path that doesn't exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForNonXml">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to a file which is not .xml.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForNonXml">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            that states the document could not be interpreted if called with a path hat points to a file which is not
            .xml.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForBrokenXml">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to a broken XML document.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForBrokenXml">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            that states the document could not be interpreted if called with a path hat points to a broken XML document.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForXmlNotMatchingXsd">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to an XML document not matching the expected schema.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForXmlNotMatchingXsd">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            that states the document did not match the schema if called with a path hat points to an XML document not
            matching the expected schema.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForCategoricalDomainWithMixedTypes">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to an XML document defining an categorical domain with elements of different types.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForCategoricalDomainWithMixedTypes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            complaining about a categorical domain containing more than one type if called with a path that points to
            an XML document defining an categorical domain with elements of different types.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForOrNodeWithoutCategoricalDomain">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to an XML document defining an OR node using a domain that is not categorical.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForOrNodeWithoutCategoricalDomain">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            complaining about an OR node not having the expected domain if called with a path that points to an XML
            document defining an OR node using a domain that is not categorical.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeReturnsNullForChoiceOfWrongType">
            <summary>
            Checks <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> returns null if called with a
            path that points to an XML document defining an OR node using a choice with a type not equal to the type
            implied by its domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreePrintsConsoleMessageForChoiceOfWrongType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/> prints a message to console
            complaining about an OR node's choice not having the expected type if called with a path that points to an
            XML document defining an OR node using a choice with a type not equal to the type implied by its domain.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.ConvertToParameterTreeWorksForExampleTree">
            <summary>
            Checks that using <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/>, the following tree
            is read in correctly from an XML file:
            * Root is an AND node
            * On the next level, there is an OR node (0.1, 0.3 or 0.5) and a value node with values between -0.1 and 0
            * The OR node activates another AND node on 0.1 and a discrete value node with values between -2 and 3 on 0.5
            * The value whose parent is the root node has another value node with a log domain between 10 and 100 as a child.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.DomainsReturnXmlDefaultValues">
            <summary>
            Checks that all default values are parsed from the XML tree.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.CheckConsoleOutput(System.String,System.Action{System.IO.StringReader})">
            <summary>
            Checks console output on calling <see cref="M:Optano.Algorithm.Tuner.ParameterTreeReader.ParameterTreeConverter.ConvertToParameterTree(System.String)"/>.
            </summary>
            <param name="fileName">File name of file lying in <see cref="F:Optano.Algorithm.Tuner.Tests.ParameterTreeReader.ParameterTreeConverterTest.PathPrefix"/>. Will be tried to be converted.
            </param>
            <param name="check">Checks to do on the output.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase">
            <summary>
            Contains tests important for any <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> inheriting from
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase._genomeValues">
            <summary>
            The values genomes created via <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.GenomeBuilder"/>
            will have for <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>, in order of creation.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.RunEvaluator">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> used in
            tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.SingleTestInstance">
            <summary>
            Gets a list of <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s consisting of a single instance.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.ParameterTree">
            <summary>
            Gets the structure representing the tunable parameters.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.GenomeBuilder">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder" /> used in tuning.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.ResultStorageActor">
            <summary>
            Gets an <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.GenerationEvaluationActor">
            <summary>
            Gets an <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.GenerationEvaluationActor" />.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.Configuration">
            <summary>
            Gets or sets a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> with many default values.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FixInstances">
            <summary>
            Gets or sets a value indicating whether <see cref="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.CreateTunerConfigurationBuilder"/> should
            create a configuration with <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances"/> set to
            <c>true</c>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.Strategy">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> to test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.InitializeThrowsForMissingBasePopulation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            throws a <see cref="T:System.ArgumentNullException"/> if called without a population to base the method on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.InitializeThrowsForNoCompetitiveGenomes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            throws a <see cref="T:System.ArgumentOutOfRangeException"/> if the provided population does not contain competitive
            genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.InitializeResetsGenerationToZero">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            resets the continuous optimization method's generation to 0.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.PerformIterationThrowsForNegativeGenerationIndex">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`1})"/> throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative generation index.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.PerformIterationPerformsContinuousOptimizationMethodIteration">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`1})"/> performs
            an iteration of the continuous optimization method.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.InstancesAreOnlyUpdatedOncePerPhaseIfConfigurationIndicatesThat">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3"/> only updates
            the instances on phase initialization if
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances"/> is turned on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FinishPhaseOnlyReturnsValidGenomes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            only produces valid genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FinishPhaseThrowsForMissingBasePopulation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            throws a <see cref="T:System.ArgumentNullException"/> if called without a base population.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FinishPhaseCopiesNonCompetitive">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            copies non-competitive genomes from the original population.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FinishPhaseReturnsOriginalPopulationWithoutPriorUpdate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            returns the base population in case
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`1})"/> was not
            called beforehand.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.NextStrategyThrowsForMissingStrategies">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`0,`1}})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without any strategies.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.NextStrategyIsGga">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`1,`2}})"/>
            returns an index corresponding to a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.DumpStatusCreatesStatusFiles">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.DumpStatus"/>
            creates status files at the correct places.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.UseStatusDumpReadsInformationFromFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/>
            reads relevant information from file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.UseStatusDumpUpdatesEvaluationInstances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/>
            updates the evaluation instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.CreateTunerConfigurationBuilder">
            <summary>
            Creates a builder for a valid <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.CreateStrategy(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Creates a new <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> used in testing.
            </summary>
            <param name="configuration">The configuration to use in creating the strategy.</param>
            <returns>The newly created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.FindCurrentGeneration">
            <summary>
            Finds the continuous optimization method's current generation, e.g. by reading the latest status file.
            </summary>
            <returns>The current generation.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.CreatePopulation">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> of <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s according to
            <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.GenomeBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.ContinuousOptimizationStrategyTestBase.CreateIncumbentGenomeWrapper">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1"/> with generation 0, a random genome and empty
            results.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> used in tests as a
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> to use in base class tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest.LongOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> correctly interprets
            arguments given in the --longoption=value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest.CorrectDefaultValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> leads to correct
            default values if only required arguments are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParserTest.UnknownArgumentsAreCollected">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyArgumentParser"/> collects unknown arguments.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1">
            <summary>
            Contains tests important for any <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/> inheriting from
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBase`3"/>.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> used by the strategy.
            </typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.StatusFilePath">
            <summary>
            Gets the path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.CmaEsStatusFilePath">
            <summary>
            Gets the path to which the CMA-ES runner status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.InitializeResetsAllData">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            resets all of CMA-ES's data.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.InstancesAreUpdatedOnEveryUpdateIfConfigurationIndicatesThat">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2" /> updates the instances on
            every population update if <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FixInstances" /> is turned
            off.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.FindIncumbentGenomeReturnsGenomeFoundByCmaEs">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FindIncumbentGenome"/>
            returns the best candidate as found by the CMA-ES runner.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.FinishPhaseKeepsAgeDistributionEvenWithOldElitistIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            keeps the age distribution of competitive genomes stable even if there exists an incumbent with a large
            age.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.HasTerminatedReturnsTrueAfterCorrectNumberGenerations">
            <summary>
            Checks whether
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.HasTerminated"/> returns true
            after the correct number of generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.DumpStatusCreatesStatusFiles">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.DumpStatus" /> creates status files
            at the correct places.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.UseStatusDumpReadsInformationFromFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)" /> reads relevant information from
            file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.CreateTunerConfigurationBuilder">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> which fits CMA-ES.
            </summary>
            <returns>
            The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyBaseTest`1.FindCurrentGeneration">
            <summary>
            Finds the continuous optimization method's current generation, e.g. by reading the latest status file.
            </summary>
            <returns>
            The current generation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> and
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.CovarianceMatrixAdaptationStrategyConfigurationBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest._builder">
            <summary>
            Builder used for tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that the configuration has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentFocusOnIncumbentOption">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if
            the focus on incumbent option is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumNumberGenerations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            maximum number of generations is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForIncumbentFocusWithDifferentReplacementRate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            replacement rate is different and the incumbent focus option is turned on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentFixInstancesFlags">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            fix instances flag is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForIncumbentFocusWithForDifferentMinimumDomainSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            minimum domain size is different and the incumbent focus option is turned on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentInitialStepSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            initial step size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsTrueForSameParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the parameters
            do not change.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsCompatibleReturnsTrueForIrrelevantParameterChanges">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if only
            inactive conditional parameters are changing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsTechnicallyCompatibleReturnsFalseForDifferentIncumbentFocus">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            returns false if the focus on incumbent option is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsTechnicallyCompatibleReturnsFalseForIncumbentFocusWithDifferentMinimumDomainSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            returns false if the focus on incumbent option is turned on and the minimum domain size changes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsTechnicallyCompatibleReturnsTrueForOtherChanges">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true for any
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> which does not change the incumbent focus or
            minimum domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.IsTechnicallyCompatibleReturnsTrueForTurnedOffIncumentFocus">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true for any
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfiguration"/> if the incumbent focus option is turned off.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.ZeroMaximumNumberGenerationsThrowsError">
            <summary>
            Verifies that setting the maximum number of generations to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.ZeroInitialStepSizeThrowsError">
            <summary>
            Verifies that setting the initial step size to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.ZeroReplacementRateThrowsError">
            <summary>
            Verifies that setting the replacement rate to zero results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.ReplacementRateAboveOneThrowsError">
            <summary>
            Verifies that setting the replacement rate to a value above 1 results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyConfigurationTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatus`2"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest._currentEvaluationInstances">
            <summary>
            Evaluation instances used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest._mostRecentSorting">
            <summary>
            Sorting used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest._originalIncumbent">
            <summary>
            Original incumbent genome used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.OriginalIncumbentIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.OriginalIncumbent"/>
            returns the genome provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.EvaluationInstancesAreSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.CurrentEvaluationInstances"/>
            returns the instances provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.SortingIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.MostRecentSorting"/>
            returns the sorting provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.CovarianceMatrixAdaptationStrategyStatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._lowerBounds">
            <summary>
            Lower bounds which fit <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._parameterTree"/>, sorted by identifier.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._upperBounds">
            <summary>
            Upper bounds which fit <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._parameterTree"/>, sorted by identifier.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._parameterTree">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of different domain types.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._genomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> which fits <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest._parameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForMissingValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without any values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForMissingLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor throws
            a <see cref="T:System.ArgumentNullException"/> if called without lower bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForMissingUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without upper bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForWrongNumberOfLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of lower bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForWrongNumberOfUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of upper bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorThrowsForLowerBoundHigherUpperBound">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a lower bound greater than its respective upper
            bound.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorCorrectlySetsValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor sets <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Values"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructorAssociatesCorrectGenome">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor associates the correct
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to provided values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.InvalidGenomeIsHandledCorrectly">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>s constructor associates repaired
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s if the direct transform is invalid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.CreateFromGenomeThrowsForMissingGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.CreateFromGenomeThrowsForMissingParameterTree">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.CreateFromGenomeSetsPropertiesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> sets
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> to the provided genome,
            <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Values"/> to the transformed values, and
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.IsRepaired"/> to <c>false</c>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ConstructionIsConsistent">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/>'s constructor and
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree)"/> are consistent in (re)transforming
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.GenomePropertyProducesIndependentGenome">
            <summary>
            Checks that the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> produced by <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.Genome"/> is
            independent from the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> was initialized
            with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.ObtainParameterBoundsFindsCorrectBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint.ObtainParameterBounds(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Double[]@,System.Double[]@)"/> identifies the bounds
            correctly.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPointTest.CreateParameterTree">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of different domain types.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class without a configuration
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class without a generation evaluation actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingResultStorageActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategy`2"/> class without a result storage actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.InitializeUsesIncumbentForDistributionMean">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            sets CMA-ES's initial distribution mean to the current incumbent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.InitializeUsesCompleteCompetitivesIfNoIncumbentExistis">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            sets CMA-ES's initial distribution mean to the mean of the competitive individuals if no incumbent is
            provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.FinishPhaseReplacesCompetitiveGenomes">
            <summary>
            Checks the replacement mechanism of
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/> for
            competitive genomes: These should be the all but the worst search point found by the CMA-ES runner and also
            the original incumbent. Search point ages are chosen s.t. the age distribution is kept stable.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.FinishPhaseWorksWithoutOriginalIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            also works without an original incumbent by replacing the complete population and correctly choosing ages.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.GlobalCovarianceMatrixAdaptationStrategyTest.CreateStrategy(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class without a configuration
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class without a generation evaluation actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.ConstructorThrowsForMissingResultStorageActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> class without a result storage actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.InitializeUsesIncumbentForDistributionMean">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            sets CMA-ES's initial distribution mean to the current incumbent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.InitializeThrowsForMissingIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            throws a <see cref="T:System.ArgumentNullException"/> if called without an incumbent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.PerformIterationFixesDiscreteValues">
            <summary>
            Checks that the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2"/> fixes discrete
            values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.FinishPhaseWorks">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>:
            * replaces the provided percentage of the competitive population with the best points found by CMA-ES,
            * keeps the old incumbent, 
            * copies all non-competitive genomes, and
            * keeps the population's age structure.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.FinishPhaseKeepsIncumbentForMaximumReplacementRate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            keeps the original incumbent even at a replacement rate of 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.UseStatusDumpReinitializesBaseGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> reads
            the status in such a way that the base genome does not change from the first optimization part.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.LocalCovarianceMatrixAdaptationStrategyTest.CreateStrategy(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._minimumDomainSize">
            <summary>
            Minimum size of an integer domain to be handled as continuous.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._lowerBounds">
            <summary>
            Lower bounds which fit <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree"/>, sorted by identifier.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._upperBounds">
            <summary>
            Upper bounds which fit <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree"/>, sorted by identifier.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of different domain types.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._genomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> which fits <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._genomeSearchPointConverter">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter"/> which fits <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._baseGenome">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.ImmutableGenome"/> fitting <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest._parameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingGenome">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without any genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without any values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingConverter">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeSearchPointConverter"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor throws
            a <see cref="T:System.ArgumentNullException"/> if called without lower bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForMissingUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without upper bounds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForWrongNumberOfValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of values inconsistent with its
            genome converter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForWrongNumberOfLowerBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of lower bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForWrongNumberOfUpperBounds">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of upper bounds not fitting the
            dimension.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorThrowsForLowerBoundHigherUpperBound">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a lower bound greater than its respective upper
            bound.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorCorrectlySetsValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor sets <see cref="P:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint.Values"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructorAssociatesCorrectGenome">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor associates the correct
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> to provided values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.InvalidGenomeIsHandledCorrectly">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>s constructor associates repaired
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s if the direct transform is invalid.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.CreateFromGenomeThrowsForMissingGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.CreateFromGenomeThrowsForMissingParameterTree">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.CreateFromGenomeExtractsCorrectValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)"/> correctly extracts real-valued
            parameters from the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ConstructionIsConsistent">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/>'s constructor and
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32)"/> are consistent in (re)transforming
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.GenomePropertyProducesIndependentGenome">
            <summary>
            Checks that the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> produced by <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.Genome"/> is
            independent from the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint"/> was initialized
            with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.ObtainParameterBoundsFindsCorrectBounds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPoint.ObtainParameterBounds(Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,System.Double[]@,System.Double[]@)"/> correctly identifies the bounds
            of (quasi-)continuous parameters.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Local.PartialGenomeSearchPointTest.CreateParameterTree">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of different domain types.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest._sorter">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3"/> to test.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.GenomeAssistedSorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.ValidGenomeIsBetterThanInvalidOne">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3.Sort(System.Collections.Generic.IList{`0})"/> sorts by validity as first criterion.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.SecondSortingCriterionIsPerformance">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3.Sort(System.Collections.Generic.IList{`0})"/> sorts both valid and invalid
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s by performance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.SortingIsConsistent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.Sort(System.Collections.Generic.IList{`0})"/> and
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.DetermineRanks(System.Collections.Generic.IList{`0})"/> are consistent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.SortingCanHandleDuplicates">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorter`3.Sort(System.Collections.Generic.IList{`0})"/> can handle duplicates.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.InitializeSorter(Akka.Actor.IActorRef)">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenomeAssistedSorter"/>.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" />.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.CovarianceMatrixAdaptation.RepairedGenomeSearchPointSorterTest.CreatePoint(System.Double,System.Boolean)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.CovarianceMatrixAdaptation.InformationFlow.Global.ContinuizedGenomeSearchPoint"/> fitting the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <param name="sortingRelevantParameter">Value relevant for sorting, between 0 and 10.</param>
            <param name="correspondsToValidGenome">
            If true, other values are added s. t. the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/> corresponds to an valid
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>; if false, it will be an invalid <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.CovarianceMatrixAdaptation.BoundedSearchPoint"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest._parser">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest.Parser">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> used in tests as a
            <see cref="T:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase"/> to use in base class tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest.LongOptionsAreParsedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> correctly interprets
            arguments given in the --longoption=value format.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest.CorrectDefaultValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Configuration.ArgumentParsers.HelpSupportingArgumentParserBase.ParseArguments(System.String[])"/> leads to correct
            default values if only required arguments are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParserTest.UnknownArgumentsAreCollected">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyArgumentParser"/> collects unknown arguments.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> and
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest._defaultDifferentialEvolutionConfigurationBuilder">
            <summary>
            A default <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest._builder">
            <summary>
            Builder used for tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.AllValuesGetTransferred">
            <summary>
            Checks that all values get transferred from builder to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.DefaultsAreSetCorrectly">
            <summary>
            Checks that the configuration has correct default values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.BuildWithFallbackUsesFallbacks">
            <summary>
            Checks that all values are copied if
            <see cref="M:Optano.Algorithm.Tuner.Configuration.IConfigBuilder`1.BuildWithFallback(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/>
            is called on a builder without anything set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.BuildWithFallbackUsesFallbacksForDetailedConfiguration">
            <summary>
            Checks that 
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration)"/>
            also uses fallbacks for <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentMinimumDomainSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            minimum domain size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentMaximumNumberGenerations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            maximum number of generations is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentFocusOnIncumbentFlags">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            focus on incumbent flag is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForIncumbentFocusWithDifferentReplacementRate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            replacement rate is different and incumbent focus is turned on.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForDifferentFixInstancesFlags">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            fix instances flag is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsFalseForIncompatibleDifferentialEvolutionConfigurationBuilders">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the 
            differential evolution configuration builder is incompatible.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsTrueForChangesInInitialParameters">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if the parameters
            only change in initial values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsCompatibleReturnsTrueForIrrelevantParameterChanges">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true if only
            inactive conditional parameters are changing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsTechnicallyCompatibleReturnsFalseForDifferentMinimumDomainSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns false if the
            minimum domain size is different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.IsTechnicallyCompatibleReturnsTrueForSameMinimumDomainSize">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.IsTechnicallyCompatible(Optano.Algorithm.Tuner.Configuration.ConfigurationBase)"/> returns true for any
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> with same minimum domain size.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.ZeroMaximumNumberGenerationsThrowsError">
            <summary>
            Verifies that setting the maximum number of generations to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.ZeroMinimumDomainSizeThrowsError">
            <summary>
            Verifies that setting the minimum domain size to 0 results in an
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.NegativeReplacementRateThrowsError">
            <summary>
            Verifies that setting the replacement rate to a negative value results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.ReplacementRateAboveOneHalfThrowsError">
            <summary>
            Verifies that setting the replacement rate to a value above 0.5 results in a
            <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.MissingDifferentialEvolutionConfigurationBuilderThrowsError">
            <summary>
            Verifies that calling
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration.DifferentialEvolutionStrategyConfigurationBuilder.BuildWithFallback(Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration)"/>
            without fallback and without
            <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.DifferentialEvolution.DifferentialEvolutionConfiguration.DifferentialEvolutionConfigurationBuilder"/>
            set throws a <see cref="T:System.InvalidOperationException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.CreateTestConfiguration">
            <summary>
            Creates a valid configuration object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfigurationTest.CreateTestConfigurationBuilder">
            <summary>
            Creates a valid configuration builder object.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatus`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest._currentEvaluationInstances">
            <summary>
            Evaluation instances used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest._mostRecentSorting">
            <summary>
            Sorting used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest._originalIncumbent">
            <summary>
            Incumbent genome used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.EvaluationInstancesAreSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.CurrentEvaluationInstances"/>
            returns the instances provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.SortingIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.MostRecentSorting"/>
            returns the sorting provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.OriginalIncumbentIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyStatusBase`2.OriginalIncumbent"/>
            returns the genome provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyStatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest._statusFilePath">
            <summary>
            Path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest._deStatusFilePath">
            <summary>
            Path to which the DE runner status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class without a configuration
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class without a generation evaluation actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.ConstructorThrowsForMissingResultStorageActor">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2"/> class without a result storage actor
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.InitializeKeepsCurrentMeans">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.Initialize(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{`2},System.Collections.Generic.IEnumerable{`1})"/>
            keeps the current means the same.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.InformationFlowDependsOnFocusOnIncumbentOption">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FinishPhase(Optano.Algorithm.Tuner.Genomes.Population)"/>
            depends on <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.StrategyConfigurationBase`1.FocusOnIncumbent"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.FindIncumbentGenomeReturnsBestInCurrentGeneration">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.FindIncumbentGenome"/> returns the
            best genome of the current generation, along with current results.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.HasTerminatedReturnsTrueAfterCorrectNumberGenerations">
            <summary>
            Checks whether
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.HasTerminated"/> returns true
            after the correct number of generations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.DumpStatusCreatesStatusFiles">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategy`2.DumpStatus"/> creates status files
            at the correct places.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.UseStatusDumpReadsInformationFromFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.ContinuousOptimizationStrategyBase`3.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/>
            reads relevant information from file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.CreateTunerConfigurationBuilder">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/> which fits differential evolution.
            </summary>
            <returns>
            The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.AlgorithmTunerConfigurationBuilder"/>.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.CreateStrategy(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.DifferentialEvolutionStrategyTest.FindCurrentGeneration">
            <summary>
            Finds the continuous optimization method's current generation, e.g. by reading the latest status file.
            </summary>
            <returns>
            The current generation.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest._parameterTree">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest._completeConfiguration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest._deConfiguration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/> class without a
            strategy configuration throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/> class without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow"/> class without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsThrowsForJadePopulationSmallerThree">
            <summary>
            Verifies that using a competitive population size of 2 throws a <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsDoesNotThrowForJadePopulationEqualToThree">
            <summary>
            Verifies that using a competitive population size of 3 does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsTransformsAllCompetitives">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)"/>
            transforms all competitive individuals into <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.DefineCompetitivePopulationReturnsCurrentSearchPoints">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/>
            returns all current search points.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.GlobalDifferentialEvolutionInformationFlowTest.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest._completeConfiguration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest._deConfiguration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.Configuration.DifferentialEvolutionStrategyConfiguration"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest._parameterTree">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingConfiguration">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/> class without a
            strategy configuration throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingParameterTree">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/> class without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow"/> class without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsBuildsValidPointsBasedOnIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)"/>
            returns valid individuals based on the incumbent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsThrowsForMissingIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)"/>
            throws a <see cref="T:System.ArgumentNullException"/> if called without an incumbent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsUsesRepairOperationIfRequired">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)"/>
            can deal with tight constraints by using a repair operation.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsThrowsIfNoValidPointExists">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DetermineInitialPoints(Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Genomes.Genome)"/>
            throws a <see cref="T:System.TimeoutException"/> if no valid point exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsThrowsForJadePopulationSmallerThree">
            <summary>
            Verifies that using a competitive population size of 5 throws a <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DetermineInitialPointsDoesNotThrowForJadePopulationEqualToThree">
            <summary>
            Verifies that using a competitive population size of 6 does not throw an error.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DefineCompetitivePopulationWorksWithPositiveReplacementRate">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/>,
            called with a positive replacement rate:
            * replaces that percentage of the competitive population with the best points found, and
            * keeps the population's age structure.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DefineCompetitivePopulationWorksForIncumbentChangeOnly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/>,
            called with a replacement rate of 0:
            * replaces the incumbent by the best point found by DE,
            * keeps the incumbent's age, and
            * copies all other genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.DefineCompetitivePopulationThrowsForIncumbentChangeOnlyWithoutIncumbent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlow.DefineCompetitivePopulation(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Genomes.Genome},Optano.Algorithm.Tuner.Genomes.Genome,System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/>,
            called with a replacement rate of 0 and no original incumbent throws a <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.CreateConfiguration(System.Double)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> using differential evolution with a local update
            strategy.
            </summary>
            <param name="replacementRate">The replacement rate.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.CreatePopulation(System.Int32)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> of <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s according to
            <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
            <param name="numberCompetitives">The number of competitive individuals to create.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.CreateRandomGenomes(System.Int32)">
            <summary>
            Creates <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s according to <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
            <param name="number">The number of <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s to create.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.InformationFlow.LocalDifferentialEvolutionInformationFlowTest.CreateRandomSearchPoints">
            <summary>
            Creates <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s according to <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>s.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest._sorter">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2"/> to test.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.GenomeAssistedSorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.SorterSortsByGenomePerformance">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2.Sort(System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/> sorts <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s by
            performance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.SortingIsConsistent">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2.Sort(System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/> and
            <see cref="M:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1.DetermineRanks(System.Collections.Generic.IList{`0})"/> are consistent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.SortingCanHandleDuplicates">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorter`2.Sort(System.Collections.Generic.IList{Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint})"/> can handle duplicates.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.InitializeSorter(Akka.Actor.IActorRef)">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenomeAssistedSorter"/>.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" />.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointSorterTest.CreatePoint(System.Double)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> fitting the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
            <param name="sortingRelevantParameter">Value relevant for sorting.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest._minimumDomainSize">
            <summary>
            Minimum size of an integer domain to be handled as continuous.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest._parameterTree">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of many different domain types.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest._genomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> which fits <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest._parameterTree"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest._parent">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.Dispose">
            <summary>
            Called after every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.ConstructorThrowsForMissingValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>'s constructor throws a <see cref="T:System.ArgumentNullException"/> if
            called without any values.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.ConstructorThrowsForWrongNumberOfValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a number of values inconsistent with its parent.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.ConstructorThrowsForMissingGenomeBuilder">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/>'s constructor throws a <see cref="T:System.ArgumentNullException"/> if
            called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateFromGenomeThrowsForMissingGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateFromGenomeThrowsForMissingParameterTree">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateFromGenomeThrowsForMissingGenomeBuilder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateFromGenomeExtractsCorrectValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> correctly extracts real-valued parameters from
            the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateFromGenomeCopiesCorrectInformation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> copies only information that stays true for
            the created genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeThrowsForMissingGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeThrowsForMissingParameterTree">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeThrowsForMissingGenomeBuilder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> throws a <see cref="T:System.ArgumentNullException"/>
            if called without a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeCopiesCorrectInformation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> copies only information that stays true for
            the created genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeFixesNonContinuousValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> keeps all real-valued parameters from
            the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.BaseRandomPointOnGenomeRandomlyChoosesContinuousValues">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.BaseRandomPointOnGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/> sets real-valued parameters uniformly
            at random.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.IsValidChecksBoundaries">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.IsValid"/> checks for boundary constraints.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.IsValidReturnsTrueForValidPoint">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.IsValid"/> returns true for valid points.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.IsValidChecksCustomGenomeBuilder">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.IsValid"/> calls <see cref="M:Optano.Algorithm.Tuner.Genomes.GenomeBuilder.IsGenomeValid(Optano.Algorithm.Tuner.Genomes.Genome)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.GenomeSearchPointRoundsIntegerValues">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> rounds values belonging to integer domains.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.GenomePropertyReversesCreateFromGenome">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/> reverses
            <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.CreateFromGenome(Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.Parameters.ParameterTree,System.Int32,Optano.Algorithm.Tuner.Genomes.GenomeBuilder)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.GenomeSearchPointMakesUseOfParent">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> uses the values fixed by a parent if the 
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> was constructed via the parent-constructor.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.GenomePropertyProducesIndependentGenome">
            <summary>
            Checks that the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> produced by <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.Genome"/> is
            independent from the <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint"/> was initialized
            with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.ToStringPrintsGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPoint.ToString"/> returns the same <see cref="T:System.String"/> as its
            underlying <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/> does.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.DifferentialEvolution.SearchPoint.GenomeSearchPointTest.CreateParameterTree">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> containing parameters of many different domain types.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest._iterationCounter">
            <summary>
            An iteration counter that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest._incumbentKeptCounter">
            <summary>
            An incumbent kept counter that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest._population">
            <summary>
            Population that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest._configuration">
            <summary>
            Configuration that can be used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.ConstructorThrowsOnMissingRanks">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no ranks are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.ConstructorThrowsOnNegativeIterationCounter">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if a negative number is
            provided for the iteration counter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.ConstructorThrowsOnNegativeIncumbentKeptCounter">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if a negative number is
            provided for the incumbent kept counter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.ConstructorThrowsOnIncumbentKeptCounterGreaterThanIterationCounter">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the incumbent kept
            counter is greater than the iteration counter.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.PopulationIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.Population"/>
            returns the population provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.IterationCounterIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.IterationCounter"/>
            returns the number provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.AllKnownRanksAreSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatus.AllKnownRanks"/>
            returns the ranks provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._statusFilePath">
            <summary>
            Path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._parameterTree">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to use in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._genomeValues">
            <summary>
            The values genomes created via <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._genomeBuilder"/>
            will have for <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>, in order of creation.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._singleTestInstance">
            <summary>
            A single <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._configuration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> to use in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._resultStorageActor">
            <summary>
            The <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" /> to
            use in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._generationEvaluationActor">
            <summary>
            The <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" /> to
            use in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest._geneticEngineering">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering"/> to use in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.MissingConfigurationThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class without a configuration
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.MissingParameterTreeThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class without a parameter tree
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.MissingGenomeBuilderThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class with a genome builder set to
            null throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.MissingTournamentSelectorThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class with
            the tournament selector set to null throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.MissingGeneticEngineeringThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> class with
            the genetic engineering set to null throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.IsElitist">
            <summary>
            Checks that the best genome does not die even if it is too old.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.PerformIterationAgesGenomes">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})"/> ages genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.PerformIterationKeepsPopulationStable">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.PerformIteration(System.Int32,System.Collections.Generic.IEnumerable{`0})"/> creates as many new
            <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s as die (for each population part).
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.NextStrategyIsChosenAccordingToConfiguration">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.NextStrategy(System.Collections.Generic.List{Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy{`0,`1}})"/> chooses the next strategy
            according to configuration.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.HasTerminatedConsidersGenerationsInPhase">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.HasTerminated"/> checks the number of population
            updates that have happened in the current phase.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.DumpStatusCreatesStatusFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.DumpStatus"/> creates a status file at the correct
            place.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.UseStatusDumpReadsPopulationFromFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> reads the population from file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.UseStatusDumpReadsIterationCounterFromFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2.UseStatusDump(Optano.Algorithm.Tuner.MachineLearning.IGeneticEngineering)"/> reads the iteration counter
            from file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.CreateTestStrategy">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/> to use in tests.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategy`2"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.CreateTournamentSelector``3(Akka.Actor.ActorSystem,Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{``0,``1,``2},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{``1,``2})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
            <typeparam name="TTargetAlgorithm">Algorithm to execute.</typeparam>
            <typeparam name="TInstance">Type of instances the algorithm takes.</typeparam>
            <typeparam name="TResult">Type of result the algorithm returns.</typeparam>
            <param name="system">The <see cref="T:Akka.Actor.ActorSystem"/> to add the actor to.</param>
            <param name="targetAlgorithmFactory">Specifies how to create an algorithm instance.</param>
            <param name="runEvaluator">Specifies how runs should be compared.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GeneticAlgorithm.GgaStrategyTest.CreateIncumbentGenomeWrapper">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1"/> with generation 0, a random genome and empty
            results.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper`1"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/> class.
            </summary>
            <typeparam name="TSearchPoint">
            The type of <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.SearchPoint"/> handled by the
            <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/>.
            </typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.FreeParameterName">
            <summary>
            The name of a parameter which does not matter for the <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1._runEvaluator"/>.
            </summary>
            <remarks>Starts with 'aaa' to be first in alphabet.</remarks>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1._runEvaluator">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> used in test.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.ParameterTree">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenomeBuilder">
            <summary>
            Gets a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenerationEvaluationActor">
            <summary>
            Gets a reference to the <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenerationEvaluationActor"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.Sorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.ContinuousOptimization.ISearchPointSorter`1"/> used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenomeAssistedSorter">
            <summary>
            Gets the <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.GenomeAssistedSorterBase`3"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> iif called without a <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenerationEvaluationActor"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.InitializeSorter(Akka.Actor.IActorRef)">
            <summary>
            Initializes <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenomeAssistedSorter"/>.
            </summary>
            <param name="generationEvaluationActor">
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="P:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.GenerationEvaluationActor" />.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.CreateParameterTree">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> which consists of two independent parameters:
            <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.FreeParameterName"/> and <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>, both integers between
            -5 and 5.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.CreateGenomeBuilderWithForbiddenValue(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> which forbids using "3" for <see cref="F:Optano.Algorithm.Tuner.Tests.PopulationUpdateStrategies.GenomeAssistedSorterBaseTest`1.FreeParameterName"/>.
            </summary>
            <param name="configuration">
            <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> for the <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.
            </param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1">
            <summary>
            Defines tests that should be implemented for each <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/>.
            </summary>
            <typeparam name="T">Type of the status class to test.</typeparam>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.StatusFilePath">
            <summary>
            Gets a path to which the status file will get written in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.WriteToFileThrowsForUnknownDirectory">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>
            throws a <see cref="T:System.IO.DirectoryNotFoundException"/> if
            called on a path to a non-existing directory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.WriteToFileOnlyDeletesLastStatusAfterWriteFinished">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>
            only replaces a status file after a new one was
            completed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.ReadFromFileThrowsForNonExistingFile">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/>
            throws a <see cref="T:System.IO.FileNotFoundException"/> if the file
            it should read from doesn't exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.ReadFromFileThrowsForWrongGenericType">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/>
            throws an <see cref="T:System.InvalidCastException"/> if it is
            called on a file serializing a status object of different type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.CleanupDefault">
            <summary>
            Deletes status file(s) after a test if any was written.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.WrongTypeStatus">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Serialization.StatusBase"/> subtype used in
            <see cref="M:Optano.Algorithm.Tuner.Tests.Serialization.StatusBaseTest`1.ReadFromFileThrowsForWrongGenericType"/>.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.ConstructorThrowsOnPathNull">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/> throws an <see cref="T:System.ArgumentNullException"/> if no path is
            provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.PathIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/> returns the name provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.ToStringReturnsPath">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.ToString"/> returns the path provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.EqualsReturnsFalseForDifferentValue">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> returns false if
            the instances' paths are different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.EqualsReturnsFalseForOneObjectNotInstanceFile">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> returns false if
            the first parameter is not an <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/> and the second one is.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.EqualsReturnsTrueEqualFileNames">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> is true for
            two <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>s with same paths, but pointing to different objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.GetHashCodeReturnsSameHashCodesForEqualPaths">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.GetHashCode"/> is equal for two
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>s storing the same path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceFileTest.GetHashCodeReturnsDifferentHashCodesForDifferentPaths">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.GetHashCode"/> is different for two
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>s storing different file names.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.ValidFileNames">
            <summary>
            The file names that should be translated into <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s on <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.NonValidFileNames">
            <summary>
            The file names that should not be translated into <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s on <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.ValidInstanceExtensions">
            <summary>
            The list of valid instance extensions.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest._pathToTestInstanceFolder">
            <summary>
            The path to the test instance folder. Has to be initialized.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest"/> class.
            Behaves like the [TestInitialize] of MSTest framework.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.ConstructorThrowsOnPathNull">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> throws an <see cref="T:System.ArgumentNullException"/> if no path is
            provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.PathIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile.Path"/> returns the name provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.SeedIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.Seed"/> returns the seed provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.ToStringReturnsPathAndSeed">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.ToString"/> returns the path provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.EqualsReturnsFalseForDifferentPath">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> returns false if
            the instances' paths are different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.EqualsReturnsFalseForDifferentSeed">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> returns false if
            the instances' seeds are different.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.EqualsReturnsFalseForOneObjectNotInstanceSeedFile">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> returns false if
            the first parameter is not an <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/> and the second one is.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.EqualsReturnsTrueForEqualPathAndSeed">
            <summary>
            Checks that <see cref="M:System.Object.Equals(System.Object,System.Object)"/> is true for
            two <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s with same paths, but pointing to different objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.GetHashCodeReturnsSameHashCodesForEqualPathAndSeed">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.GetHashCode"/> is equal for two
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s storing the same path.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.GetHashCodeReturnsDifferentHashCodesForDifferentPaths">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.GetHashCode"/> is different for two
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s storing different file names.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.GetHashCodeReturnsDifferentHashCodesForDifferentSeeds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.GetHashCode"/> is different for two
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s storing different seeds.
            Of course, this does not have to be the case necessarily, but it's still a nice property that should be
            true in most cases.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.CreateInstancesThrowsExceptionIfItCannotOpenFolder">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/> with a non existant directory throws
            a <see cref="T:System.IO.DirectoryNotFoundException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.CreateInstancesPrintsMessageIfItCannotOpenFolder">
            <summary>
            Verifies that calling <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/> with a non existant directory prints
            out a message to the console telling the user the directory doesn't exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.CreateInstancesCorrectlyExtractsPathsToValidFiles">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/> creates an instance out of each valid file and
            the instance's file name matches the complete path to that file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.CreateInstancesIgnoresNonValidFiles">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.CreateInstanceSeedFilesFromDirectory(System.String,System.String[],System.Int32,System.Int32)"/> ignores all non valid files.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.SeedsToUseReturnsCorrectNumberOfSeeds">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile.SeedsToUse(System.Int32,System.Int32)"/> returns the correct number of seeds.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Instances.InstanceSeedFileTest.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.DisposableNoOp">
            <summary>
            A variant of <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/> that mock-ingly implements <see cref="T:System.IDisposable"/>-.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.DisposableNoOp.HasBeenDisposed">
            <summary>
            Gets a value indicating whether the object has been disposed of already.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.DisposableNoOp.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed">
            <summary>
            A simple testing algorithm that uses both instance seeds and parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed._parameters">
            <summary>
            All parameters this algorithm was configured with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed.#ctor(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed"/> class.
            </summary>
            <param name="parameters">The parameters to configure with.
            Should include an integer parameter with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed.Run(Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the algorithm on the given instance.
            <para>For this class, the task will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class with
            the product of the instance seed and the value of the parameter with key
            <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> stored in <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed._parameters"/>.
            </para>
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that should be regurlary checked for cancellation.
            If cancellation is detected, the task has to be stopped.</param>
            <returns>A task that will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class with the
            product of the instance seed and the value of the parameter with key
            <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> stored in <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeed._parameters"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeedCreator">
            <summary>
            A minimal implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.InstanceValueConsideration.MultiplyIntegerWithSeedCreator.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures the target algorithm using the given parameters.
            </summary>
            <param name="parameters">The parameters to configure the target algorithm with.</param>
            <returns>The configured target algorithm.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.KeepSuggestedOrder`2">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> that doesn't reorder the genomes at all.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.KeepSuggestedOrder`2.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.KeepSuggestedOrder`2.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.KeepSuggestedOrder`2.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,`1},System.TimeSpan)">
            <summary>
            Uses the <paramref name="genomeStats"/>.Genome.Age - OpenInstances.Count as priority.
            </summary>
            <param name="genomeStats">The genome stats.</param>
            <param name="cpuTimeout">The timeout.</param>
            <returns><see cref="P:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats`2.Genome"/>.Age.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/>
            returning a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class after a specified time.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation._runTime">
            <summary>
            Time after which to return a <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> when 
            <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)"/> is called.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation._evaluationCancellationToken">
            <summary>
            The cancellation token used for the latest evaluation run.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/> class.
            </summary>
            <param name="runTime">Timeout after which to return a <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/>
            when <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)"/> is called.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/> class.
            Uses <see cref="F:System.TimeSpan.Zero"/> as <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation._runTime"/>.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.IsCancellationRequested">
            <summary>
            Gets a value indicating whether cancellation has been requested so far.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the algorithm on the given instance.
            <para>As <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/> does not specify any algorithm,
            the task will simply initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class after waiting for the
            time span specified on construction.</para>
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that should be regurlary checked for cancellation.
            If cancellation is detected, the task has to be stopped.</param>
            <returns>A task that will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class if
            cancellation does not get requested.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/> simulating a risky operation
            that might fail.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation._numberOfFails">
            <summary>
            The number of failing runs this operation needs to produce.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation._numberOfRuns">
            <summary>
            The number of calls to <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)"/> for this instance
            so far.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation"/> class.
            </summary>
            <param name="numberOfFails">The number of times
            <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)"/> will fail with an exception before only 
            producing successful results.
            </param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the algorithm on the given instance.
            <para>As <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation"/> does not specify any algorithm,
            the task will simply either initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class or throw an
            exception if depending on the values of <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation._numberOfFails"/> and <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation._numberOfRuns"/>.</para>
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that should be regurlary checked for cancellation.
            If cancellation is detected, the task has to be stopped.</param>
            <returns>A task that will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> or throw an 
            <see cref="T:System.InvalidOperationException"/> if less than <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.RiskyOperation._numberOfFails"/> failures have been 
            produced so far.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3">
            <summary>
            A generic implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> that takes a <see cref="T:System.Func`1"/>
            to generate <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/> regardless of the given parameters.
            </summary>
            <typeparam name="TTargetAlgorithm">Type of the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/> to generate.</typeparam>
            <typeparam name="TInstance">Type of instances the target algorithm accepts.
            Must be a subtype of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceBase"/>.</typeparam>
            <typeparam name="TResult">Type of results the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/> produces.
            Must be a subtype of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/>.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3._targetAlgorithmCreator">
            <summary>
            Function which generates an instance of the class <typeparamref name="TTargetAlgorithm"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3.#ctor(System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3"/> class.
            </summary>
            <param name="targetAlgorithmCreator">Function which generates an instance oft he class
            <typeparamref name="TTargetAlgorithm"/>.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3.CreatedTargetAlgorithms">
            <summary>
            Gets all target algorithms that have been created by this factory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TargetAlgorithmFactory`3.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures the target algorithm using the given parameters.
            In this case, the parameters are simply ignored.
            </summary>
            <param name="parameters">The parameters to configure the target algorithm with.
            Will be ignored.</param>
            <returns>The configured target algorithm.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance">
            <summary>
            An instance used for testing.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance._name">
            <summary>
            The instance's name.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/> class.
            </summary>
            <param name="name">The instance's name.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representing this instance.
            </summary>
            <returns>The instance name.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current instance by comparing
            <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance._name"/>.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns>True iff the object is equal to this instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>.
            </summary>
            <returns>A hash code for this <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult">
            <summary>
            A simple class implementing <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class.
            </summary>
            <param name="runtime">The runtime to store.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult"/> class.
            </summary>
            <param name="runtimeMilliseconds">Runtime in milliseconds.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/> that always returns the
            integer value of the parameter with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> regardless of the
            <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName">
            <summary>
            The name of the integer parameter that will get extracted.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue._parameters">
            <summary>
            All parameters this algorithm was configured with.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.#ctor(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue"/> class.
            </summary>
            <param name="parameters">The parameters to configure with.
            Should include an integer parameter with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.Run(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the algorithm on the given instance.
            <para>For this class, the task will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class with
            the value of the parameter with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> stored in <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue._parameters"/>.
            </para>
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that should be regurlary checked for cancellation.
            If cancellation is detected, the task has to be stopped.</param>
            <returns>A task that will initialize a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class with the
            value of the parameter with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> stored in <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue._parameters"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValueCreator">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>
            that forwards all parameters to the new <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue"/> instance.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValueCreator.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures the target algorithm using the given parameters.
            </summary>
            <param name="parameters">The parameters to configure the target algorithm with.
            Should include an integer value with key <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/>.</param>
            <returns>The configured target algorithm.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> with a runtime of 0 and the possibility to store an
            integer value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class.
            </summary>
            <param name="value">The value to store.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult.Value">
            <summary>
            Gets the stored value.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult.ToString">
            <summary>
            Returns the string representation of the object.
            </summary>
            <returns>The stored value as string.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1">
            <summary>
            An implementation of <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> that sorts genomes by descending average integer value.
            </summary>
            <typeparam name="TInstance">The instance type.</typeparam>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult}})">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1.GetGenomesThatCanBeCancelledByRacing(System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1.ComputeEvaluationPriorityOfGenome(Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult},System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1.GetMetricRepresentation(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult)">
            <inheritdoc />
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.SortByValue`1.HasValidResultValue(Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.IntegerResult)">
            <summary>
            Checks, if the result has a valid result value.
            </summary>
            <param name="result">The result.</param>
            <returns>True, if the result has a valid result value.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest.ValueIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.Value"/> returns the value provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest.RuntimeIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.Runtime"/> returns the runtime provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest.IsCancelledIsFalseByDefault">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/> returns false by default.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest.ToStringIsCorrectForNonCancelledResult">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.ToString"/> returns a representation like
            'Runtime: 42 ms, Value: 2.5' if <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/> is false.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ContinuousResultTest.ToStringIsCorrectForCancelledResult">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.ToString"/> returns a representation like
            'Cancelled after 42 ms with value set to 2.5' for a cancelled result.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ResultBaseTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ResultBaseTest.CancelledResultIsMarkedAsCancelled">
            <summary>
            Checks that the result yielded by <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.CreateCancelledResult(System.TimeSpan)"/>
            returns true for <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.ResultBaseTest.CancelledResultReturnsCorrectRuntime">
            <summary>
            Checks that the result yielded by <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.CreateCancelledResult(System.TimeSpan)"/>
            returns the runtime provided on construction when <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.Runtime"/> is
            requested.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.RuntimeResultTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.RuntimeResultTest.RuntimeIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.Runtime"/> returns the value provided on construction.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.RuntimeResultTest.IsCancelledIsFalseByDefault">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.IsCancelled"/> returns false by default.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.RuntimeResultTest.ToStringIsCorrectForNonCancelledResult">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.ToString"/> returns a representation like '42 ms' if a 
            runtime was set.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.Results.RuntimeResultTest.ToStringIsCorrectForCancelledResult">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ResultBase`1.ToString"/> returns a representation like 'Cancelled after 42 ms'
            for a cancelled result.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.sorter">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1"/> sorter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.Instances">
            <summary>
            A set of test instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.SortReturnsGenomeWithLowerAverageRuntimeFirst">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult}})"/>
            returns the genome with lower average runtime first if the number of provided results is the same for both
            genomes.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.SortCanHandleDifferentNumberOfRunsPerGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult}})"/>
            returns the genome with lower average runtime first even if the number of provided results is different
            for the genomes and the one with lower average runtime has a higher runtime sum.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.SortCanHandleDifferentNumberOfRunsPerGenome2">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult}})"/>
            returns the genome with more solved instances first, even if they are on average slower than the results of a genome with less solved instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.GetMetricRepresentationReturnsSecondsForSuccessfulRun">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.GetMetricRepresentation(Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult)"/> returns the total number of seconds for a
            successful <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.GetMetricRepresentationAddsPenalizationForCancelledRun">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByRuntime`1.GetMetricRepresentation(Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult)"/> returns the total number of seconds
            penalized with the corresponding penalization factor for a cancelled <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Results.RuntimeResult"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByRuntimeTest.CreateStats(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance},System.Func{System.Int32,System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            Creates genome stats for testing.
            </summary>
            <param name="genome">The genome.</param>
            <param name="instances">The instances.</param>
            <param name="indexToRuntime">The function to generate a runtime by <paramref name="instances"/> index.</param>
            <param name="numInstancesToUse">The number of instances to add to the stats from the given list.</param>
            <returns>The genome stats.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.ascendingSorter">
            <summary>
            The ascending <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1"/> sorter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.descendingSorter">
            <summary>
            The descending <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1"/> sorter used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest._instances">
            <summary>
            A set of 10 test instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.GetMetricRepresentationReturnsValue">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.GetMetricRepresentation(Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult)"/> returns <see cref="P:Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult.Value"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.AscendingSorterReturnsGenomeWithLowerAverageValueFirst(System.Boolean)">
            <summary>
            Checks that ascending <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}})"/>
            returns the genome with lower average value first.
            And vice versa for descending <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}})"/>.
            </summary>
            <param name="sortAscending">Indicates whether to sort ascending or descending.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.AscendingSorterHandlesDifferentNumberOfRunsPerGenomeCorrectly(System.Boolean)">
            <summary>
            Checks that ascending <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}})"/>
            returns the genome with the higher number of valid results first, even if it has a higher average value.
            </summary>
            <param name="sortAscending">Indicates whether to sort ascending or descending.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.SortByValueHandlesInvalidResultsCorrectly(System.Boolean)">
            <summary>
            Checks that ascending/descending <see cref="M:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.SortByValue`1.Sort(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.ImmutableGenomeStats{`0,Optano.Algorithm.Tuner.TargetAlgorithm.Results.ContinuousResult}})"/> handles invalid results correctly.
            </summary>
            <param name="sortAscending">Indicates whether to sort ascending or descending.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.RunEvaluators.SortByValueTest.CreateStats(Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Generic.IReadOnlyList{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance},System.Func{System.Int32,System.Double},System.Nullable{System.Int32})">
            <summary>
            Creates genome stats for testing.
            </summary>
            <param name="genome">The genome.</param>
            <param name="instances">The instances.</param>
            <param name="indexToResult">A function to provide a result by instance index.</param>
            <param name="numInstancesToUse">The number of instances to use from the list.</param>
            <returns>The genome stats.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> which uses predefined values to set for
            <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> instead of creating totally random genomes in
            <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.CreateRandomGenome(System.Int32)"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder._values">
            <summary>
            The values to use for the next calls of <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.CreateRandomGenome(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.#ctor(Optano.Algorithm.Tuner.Parameters.ParameterTree,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder"/> class.
            </summary>
            <param name="parameterTree">The parameter tree.</param>
            <param name="configuration">The configuration.</param>
            <param name="values">Values to use for calls of <see cref="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.CreateRandomGenome(System.Int32)"/>.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.CreateRandomGenome(System.Int32)">
            <summary>
            Creates a random genome with the specified age, then changes the gene
            <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.ValueConsideration.ExtractIntegerValue.ParameterName"/> to one specified by <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder._values"/>.
            </summary>
            <param name="age">The new genome's age.</param>
            <returns>The created genome.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder.CreateDefaultGenome(System.Int32)">
            <summary>
            Only use genomes with <see cref="F:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.ValueGenomeBuilder._values"/>. Never use default.
            </summary>
            <param name="age">The desired age.</param>
            <returns>A value genome.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TestBase">
            <summary>
            Provides useful abilities for test classes.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TestBase.ActorSystemName">
            <summary>
            Name for the actor system employed in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TestBase._lock">
            <summary>
            Lock to make sure that only one initialization / cleanup runs at a time.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.TestBase"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.TestBase.ActorSystem">
            <summary>
            Gets or sets the actor system employed in tests.
            Might be <c>null</c>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.Dispose">
            <summary>
            Resets the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> and <see cref="T:Optano.Algorithm.Tuner.Logging.LoggingHelper"/>.
            Calls <see cref="M:Optano.Algorithm.Tuner.Tests.TestBase.CleanupDefault"/> afterwards.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.Seed">
            <summary>
            Returns a seed.
            </summary>
            <returns>The seed.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.GetDefaultParameterTree">
            <summary>
            Creates a tree containing two integer parameter nodes.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.GetDefaultAlgorithmTunerConfiguration">
            <summary>
            Creates a slightly adjusted default config for testing.
            </summary>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/>.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.CleanupDefault">
            <summary>
            Optional cleanup-steps that are executed after Resetting the Randomizer.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.DeleteExportDirectory">
            <summary>
            Deletes the "export" directory that might have been created while testing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.DeleteStatusDirectory">
            <summary>
            Deletes the "status" directory that might have been created while testing.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestBase.DeleteCsvFiles">
            <summary>
            Deletes all .csv files that might have been created while testing.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.TestUtils">
            <summary>
            Contains utility methods that are helpful in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TestUtils.NonParallelCollectionGroupOneName">
            <summary>
            The name for the first test collection which should not be executed in parallel, e.g. because:
            <para>- they may try to access the same status file.</para>
            <para>- they may try to use the same port for an actor system.</para>
            <para>- they modify the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> singleton.</para>
            <para>- they interact with I/O, e.g. by reading output.</para>
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.TestUtils.NonParallelCollectionGroupTwoName">
            <summary>
            The name for the second test collection which should not be executed in parallel, e.g. because:
            <para>- they may try to access the same status file.</para>
            <para>- they may try to use the same port for an actor system.</para>
            <para>- they modify the <see cref="T:Optano.Algorithm.Tuner.Randomizer"/> singleton.</para>
            <para>- they interact with I/O, e.g. by reading output.</para>
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestUtils.Equals(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Checks that <paramref name="value"/> equals <paramref name="expected"/> within a certain tolerance.
            </summary>
            <param name="value">The value.</param>
            <param name="expected">The expected value.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="additionalInformation">The additional information to write on failure.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestUtils.SetsAreEquivalent``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks that the given sets contain the same items. Order does not matter.
            </summary>
            <typeparam name="T">The type of both sets' items.</typeparam>
            <param name="set1">First set.</param>
            <param name="set2">Second set.</param>
            <returns>Whether or not the sets are equivalent.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestUtils.PrintList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Prints a list in the form { item1, item2, item3, item4 }.
            </summary>
            <typeparam name="T">The type of the list items.</typeparam>
            <param name="list">The list to print.</param>
            <returns>A <see cref="T:System.String"/> representing the given list.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestUtils.CheckOutput(System.Action,System.Action{System.String})">
            <summary>
            Checks output on invoking a certain action.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="check">Checks to do on the output.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.TestUtils.InitializeLogger">
            <summary>
            Initializes the <see cref="N:NLog"/> logger with a config that is suitable for tests.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest._parameterTree">
            <summary>
            Structure representing the tuneable parameters.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/>
            to score the target algorithm run results.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest._generationEvaluationActor">
            <summary>
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3" />.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest._resultStorageActor">
            <summary>
            An <see cref="T:Akka.Actor.IActorRef" /> to a <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2" />
            which knows about all executed target algorithm runs and their results.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ConstructorThrowsForMissingGenerationEvaluationActor">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a reference to a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.Evaluation.GenerationEvaluationActor`3"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ConstructorThrowsForMissingResultStorageActor">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a reference to a
            <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.ResultStorageActor`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ConstructorThrowsForMissingRunEvaluator">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a reference to a
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryThrowsForMissingHistory">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without any <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryThrowsForMissingTrainingInstancesSet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a set of training instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryThrowsForEmptySetOfTrainingInstances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with an empty set of training instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryThrowsForMissingTestInstancesSet">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a set of test instances.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryScoresGenerationInformationObjects">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> adds the
            correct scores to objects.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.ScoreInformationHistoryScoresGenerationInformationObjectsWithoutTestInstances">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformationScorer`2.ScoreInformationHistory(System.Collections.Generic.IList{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})"/> adds the
            correct scores to objects also if no test instances exist.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationScorerTest.CreateInstances(System.Int32,System.Int32)">
            <summary>
            Creates <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>s with different consecutive seeds.
            </summary>
            <param name="startSeed">The start seed.</param>
            <param name="number">The number of instances to create.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceSeedFile"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.Generation">
            <summary>
            A valid generation number.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.TotalNumberOfEvaluations">
            <summary>
            A valid number of evaluations.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest._strategy">
            <summary>
            A strategy type.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest._incumbent">
            <summary>
            An incumbent genome. Initialized in constructor to be 'interesting'.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ConstructorThrowsForNegativeGenerationNumber">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative generation number.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ConstructorThrowsForNegativeTotalElapsedTime">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative total elapsed time.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ConstructorThrowsForNegativeNumberEvaluations">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>'s constructor throws a
            <see cref="T:System.ArgumentOutOfRangeException"/> if called with a negative number of evaluations.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ConstructorThrowsForMissingStrategy">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without a strategy type.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ConstructorThrowsForMissingIncumbent">
            <summary>
            Checks that <see cref="T:Optano.Algorithm.Tuner.Tracking.GenerationInformation"/>'s constructor throws a
            <see cref="T:System.ArgumentNullException"/> if called without an incumbent genome.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ToStringContainsAllInformation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformation.ToString"/> contains all relevant information.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.GenerationInformationTest.ToStringWorksForMissingInformation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.GenerationInformation.ToString"/> works even if no scores are present.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Tracking.LogWriter`2"/> class.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFilePath">
            <summary>
            Path to log file that gets written in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.EmptyResults">
            <summary>
            An empty instance of <see cref="T:Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults`2"/>, useful in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest._parameterTree">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest._configuration">
            <summary>
            <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest._genomeBuilder">
            <summary>
            A <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> to create <see cref="T:Optano.Algorithm.Tuner.Genomes.Genome"/>s used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest._writer">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Tracking.LogWriter`2"/> used in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.Dispose">
            <summary>
            Resets randomizer and deletes possibly created log files.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.ConstructorThrowsOnMissingParameterTree">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no parameter tree is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.ConstructorThrowsOnMissingConfiguration">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no configuration is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFinishedGenerationThrowsOnZeroEvaluations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> throws an 
            <see cref="T:System.ArgumentOutOfRangeException"/> if the number of evaluations is provided as zero.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFinishedGenerationThrowsOnMissingGenome">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> throws an 
            <see cref="T:System.ArgumentNullException"/> if no genome is provided on call.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFinishedGenerationThrowsOnMissingResults">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> throws an 
            <see cref="T:System.ArgumentNullException"/> if no results are provided on call.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.GenerationIsLoggedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> logs the finished generation to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.NumberEvaluationsIsLoggedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> logs the total number of evaluations if an
            evaluation limit exists.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.NumberEvaluationsIsNotLoggedOnUnlimitedEvaluations">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> does not log the total number of evaluations
            without an evaluation limit.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.ElapsedTimeIsLoggedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> correctly logs the elapsed time to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.FittestGenomeIsLoggedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> correctly logs the fittest genome to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.ResultsAreLoggedCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> correctly logs the fittest genome's results 
            to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFinishedGenerationThrowsForUnknownDirectory">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> throws a
            <see cref="T:System.IO.DirectoryNotFoundException"/> if called with a log file path to a non-existing directory.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.LogFinishedGenerationOnlyDeletesLastLogAfterWriteFinished">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.LogWriter`2.LogFinishedGeneration(System.Int32,System.Int32,Optano.Algorithm.Tuner.Genomes.Genome,Optano.Algorithm.Tuner.GenomeEvaluation.ResultStorage.Messages.GenomeResults{`0,`1})"/> only replaces a log file after a new one was
            completed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.LogWriterTest.CreateParameterTree">
            <summary>
            Creates a parameter tree which root is an OR node "decision". If that is true, a value node "a" is 
            evaluated, otherwise a value node "b".
            </summary>
            <returns>The created parameter tree.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest">
            <summary>
            Contains tests for the <see cref="T:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker"/> class.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest.TrackConvergenceBehaviorThrowsForMissingRunEvaluator">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.TrackConvergenceBehavior``2(Optano.Algorithm.Tuner.GenomeEvaluation.IncumbentGenomeWrapper{``1},Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator{``0,``1})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest.ExportGenerationHistoryWritesOutAllInformation">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportGenerationHistory(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation})"/> correctly writes out all information
            to a file named 'generationHistory.csv'.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest.ExportGenerationHistoryThrowsForMissingHistory">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportGenerationHistory(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation})"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without such a history.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest.ExportAverageIncumbentScoresDeterminesScoresCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportAverageIncumbentScores(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Int32)"/> correctly identifies the latest
            scores by evaluation number and writes them out to a file named 'scores.csv'.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.RunStatisticTrackerTest.ExportAverageIncumbentScoresThrowsForMissingHistory">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Tracking.RunStatisticTracker.ExportAverageIncumbentScores(System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation},System.Int32)"/> throws a
            <see cref="T:System.ArgumentNullException"/> if called without a generation information history.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest._population">
            <summary>
            Population that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest._informationHistory">
            <summary>
            Information history that can be used in tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest._configuration">
            <summary>
            Configuration that can be used in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.StatusFilePath">
            <summary>
            Gets path to status file that gets written in some tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.DummyTree">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to use in tests.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.DummyEngineering">
            <summary>
            Gets or sets the <see cref="T:Optano.Algorithm.Tuner.MachineLearning.GeneticEngineering`3"/> to use in tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.ConstructorThrowsOnMissingPopulation">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no population is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.ConstructorThrowsOnMissingAlgorithmTunerConfiguration">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no configuration is provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.ConstructorThrowsOnMissingInformationHistory">
            <summary>
            Checks that the constructor throws an <see cref="T:System.ArgumentNullException"/> if no information history is
            provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.GenerationIsSetCorrectly">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.Generation"/>
            returns the value provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.PopulationIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.Population"/>
            returns the population provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.AlgorithmTunerConfigurationIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.Configuration"/>
            returns the configuration provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.CurrentUpdateStrategyIndexIsSetCorectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.CurrentUpdateStrategyIndex"/>
            returns the strategy index provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.InformationHistoryIsSetCorrectly">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.InformationHistory"/>
            returns the history provided on initialization.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.SetRunResultsSetsRunResults">
            <summary>
            Checks that
            <see cref="P:Optano.Algorithm.Tuner.Tracking.Status`5.RunResults"/>
            returns the run results provided by
            <see cref="M:Optano.Algorithm.Tuner.Tracking.Status`5.SetRunResults(System.Collections.Immutable.ImmutableDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Immutable.ImmutableDictionary{`0,`1}})"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.SetRunResultsOverwritesOldResults">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tracking.Status`5.SetRunResults(System.Collections.Immutable.ImmutableDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Immutable.ImmutableDictionary{`0,`1}})"/>
            overwrites existing run results.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.WriteToFileWithoutRunResultsThrowsException">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tracking.Status`5.WriteToFile(System.String)"/>
            throws an <see cref="T:System.InvalidOperationException"/> if
            called before
            <see cref="M:Optano.Algorithm.Tuner.Tracking.Status`5.SetRunResults(System.Collections.Immutable.ImmutableDictionary{Optano.Algorithm.Tuner.Genomes.ImmutableGenome,System.Collections.Immutable.ImmutableDictionary{`0,`1}})"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.ReadFromFileDeserializesCorrectly">
            <summary>
            Checks that <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.ReadFromFile``1(System.String)"/> correctly deserializes a
            status object written to file by <see cref="M:Optano.Algorithm.Tuner.Serialization.StatusBase.WriteToFile(System.String)"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.InitializeDefault">
            <summary>
            Called before every test case.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.CreateTestStatus">
            <summary>
            Creates a status object which can be (de)serialized successfully.
            </summary>
            <returns>The created object.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.CreateRunResultsForTest">
            <summary>
            Creates run results for two genomes and two test instances.
            </summary>
            <returns>The created run results.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tracking.StatusTest.CreateStatus(System.Int32,Optano.Algorithm.Tuner.Genomes.Population,Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.Int32,System.Collections.Generic.List{Optano.Algorithm.Tuner.Tracking.GenerationInformation})">
            <summary>
            Creates a <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/>.
            For everything not provided, dummy values are added.
            </summary>
            <param name="generation">Generation to use.</param>
            <param name="population"><see cref="T:Optano.Algorithm.Tuner.Genomes.Population"/> to use.</param>
            <param name="configuration"><see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to use.</param>
            <param name="currentUpdateStrategyIndex">
            Index of the current <see cref="T:Optano.Algorithm.Tuner.PopulationUpdateStrategies.IPopulationUpdateStrategy`2"/>.
            </param>
            <param name="informationHistory">Information history to use.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Tracking.Status`5"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest">
            <summary>
            Contains tests for <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.NoopFactory">
            <summary>
            An <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> which creates an <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithm`2"/>
            that takes empty instances and returns empty results.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.SimpleParameterTree">
            <summary>
            A simple parameter tree that represents a single integer value.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest._statusFilePath">
            <summary>
            Path to status file that gets written in some tests.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest._logFilePath">
            <summary>
            Path to log file that gets written in some tests.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingTargetAlgorithmFactoryThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a target algorithm
            factory throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingRunEvaluatorThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a run evaluator.
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingTrainingInstancesThrowsException">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a set of training instances
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingTestInstancesThrowsException">
            <summary>
            Verifies that initializing an instance of the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a set of test instances
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingParameterTreeThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a parameter tree
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingConfigurationThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class without a configuration
            throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.MissingGenomeBuilderThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class with a genome builder set to
            null throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.NotEnoughTrainingInstancesThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class with a smaller number of
            training instances than the maximum number given in the <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> throws an
            <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.ParameterTreeWithoutParametersThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class with a parameter tree that does
            not contain any parameters throws an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.ParameterTreeWithDuplicatedIdentifiersThrowsException">
            <summary>
            Verifies that initializing an instance of the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> class with a parameter tree that
            contains duplicate identifiers throws an <see cref="T:System.ArgumentException"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.ValidAlgorithmTunerObjectCanBeBuild">
            <summary>
            Checks that
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>'s
            constructor produces an object without throwing an exception
            when valid parameters are provided.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerRunReturnsResult">
            <summary>
            Checks that the
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.Run"/>
            command works in a way that it actually returns a result.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.EvaluationLimitForcesTermination">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EvaluationLimit"/> can cut a run short.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.EvaluationLimitIsRespectedWhenUsingStatusDump">
            <summary>
            Checks that <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.EvaluationLimit"/> is observed when using a status dump
            which has already exceeded the limit.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.PopulationUpdateStrategiesAreSwappedWhenTerminated">
            <summary>
            Checks that
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            switches between update strategies when they terminate.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.TerminatedPopulationUpdateStrategiesAreNotSelected">
            <summary>
            Checks that
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            does not switch to strategies which are already terminated.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.RunnerUpdatesBasePopulationOnStrategyTermination">
            <summary>
            Checks that
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            updates its population, at least when strategies terminate.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.LogIsWrittenAfterEveryGeneration">
            <summary>
            Checks that a log file is written after every generation.
            This test only works on a Windows machine, since there are problems with FileSystemWatcher on other OS.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.LogIsCalledWithCorrectParameters">
            <summary>
            Checks that the log file contains the correct number of evaluations and the genome that is currently
            classified as best.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CorrectInformationHistoryIsWrittenEveryGeneration">
            <summary>
            Checks that a correct information history is written to status every generation.
            This test only works on a Windows machine, since there are problems with FileSystemWatcher on other OS.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.StatusIsDumpedAfterEveryGeneration">
            <summary>
            Checks that status is dumped to file after every generation.
            This test only works on a Windows machine, since there are problems with FileSystemWatcher on other OS.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.DumpedStatusHasNoEmptyProperties">
            <summary>
            Checks that all properties important for the status have been dumped to file.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CheckRunStartsWithStatusDumpIfMethodGotCalled">
            <summary>
            Checks that tuning can continue with a status dump if
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)"/>
            is called.
            This test only works on a Windows machine, since there are problems with FileSystemWatcher on other OS.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.OldStatusFilesAreZippedIfFlagIsSet">
            <summary>
            Checks that old status files are zipped after every generation if
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ZipOldStatusFiles"/> is set to <c>true</c>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CompleteAndExportGenerationHistoryDoesOnlyWriteScoresForMetricRunEvaluators">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CompleteAndExportGenerationHistory"/>
            writes a "generationHistory.csv" file, and also a "scores.csv" file, but the latter only if the run evaluator is a
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IMetricRunEvaluator`2"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CompleteAndExportGenerationHistoryDoesOnlyWriteScoresIfOptionIsActivated">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CompleteAndExportGenerationHistory"/>
            writes a "generationHistory.csv" file, and also a "scores.csv" file, but the latter only if
            <see cref="P:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration.ScoreGenerationHistory"/> is activated.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CompleteAndExportGenerationHistoryUsesCorrectData">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.CompleteAndExportGenerationHistory"/>
            uses the correct instances, information generation, and evaluation limit.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CheckUseStatusDumpThrowsIfNotCalledBeforeTuningStart">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)"/>
            throws an <see cref="T:System.InvalidOperationException"/> if called after tuning completed.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CheckUseStatusDumpThrowsIfConfigurationsNotCompatible">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)"/>
            throws an <see cref="T:System.InvalidOperationException"/> if
            the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> object's configuration and the configuration stored in the status file are
            incompatible.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CheckUseStatusDumpIgnoresContinuityIssuesWhenStrictCheckingIsTurnedOff">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)"/>
            does not throw an <see cref="T:System.InvalidOperationException"/> if the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> object's configuration and the
            configuration stored in the status file are incompatible, but strict configuration checking is turned off.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CheckUseStatusDumpStillChecksTechnicalParametersWhenStrictCheckingIsTurnedOff">
            <summary>
            Checks that
            <see cref="M:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6.UseStatusDump(System.String)"/>
            does throw
            an <see cref="T:System.InvalidOperationException"/> if the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> object's configuration and the
            configuration stored in the status file are technically incompatible and strict configuration checking is
            turned off.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.InitializeDefault">
            <summary>
            Called before every test.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CleanupDefault">
            <summary>
            Deletes the status file(s) if any was written.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.BuildEmptyInstances(System.Int32)">
            <summary>
            Builds empty <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s named 1, 2, 3, etc.
            </summary>
            <param name="number">Number of test instances to build.</param>
            <returns>The instances.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.CreateSmallAlgorithmTuner(System.Int32,System.Boolean)">
            <summary>
            Creates a fast running <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> instance with a single
            training instance and mainly default parameters.
            </summary>
            <param name="generations">The number of generations to execute.</param>
            <param name="allowConfigChangeForSubsequentRun">Whether subsequent "continue" runs should override the
            configuration.</param>
            <returns>The created <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.ReadAlgorithmTunerStatusFile">
            <summary>
            Reads the algorithm tuner status from <see cref="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest._statusFilePath"/>.
            </summary>
            <returns>The status.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder">
            <summary>
            Short form of <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> using
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionRandomForest`1"/> as learner model,
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.RandomForest.RandomForestTopPerformerFocus.GenomePredictionForestModel`1"/> as predictor model, and
            <see cref="T:Optano.Algorithm.Tuner.MachineLearning.TrainingData.SamplingStrategies.ReuseOldTreesStrategy"/> as sampling strategy.
            </summary>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3">
            <summary>
            Convenience class for building a <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> instance.
            Specifies default constructor parameters.
            </summary>
            <typeparam name="TLearnerModel">The type of learning model.</typeparam>
            <typeparam name="TPredictorModel">The type of prediction model.</typeparam>
            <typeparam name="TSamplingStrategy">The type of sampling strategy for trees.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._targetAlgorithmFactory">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._runEvaluator">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._trainingInstances">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s to provide for training.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._testInstances">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s to provide for testing.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._parameterTree">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._configuration">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to provide.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3._genomeBuilder">
            <summary>
            The <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> to provide.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.ExecuteAlgorithmTunerConstructor(System.Boolean)">
            <summary>
            Executes <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/>'s constructor using the configured arguments.
            </summary>
            <param name="specifyGenomeBuilder">Whether or not to use the constructor which expects a <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/>.</param>
            <returns>The result of the constructor execution.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetTargetAlgorithmFactory(Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult})">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/> to provide to
            the <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`3"/> constructor.
            Default is a factory which creates the same noop target algorithm <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.NoOperation"/>
            for all inputs.
            </summary>
            <param name="targetAlgorithmFactory">The target algorithm factory to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetRunEvaluator(Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance,Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestResult})">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.RunEvaluators.IRunEvaluator`2"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default is an evaluator which simply keeps the supplied order.
            </summary>
            <param name="runEvaluator">The evaluator to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetTrainingInstances(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance})">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s to provide for training to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default are 100 <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s.
            </summary>
            <param name="instances">The training instances to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetTestInstances(System.Collections.Generic.IEnumerable{Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance})">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s to provide for testing to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default are 100 <see cref="T:Optano.Algorithm.Tuner.Tests.TargetAlgorithm.InterfaceImplementations.TestInstance"/>s.
            </summary>
            <param name="instances">The test instances to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetParameterTree(Optano.Algorithm.Tuner.Parameters.ParameterTree)">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Parameters.ParameterTree"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default is a simple parameter tree representing a single integer value.
            </summary>
            <param name="parameterTree">The parameter tree to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetConfiguration(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration)">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default is the default <see cref="T:Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration"/> with 1 core.
            </summary>
            <param name="configuration">The configuration to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder`3.SetGenomeBuilder(Optano.Algorithm.Tuner.Genomes.GenomeBuilder)">
            <summary>
            Sets the <see cref="T:Optano.Algorithm.Tuner.Genomes.GenomeBuilder"/> to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.
            Default is null.
            </summary>
            <param name="genomeBuilder">The genome builder to provide to the
            <see cref="T:Optano.Algorithm.Tuner.Tuning.AlgorithmTuner`6"/>
            constructor.</param>
            <returns>The <see cref="T:Optano.Algorithm.Tuner.Tests.Tuning.AlgorithmTunerTest.AlgorithmTunerBuilder"/> in its new state.</returns>
        </member>
    </members>
</doc>
