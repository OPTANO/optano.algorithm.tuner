// https://sequencediagram.org/
title Evaluation with MiniTournamentGenerationEvaluationStrategy
participant GenerationEvaluationActor
participant ResultStorageActor
participant MiniTournamentManager
participant EvaluationActor

rbox over GenerationEvaluationActor:Ready
rbox over EvaluationActor:Ready

[-#blue>GenerationEvaluationActor:<color:#blue>GenerationEvaluation
activate GenerationEvaluationActor
rbox over GenerationEvaluationActor:FetchingResultsFromStorage

loop FORALL g in Genomes
GenerationEvaluationActor-#blue>ResultStorageActor:<color:#blue>GenomeResultsRequest(g)
activate ResultStorageActor
ResultStorageActor--#blue>GenerationEvaluationActor:<color:#blue>GenomeResults(g)
deactivate ResultStorageActor
GenerationEvaluationActor->MiniTournamentManager:Update GenomeStats(g,Results)

activate MiniTournamentManager
note right of MiniTournamentManager:cf. UML 003
MiniTournamentManager->MiniTournamentManager:Update GenomePriorityQueue\n[+ check for racing condition]
MiniTournamentManager-->GenerationEvaluationActor:
deactivate MiniTournamentManager
end
rbox over GenerationEvaluationActor:Working

GenerationEvaluationActor-#blue>EvaluationActor:<color:#blue>Poll
deactivate GenerationEvaluationActor
activate EvaluationActor
EvaluationActor--#blue>(2)GenerationEvaluationActor:<color:#blue>Accept
activate GenerationEvaluationActor
deactivate EvaluationActor

loop WHILE NOT IsGenerationFinished
GenerationEvaluationActor->MiniTournamentManager:Get next evaluation
activate MiniTournamentManager
MiniTournamentManager->MiniTournamentManager:Pop next GIP\n[GenomeInstancePair]
MiniTournamentManager->MiniTournamentManager:Update GenomePriorityQueue
MiniTournamentManager-->GenerationEvaluationActor:GIP
deactivate MiniTournamentManager
GenerationEvaluationActor-#blue>EvaluationActor:<color:#blue>GenomeInstancePairEvaluation(GIP)
activate EvaluationActor
rbox over EvaluationActor:Evaluating

EvaluationActor->(2)EvaluationActor:Evaluate GIP

rbox over EvaluationActor:Ready

EvaluationActor--#blue>(2)GenerationEvaluationActor:<color:#blue>EvaluationResult(GIP)
deactivate EvaluationActor

GenerationEvaluationActor->MiniTournamentManager:Update GenomeStats(GIP,Result)
activate MiniTournamentManager
note right of MiniTournamentManager:cf. UML 003
MiniTournamentManager->MiniTournamentManager:Update GenomePriorityQueue\n[+ check for racing condition]
MiniTournamentManager-->GenerationEvaluationActor:
deactivate MiniTournamentManager
end

GenerationEvaluationActor--#blue>[:<color:#blue>GgaResult
deactivate GenerationEvaluationActor
rbox over GenerationEvaluationActor:Ready
